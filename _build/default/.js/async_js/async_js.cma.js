// Generated by js_of_ocaml
//# buildInfo:effects=false, use-js-string=false, version=5.0.1
(function
   (globalThis)
   {"use strict";
    var
     runtime=globalThis.jsoo_runtime,
     caml_js_from_array=runtime.caml_js_from_array,
     caml_js_object=runtime.caml_js_object,
     caml_jsstring_of_string=runtime.caml_jsstring_of_string,
     caml_register_global=runtime.caml_register_global,
     caml_string_of_jsbytes=runtime.caml_string_of_jsbytes,
     caml_string_of_jsstring=runtime.caml_string_of_jsstring,
     caml_wrap_exception=runtime.caml_wrap_exception;
    function caml_call1(f,a0)
     {return f.length == 1?f(a0):runtime.caml_call_gen(f,[a0])}
    function caml_call2(f,a0,a1)
     {return f.length == 2?f(a0,a1):runtime.caml_call_gen(f,[a0,a1])}
    function caml_call3(f,a0,a1,a2)
     {return f.length == 3?f(a0,a1,a2):runtime.caml_call_gen(f,[a0,a1,a2])}
    function caml_call4(f,a0,a1,a2,a3)
     {return f.length == 4
              ?f(a0,a1,a2,a3)
              :runtime.caml_call_gen(f,[a0,a1,a2,a3])}
    function caml_call5(f,a0,a1,a2,a3,a4)
     {return f.length == 5
              ?f(a0,a1,a2,a3,a4)
              :runtime.caml_call_gen(f,[a0,a1,a2,a3,a4])}
    function caml_call6(f,a0,a1,a2,a3,a4,a5)
     {return f.length == 6
              ?f(a0,a1,a2,a3,a4,a5)
              :runtime.caml_call_gen(f,[a0,a1,a2,a3,a4,a5])}
    function caml_call7(f,a0,a1,a2,a3,a4,a5,a6)
     {return f.length == 7
              ?f(a0,a1,a2,a3,a4,a5,a6)
              :runtime.caml_call_gen(f,[a0,a1,a2,a3,a4,a5,a6])}
    function caml_call8(f,a0,a1,a2,a3,a4,a5,a6,a7)
     {return f.length == 8
              ?f(a0,a1,a2,a3,a4,a5,a6,a7)
              :runtime.caml_call_gen(f,[a0,a1,a2,a3,a4,a5,a6,a7])}
    function caml_call9(f,a0,a1,a2,a3,a4,a5,a6,a7,a8)
     {return f.length == 9
              ?f(a0,a1,a2,a3,a4,a5,a6,a7,a8)
              :runtime.caml_call_gen(f,[a0,a1,a2,a3,a4,a5,a6,a7,a8])}
    var
     global_data=runtime.caml_get_global_data(),
     cst_src_debug_ml$13=caml_string_of_jsbytes("src/debug.ml"),
     cst_A_B_A_C=caml_string_of_jsbytes(" ((A B) (A C)) "),
     cst_src_debug_ml$8=caml_string_of_jsbytes("src/debug.ml"),
     cst_src_debug_ml$0=caml_string_of_jsbytes("src/debug.ml"),
     cst_src_debug_ml$1=caml_string_of_jsbytes("src/debug.ml"),
     cst$0=caml_string_of_jsbytes(""),
     cst_Async_js_Debug=caml_string_of_jsbytes("Async_js__Debug"),
     cst_async_js=caml_string_of_jsbytes("async_js"),
     cst_src_debug_ml=caml_string_of_jsbytes("src/debug.ml"),
     cst=caml_string_of_jsbytes(""),
     cst_async_js$0=caml_string_of_jsbytes("async_js"),
     cst_src_debug_ml$2=caml_string_of_jsbytes("src/debug.ml"),
     cst_src_debug_ml$3=caml_string_of_jsbytes("src/debug.ml"),
     cst_src_debug_ml$4=caml_string_of_jsbytes("src/debug.ml"),
     cst_src_debug_ml$5=caml_string_of_jsbytes("src/debug.ml"),
     cst_src_debug_ml$6=caml_string_of_jsbytes("src/debug.ml"),
     cst_src_debug_ml$7=caml_string_of_jsbytes("src/debug.ml"),
     cst_0c01ba057ff4b2be6bc7c9d261=
      caml_string_of_jsbytes("0c01ba057ff4b2be6bc7c9d261a1daab"),
     cst_src_debug_ml$9=caml_string_of_jsbytes("src/debug.ml"),
     cst_src_debug_ml$10=caml_string_of_jsbytes("src/debug.ml"),
     cst_src_debug_ml$11=caml_string_of_jsbytes("src/debug.ml"),
     cst_src_debug_ml$12=caml_string_of_jsbytes("src/debug.ml"),
     cst_0c01ba057ff4b2be6bc7c9d261$0=
      caml_string_of_jsbytes("0c01ba057ff4b2be6bc7c9d261a1daab"),
     cst_src_debug_ml$14=caml_string_of_jsbytes("src/debug.ml"),
     cst_src_debug_ml$15=caml_string_of_jsbytes("src/debug.ml"),
     cst_src_debug_ml$16=caml_string_of_jsbytes("src/debug.ml"),
     cst_src_debug_ml$17=caml_string_of_jsbytes("src/debug.ml"),
     cst_0c01ba057ff4b2be6bc7c9d261$1=
      caml_string_of_jsbytes("0c01ba057ff4b2be6bc7c9d261a1daab"),
     cst_async_js$1=caml_string_of_jsbytes("async_js"),
     cst_Async_js_Debug$0=caml_string_of_jsbytes("Async_js__Debug"),
     cst_websocket=caml_string_of_jsbytes("websocket"),
     cst_https=caml_string_of_jsbytes("https:"),
     cst_wss=caml_string_of_jsbytes("wss"),
     cst_ws=caml_string_of_jsbytes("ws"),
     cst_https$0=caml_string_of_jsbytes("https:"),
     cst_RPC_connection_closed_by_c=
      caml_string_of_jsbytes("RPC connection closed by client"),
     cst_BUG_onopen_called_but_read=
      caml_string_of_jsbytes
       ("BUG: onopen called but readyState is CONNECTING"),
     cst_websocket_send_buffer=
      caml_string_of_jsbytes("websocket##send_buffer"),
     cst_websocket_encountered_unex=
      caml_string_of_jsbytes("websocket encountered unexpected error"),
     cst_closed=caml_string_of_jsbytes("closed"),
     cst_connection_failed=caml_string_of_jsbytes("connection failed"),
     cst_WebSocket_s_sexp_Close_cod=
      caml_string_of_jsbytes("WebSocket %s (%{sexp:Close_code.t})"),
     cst$2=caml_string_of_jsbytes(" ("),
     cst_WebSocket=caml_string_of_jsbytes("WebSocket "),
     cst_WebSocket_failed_immediate=
      caml_string_of_jsbytes("WebSocket failed immediately (illegal URI?)"),
     cst_close_reason_was_too_long_=
      caml_string_of_jsbytes
       ("close-reason-was-too-long-or-contains-invalid-utf8"),
     cst_Async_js_Rpc=caml_string_of_jsbytes("Async_js__Rpc"),
     cst_async_js$2=caml_string_of_jsbytes("async_js"),
     cst_src_rpc_ml=caml_string_of_jsbytes("src/rpc.ml"),
     cst$1=caml_string_of_jsbytes(""),
     cst_async_js$3=caml_string_of_jsbytes("async_js"),
     cst_src_rpc_ml$0=caml_string_of_jsbytes("src/rpc.ml"),
     cst_to_int_of_int_round_trip=
      caml_string_of_jsbytes("to_int -> of_int round-trip"),
     cst_async_js$4=caml_string_of_jsbytes("async_js"),
     cst_Async_js_Rpc$0=caml_string_of_jsbytes("Async_js__Rpc"),
     cst_Async_js_Persistent_connec=
      caml_string_of_jsbytes("Async_js__Persistent_connection"),
     cst_async_js$5=caml_string_of_jsbytes("async_js"),
     cst_src_persistent_connection_=
      caml_string_of_jsbytes("src/persistent_connection.ml"),
     cst$3=caml_string_of_jsbytes(""),
     cst_async_js$6=caml_string_of_jsbytes("async_js"),
     cst_async_js$7=caml_string_of_jsbytes("async_js"),
     cst_Async_js_Persistent_connec$0=
      caml_string_of_jsbytes("Async_js__Persistent_connection"),
     cst_No_response_returned_despi=
      caml_string_of_jsbytes
       ("No response returned despite successful request"),
     cst_Request_failed=caml_string_of_jsbytes("Request failed"),
     cst_Timeout=caml_string_of_jsbytes("Timeout"),
     cst_Network_error=caml_string_of_jsbytes("Network error"),
     method_string=caml_string_of_jsbytes("GET"),
     cst$5=caml_string_of_jsbytes("&"),
     cst$6=caml_string_of_jsbytes("?"),
     method_string$0=caml_string_of_jsbytes("POST"),
     cst_Async_js_Http=caml_string_of_jsbytes("Async_js__Http"),
     cst_async_js$8=caml_string_of_jsbytes("async_js"),
     cst_src_http_ml=caml_string_of_jsbytes("src/http.ml"),
     cst$4=caml_string_of_jsbytes(""),
     cst_async_js$9=caml_string_of_jsbytes("async_js"),
     cst_async_js$10=caml_string_of_jsbytes("async_js"),
     cst_Async_js_Http$0=caml_string_of_jsbytes("Async_js__Http"),
     cst_Async_kernel_Monitor_try_w=
      caml_string_of_jsbytes("Async_kernel: Monitor.try_with"),
     cst_Async_kernel_Unhandled_exc=
      caml_string_of_jsbytes("Async_kernel: Unhandled exception"),
     cst_Async_js_Async_js0=caml_string_of_jsbytes("Async_js__Async_js0"),
     cst_async_js$11=caml_string_of_jsbytes("async_js"),
     cst_src_async_js0_ml=caml_string_of_jsbytes("src/async_js0.ml"),
     cst$7=caml_string_of_jsbytes(""),
     cst_async_js$12=caml_string_of_jsbytes("async_js"),
     ready_state_change=caml_string_of_jsbytes("readystatechange"),
     complete=caml_string_of_jsbytes("complete"),
     cst_async_js$13=caml_string_of_jsbytes("async_js"),
     cst_Async_js_Async_js0$0=caml_string_of_jsbytes("Async_js__Async_js0"),
     cst_Async_js=caml_string_of_jsbytes("Async_js"),
     cst_async_js$14=caml_string_of_jsbytes("async_js"),
     cst_src_async_js_ml=caml_string_of_jsbytes("src/async_js.ml"),
     cst$8=caml_string_of_jsbytes(""),
     cst_async_js$15=caml_string_of_jsbytes("async_js"),
     cst_async_js$16=caml_string_of_jsbytes("async_js"),
     cst_Async_js$0=caml_string_of_jsbytes("Async_js"),
     Core_Set=global_data.Core__Set,
     Core_List=global_data.Core__List,
     Js_of_ocaml_Js=global_data.Js_of_ocaml__Js,
     Core_String=global_data.Core__String,
     Core_Array=global_data.Core__Array,
     Core=global_data.Core,
     Expect_test_common_File=global_data.Expect_test_common__File,
     Core_Sexp=global_data.Core__Sexp,
     Assert_failure=global_data.Assert_failure;
    global_data.Sexplib0__Sexp_conv_error;
    var
     Sexplib0_Sexp_conv=global_data.Sexplib0__Sexp_conv,
     Js_of_ocaml_Firebug=global_data.Js_of_ocaml__Firebug,
     Ppx_module_timer_runtime=global_data.Ppx_module_timer_runtime,
     Ppx_bench_lib_Benchmark_accumu=
      global_data.Ppx_bench_lib__Benchmark_accumulator,
     Expect_test_collector=global_data.Expect_test_collector,
     Ppx_inline_test_lib_Runtime=global_data.Ppx_inline_test_lib__Runtime,
     Expect_test_config=global_data.Expect_test_config,
     Inline_test_config=global_data.Inline_test_config,
     Core_Or_error=global_data.Core__Or_error,
     Async_kernel=global_data.Async_kernel,
     Async_rpc_kernel_Transport=global_data.Async_rpc_kernel__Transport,
     Async_rpc_kernel_Pipe_transpor=
      global_data.Async_rpc_kernel__Pipe_transport,
     include=global_data.Async_rpc_kernel__Rpc,
     Core_Info=global_data.Core__Info,
     Async_kernel_Pipe=global_data.Async_kernel__Pipe,
     Js_of_ocaml_Url=global_data.Js_of_ocaml__Url,
     Core_Error=global_data.Core__Error,
     Js_of_ocaml_Typed_array=global_data.Js_of_ocaml__Typed_array,
     Async_kernel_Ivar=global_data.Async_kernel__Ivar,
     Ppx_sexp_conv_lib=global_data.Ppx_sexp_conv_lib,
     Js_of_ocaml_WebSockets=global_data.Js_of_ocaml__WebSockets,
     Js_of_ocaml_Dom=global_data.Js_of_ocaml__Dom,
     Async_kernel_Deferred=global_data.Async_kernel__Deferred,
     Stdlib_List=global_data.Stdlib__List,
     Ppx_compare_lib=global_data.Ppx_compare_lib,
     Uri=global_data.Uri,
     Uri_sexp=global_data.Uri_sexp,
     Base_Sexpable=global_data.Base__Sexpable,
     Async_rpc_kernel_Persistent_co=
      global_data.Async_rpc_kernel__Persistent_connection,
     Async_kernel_Deferred_or_error=
      global_data.Async_kernel__Deferred_or_error,
     Core_Option=global_data.Core__Option,
     Core_Result=global_data.Core__Result,
     Js_of_ocaml_File=global_data.Js_of_ocaml__File,
     Base_Or_error=global_data.Base__Or_error,
     Js_of_ocaml_XmlHttpRequest=global_data.Js_of_ocaml__XmlHttpRequest,
     Js_of_ocaml_Dom_html=global_data.Js_of_ocaml__Dom_html,
     Async_kernel_Scheduler=global_data.Async_kernel__Scheduler,
     Async_kernel_Monitor=global_data.Async_kernel__Monitor,
     Base_Exn=global_data.Base__Exn,
     Core_Time_ns=global_data.Core__Time_ns,
     Core_Float=global_data.Core__Float,
     Core_Stack=global_data.Core__Stack,
     Async_kernel_Clock_ns=global_data.Async_kernel__Clock_ns,
     Async_js=[0];
    caml_register_global(299,Async_js,"Async_js__");
    caml_call1(Ppx_module_timer_runtime[4],cst_Async_js_Debug);
    caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1],cst_async_js);
    caml_call1(Expect_test_collector[5][1],cst_src_debug_ml);
    caml_call2(Ppx_inline_test_lib_Runtime[2],cst_async_js$0,cst);
    var
     _A_=[0,[12,102,[4,0,0,0,0]],caml_string_of_jsbytes("f%d")],
     _B_=[0,[4,0,0,0,0],caml_string_of_jsbytes("%d")],
     _c_=[0,caml_string_of_jsbytes("field2")],
     _d_=[0,caml_string_of_jsbytes("field1")],
     _e_=[0,caml_string_of_jsbytes("Bar")],
     _f_=[0,caml_string_of_jsbytes("Foo")],
     _b_=[0,caml_string_of_jsbytes("some_name")],
     _g_=
      [0,
       [0,caml_string_of_jsbytes("debug")],
       [0,caml_string_of_jsbytes("other string")]],
     _i_=[1,caml_string_of_jsbytes(' "Foo" ')],
     _j_=[0,caml_string_of_jsbytes("")],
     _m_=
      [1,
       caml_string_of_jsbytes
        (' {"Bar":null,"field1":{"some_name":"debug"},"field2":["other string"]} ')],
     _n_=[0,caml_string_of_jsbytes("")],
     _t_=[1,caml_string_of_jsbytes(' [{"A":"B"},{"A":"C"}] ')],
     _u_=[0,caml_string_of_jsbytes("")],
     _w_=[0,caml_string_of_jsbytes("duplicate keys are displayed correctly")],
     _D_=[1,caml_string_of_jsbytes(" 999 ")],
     _E_=[0,caml_string_of_jsbytes("")],
     _G_=[0,caml_string_of_jsbytes("no stack overflow")],
     _af_=[0,caml_string_of_jsbytes("uri")],
     _ag_=[0,caml_string_of_jsbytes("description")],
     _ae_=[0,0],
     _ac_=[12,41,0],
     _ad_=[0,0],
     _ab_=[0,caml_string_of_jsbytes("src/rpc.ml"),100,33],
     _L_=[0,caml_string_of_jsbytes("Normal_closure")],
     _M_=[0,caml_string_of_jsbytes("Going_away")],
     _N_=[0,caml_string_of_jsbytes("Protocol_error")],
     _O_=[0,caml_string_of_jsbytes("Unsupported_data")],
     _P_=[0,caml_string_of_jsbytes("No_status_Received")],
     _Q_=[0,caml_string_of_jsbytes("Abnormal_closure")],
     _R_=[0,caml_string_of_jsbytes("Invalid_frame_payload_data")],
     _S_=[0,caml_string_of_jsbytes("Policy_violation")],
     _T_=[0,caml_string_of_jsbytes("Message_too_big")],
     _U_=[0,caml_string_of_jsbytes("Missing_extension")],
     _V_=[0,caml_string_of_jsbytes("Internal_error")],
     _W_=[0,caml_string_of_jsbytes("Service_restart")],
     _X_=[0,caml_string_of_jsbytes("Try_again_later")],
     _Y_=[0,caml_string_of_jsbytes("Bad_gateway")],
     _Z_=[0,caml_string_of_jsbytes("TLS_handshake")],
     ___=[0,caml_string_of_jsbytes("Unknown_close_event_code")],
     _$_=[0,caml_string_of_jsbytes("Invalid_close_event_code")],
     _ak_=[0,caml_string_of_jsbytes("status_text")],
     _al_=[0,caml_string_of_jsbytes("code")],
     _am_=[0,caml_string_of_jsbytes("status_text")],
     _an_=[0,caml_string_of_jsbytes("code")];
    function is_valid_field_name(seen,name)
     {if(caml_call2(Core_String[126],name,cst$0))
       var _cx_=0;
      else
       {var match=runtime.caml_string_get(name,0);
        if(9 < match - 48 >>> 0)
         var
          _cw_=
           function(param)
            {var switch$0=0;
             if(91 <= param)
              {if(97 <= param)
                {if(123 > param)switch$0 = 1}
               else
                if(95 === param)switch$0 = 1}
             else
              if(58 <= param)
               {if(65 <= param)switch$0 = 1}
              else
               if(48 <= param)switch$0 = 1;
             return switch$0?1:0},
          _cx_=caml_call2(Core_String[11],name,_cw_);
        else
         var _cx_=0}
      var _cy_=_cx_?1 - caml_call2(Core_Set[10],seen,name):_cx_;
      return _cy_}
    function any_of_sexp(param)
     {if(0 === param[0]){var s=param[1];return caml_jsstring_of_string(s)}
      var _cn_=param[1];
      if(_cn_)
       {var _co_=_cn_[1];
        if(0 === _co_[0])
         {var _cp_=_cn_[2];
          if(_cp_ && ! _cp_[2])
           {var v$0=_cp_[1],name$1=_co_[1];
            return caml_js_object([0,[0,name$1,any_of_sexp(v$0)]])}}}
      var seen=Core_String[141][54],rev_acc=0,list=_cn_;
      for(;;)
       {if(list)
         {var _cj_=list[1];
          if(0 === _cj_[0])
           {var rest=list[2],name=_cj_[1];
            if(is_valid_field_name(seen,name))
             {var
               rev_acc$0=[0,[0,name,0],rev_acc],
               seen$0=caml_call2(Core_Set[11],seen,name),
               seen=seen$0,
               rev_acc=rev_acc$0,
               list=rest;
              continue}}
          else
           {var _ck_=_cj_[1];
            if(_ck_)
             {var _cl_=_ck_[1];
              if(0 === _cl_[0])
               {var _cm_=_ck_[2];
                if(_cm_ && ! _cm_[2])
                 {var rest$0=list[2],v=_cm_[1],name$0=_cl_[1];
                  if(is_valid_field_name(seen,name$0))
                   {var
                     rev_acc$1=[0,[0,name$0,[0,v]],rev_acc],
                     seen$1=caml_call2(Core_Set[11],seen,name$0),
                     seen=seen$1,
                     rev_acc=rev_acc$1,
                     list=rest$0;
                    continue}}}}}
          var match=0}
        else
         var match=[0,caml_call1(Core_List[34],rev_acc)];
        if(! match)
         {var _ct_=caml_call2(Core_List[72],_cn_,any_of_sexp);
          return caml_js_from_array(caml_call1(Core_Array[52],_ct_))}
        var _cq_=match[1];
        if(! _cq_)return caml_js_from_array([0]);
        var
         _cr_=
          function(param)
           {var _cu_=param[2],_cv_=param[1];
            if(! _cu_)return [0,_cv_,Js_of_ocaml_Js[1]];
            var v=_cu_[1];
            return [0,_cv_,any_of_sexp(v)]},
         _cs_=caml_call2(Core_List[72],_cq_,_cr_);
        return caml_js_object(caml_call1(Core_Array[52],_cs_))}}
    function log_s(sexp)
     {var t0=any_of_sexp(sexp);return Js_of_ocaml_Firebug[1].log(t0)}
    function log_s_as_string(sexp)
     {var t2=caml_jsstring_of_string(caml_call2(Core_Sexp[81],0,sexp));
      return Js_of_ocaml_Firebug[1].log(t2)}
    var
     Expect_test_collector$0=
      caml_call1(Expect_test_collector[2],Expect_test_config);
    function _a_(param)
     {function sexp_of_t(param)
       {if(! param)return _f_;
        var
         field2_043=param[2],
         field1_041=param[1],
         arg_044=caml_call2(Core[454],Core[471],field2_043),
         bnds_040=[0,[1,[0,_c_,[0,arg_044,0]]],0],
         some_name_017=field1_041[1],
         arg_018=caml_call1(Core[471],some_name_017),
         bnds_016=[0,[1,[0,_b_,[0,arg_018,0]]],0],
         arg_042=[1,bnds_016],
         bnds_040$0=[0,[1,[0,_d_,[0,arg_042,0]]],bnds_040];
        return [1,[0,_e_,bnds_040$0]]}
      function to_string(any)
       {return caml_string_of_jsstring(Js_of_ocaml_Js[38].stringify(any))}
      var _cf_=to_string(any_of_sexp(sexp_of_t(0)));
      caml_call1(Core[32],_cf_);
      var
       _cg_=
        [0,
         caml_call1(Expect_test_common_File[1][6],cst_src_debug_ml$0),
         68,
         2051,
         2055,
         2061];
      caml_call1(Expect_test_collector$0[1],_cg_);
      var _ch_=to_string(any_of_sexp(sexp_of_t(_g_)));
      caml_call1(Core[32],_ch_);
      var
       _ci_=
        [0,
         caml_call1(Expect_test_common_File[1][6],cst_src_debug_ml$1),
         74,
         2238,
         2242,
         2248];
      return caml_call1(Expect_test_collector$0[1],_ci_)}
    var
     _h_=
      [0,
       caml_call1(Expect_test_common_File[1][6],cst_src_debug_ml$2),
       68,
       2051,
       2062,
       2073],
     _k_=
      [0,
       [0,
        _j_,
        _i_,
        [0,
         caml_call1(Expect_test_common_File[1][6],cst_src_debug_ml$3),
         68,
         2051,
         2055,
         2061],
        _h_],
       0],
     _l_=
      [0,
       caml_call1(Expect_test_common_File[1][6],cst_src_debug_ml$4),
       74,
       2238,
       2249,
       2324],
     _o_=
      [0,
       [0,
        _n_,
        _m_,
        [0,
         caml_call1(Expect_test_common_File[1][6],cst_src_debug_ml$5),
         74,
         2238,
         2242,
         2248],
        _l_],
       _k_],
     _p_=
      [0,
       caml_call1(Expect_test_common_File[1][6],cst_src_debug_ml$7),
       50,
       1611,
       1611,
       2325],
     _q_=
      caml_call1(Expect_test_common_File[4][3],cst_0c01ba057ff4b2be6bc7c9d261);
    caml_call9
     (Expect_test_collector$0[3],
      _q_,
      _p_,
      cst_src_debug_ml$6,
      0,
      0,
      _o_,
      0,
      Inline_test_config,
      _a_);
    var
     Expect_test_collector$1=
      caml_call1(Expect_test_collector[2],Expect_test_config);
    function _r_(param)
     {var
       sexp_with_duplicate_keys=caml_call1(Core_Sexp[73],cst_A_B_A_C),
       any=any_of_sexp(sexp_with_duplicate_keys),
       _cd_=caml_string_of_jsstring(Js_of_ocaml_Js[38].stringify(any));
      caml_call1(Core[32],_cd_);
      var
       _ce_=
        [0,
         caml_call1(Expect_test_common_File[1][6],cst_src_debug_ml$8),
         83,
         2654,
         2658,
         2664];
      return caml_call1(Expect_test_collector$1[1],_ce_)}
    var
     _s_=
      [0,
       caml_call1(Expect_test_common_File[1][6],cst_src_debug_ml$9),
       83,
       2654,
       2665,
       2692],
     _v_=
      [0,
       [0,
        _u_,
        _t_,
        [0,
         caml_call1(Expect_test_common_File[1][6],cst_src_debug_ml$10),
         83,
         2654,
         2658,
         2664],
        _s_],
       0],
     _x_=
      [0,
       caml_call1(Expect_test_common_File[1][6],cst_src_debug_ml$12),
       77,
       2330,
       2330,
       2693],
     _y_=
      caml_call1
       (Expect_test_common_File[4][3],cst_0c01ba057ff4b2be6bc7c9d261$0);
    caml_call9
     (Expect_test_collector$1[3],
      _y_,
      _x_,
      cst_src_debug_ml$11,
      _w_,
      0,
      _v_,
      0,
      Inline_test_config,
      _r_);
    var
     Expect_test_collector$2=
      caml_call1(Expect_test_collector[2],Expect_test_config);
    function _z_(param)
     {function _ca_(i){return [0,caml_call2(Core[257],_A_,i),i]}
      var x_049=caml_call2(Core_Array[40],10000,_ca_);
      function _cb_(param)
       {var
         arg1_046=param[2],
         arg0_045=param[1],
         res0_047=caml_call1(Core[471],arg0_045),
         res1_048=caml_call1(Core[356],arg1_046);
        return [1,[0,res0_047,[0,res1_048,0]]]}
      var sexp=caml_call2(Core[288],_cb_,x_049),t8=any_of_sexp(sexp);
      caml_call2(Core[250],_B_,t8.f999);
      var
       _cc_=
        [0,
         caml_call1(Expect_test_common_File[1][6],cst_src_debug_ml$13),
         91,
         2923,
         2927,
         2933];
      return caml_call1(Expect_test_collector$2[1],_cc_)}
    var
     _C_=
      [0,
       caml_call1(Expect_test_common_File[1][6],cst_src_debug_ml$14),
       91,
       2923,
       2934,
       2943],
     _F_=
      [0,
       [0,
        _E_,
        _D_,
        [0,
         caml_call1(Expect_test_common_File[1][6],cst_src_debug_ml$15),
         91,
         2923,
         2927,
         2933],
        _C_],
       0],
     _H_=
      [0,
       caml_call1(Expect_test_common_File[1][6],cst_src_debug_ml$17),
       86,
       2698,
       2698,
       2944],
     _I_=
      caml_call1
       (Expect_test_common_File[4][3],cst_0c01ba057ff4b2be6bc7c9d261$1);
    caml_call9
     (Expect_test_collector$2[3],
      _I_,
      _H_,
      cst_src_debug_ml$16,
      _G_,
      0,
      _F_,
      0,
      Inline_test_config,
      _z_);
    caml_call1(Ppx_inline_test_lib_Runtime[3],cst_async_js$1);
    caml_call1(Expect_test_collector[5][2],0);
    caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2],0);
    caml_call1(Ppx_module_timer_runtime[5],cst_Async_js_Debug$0);
    var Async_js_Debug=[0,log_s,log_s_as_string,any_of_sexp];
    caml_register_global(318,Async_js_Debug,"Async_js__Debug");
    caml_call1(Ppx_module_timer_runtime[4],cst_Async_js_Rpc);
    caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1],cst_async_js$2);
    caml_call1(Expect_test_collector[5][1],cst_src_rpc_ml);
    caml_call2(Ppx_inline_test_lib_Runtime[2],cst_async_js$3,cst$1);
    var
     to_string=Uri[8],
     make=Uri[11],
     sexp_of_t=Uri_sexp[4],
     compare_close_event_code=Core[352],
     sexp_of_close_event_code=Core[356],
     l=0;
    function compare(a_004,b_005)
     {if(caml_call2(Ppx_compare_lib[1],a_004,b_005))return 0;
      var switch$0=0;
      if(typeof a_004 === "number")
       switch(a_004)
        {case 0:if(typeof b_005 === "number" && ! b_005)return 0;return -1;
         case 1:
          var switch$1=0;
          if(typeof b_005 === "number")
           {if(1 === b_005)return 0;if(! b_005)switch$1 = 1}
          if(! switch$1)return -1;
          break;
         case 2:
          var switch$2=0;
          if(typeof b_005 === "number" && 3 > b_005)
           switch(b_005)
            {case 2:return 0;
             case 0:switch$2 = 1;break;
             default:switch$0 = 1;switch$2 = 1}
          if(! switch$2)return -1;
          break;
         case 3:
          var switch$3=0;
          if(typeof b_005 === "number")
           switch(b_005)
            {case 3:return 0;
             case 0:break;
             case 1:switch$0 = 1;break;
             case 2:switch$0 = 2;break;
             default:switch$3 = 1}
          else
           switch$3 = 1;
          if(switch$3)return -1;
          break;
         case 4:
          var switch$4=0;
          if(typeof b_005 === "number")
           switch(b_005)
            {case 4:return 0;
             case 0:break;
             case 1:switch$0 = 1;break;
             case 2:switch$0 = 2;break;
             case 3:switch$0 = 3;break;
             default:switch$4 = 1}
          else
           switch$4 = 1;
          if(switch$4)return -1;
          break;
         case 5:
          var switch$5=0;
          if(typeof b_005 === "number")
           switch(b_005)
            {case 5:return 0;
             case 0:break;
             case 1:switch$0 = 1;break;
             case 2:switch$0 = 2;break;
             case 3:switch$0 = 3;break;
             case 4:switch$0 = 4;break;
             default:switch$5 = 1}
          else
           switch$5 = 1;
          if(switch$5)return -1;
          break;
         case 6:
          var switch$6=0;
          if(typeof b_005 === "number")
           switch(b_005)
            {case 6:return 0;
             case 0:break;
             case 1:switch$0 = 1;break;
             case 2:switch$0 = 2;break;
             case 3:switch$0 = 3;break;
             case 4:switch$0 = 4;break;
             case 5:switch$0 = 5;break;
             default:switch$6 = 1}
          else
           switch$6 = 1;
          if(switch$6)return -1;
          break;
         case 7:
          var switch$7=0;
          if(typeof b_005 === "number")
           switch(b_005)
            {case 7:return 0;
             case 0:break;
             case 1:switch$0 = 1;break;
             case 2:switch$0 = 2;break;
             case 3:switch$0 = 3;break;
             case 4:switch$0 = 4;break;
             case 5:switch$0 = 5;break;
             case 6:switch$0 = 6;break;
             default:switch$7 = 1}
          else
           switch$7 = 1;
          if(switch$7)return -1;
          break;
         case 8:
          var switch$8=0;
          if(typeof b_005 === "number")
           switch(b_005)
            {case 8:return 0;
             case 0:break;
             case 1:switch$0 = 1;break;
             case 2:switch$0 = 2;break;
             case 3:switch$0 = 3;break;
             case 4:switch$0 = 4;break;
             case 5:switch$0 = 5;break;
             case 6:switch$0 = 6;break;
             case 7:switch$0 = 7;break;
             default:switch$8 = 1}
          else
           switch$8 = 1;
          if(switch$8)return -1;
          break;
         case 9:
          var switch$9=0;
          if(typeof b_005 === "number")
           switch(b_005)
            {case 9:return 0;
             case 0:break;
             case 1:switch$0 = 1;break;
             case 2:switch$0 = 2;break;
             case 3:switch$0 = 3;break;
             case 4:switch$0 = 4;break;
             case 5:switch$0 = 5;break;
             case 6:switch$0 = 6;break;
             case 7:switch$0 = 7;break;
             case 8:switch$0 = 8;break;
             default:switch$9 = 1}
          else
           switch$9 = 1;
          if(switch$9)return -1;
          break;
         case 10:
          var switch$10=0;
          if(typeof b_005 === "number")
           switch(b_005)
            {case 10:return 0;
             case 0:break;
             case 1:switch$0 = 1;break;
             case 2:switch$0 = 2;break;
             case 3:switch$0 = 3;break;
             case 4:switch$0 = 4;break;
             case 5:switch$0 = 5;break;
             case 6:switch$0 = 6;break;
             case 7:switch$0 = 7;break;
             case 8:switch$0 = 8;break;
             case 9:switch$0 = 9;break;
             default:switch$10 = 1}
          else
           switch$10 = 1;
          if(switch$10)return -1;
          break;
         case 11:
          var switch$11=0;
          if(typeof b_005 === "number")
           switch(b_005)
            {case 11:return 0;
             case 0:break;
             case 1:switch$0 = 1;break;
             case 2:switch$0 = 2;break;
             case 3:switch$0 = 3;break;
             case 4:switch$0 = 4;break;
             case 5:switch$0 = 5;break;
             case 6:switch$0 = 6;break;
             case 7:switch$0 = 7;break;
             case 8:switch$0 = 8;break;
             case 9:switch$0 = 9;break;
             case 10:switch$0 = 10;break;
             default:switch$11 = 1}
          else
           switch$11 = 1;
          if(switch$11)return -1;
          break;
         case 12:
          var switch$12=0;
          if(typeof b_005 === "number")
           switch(b_005)
            {case 12:return 0;
             case 0:break;
             case 1:switch$0 = 1;break;
             case 2:switch$0 = 2;break;
             case 3:switch$0 = 3;break;
             case 4:switch$0 = 4;break;
             case 5:switch$0 = 5;break;
             case 6:switch$0 = 6;break;
             case 7:switch$0 = 7;break;
             case 8:switch$0 = 8;break;
             case 9:switch$0 = 9;break;
             case 10:switch$0 = 10;break;
             case 11:switch$0 = 11;break;
             default:switch$12 = 1}
          else
           switch$12 = 1;
          if(switch$12)return -1;
          break;
         case 13:
          var switch$13=0;
          if(typeof b_005 === "number")
           switch(b_005)
            {case 13:return 0;
             case 0:break;
             case 1:switch$0 = 1;break;
             case 2:switch$0 = 2;break;
             case 3:switch$0 = 3;break;
             case 4:switch$0 = 4;break;
             case 5:switch$0 = 5;break;
             case 6:switch$0 = 6;break;
             case 7:switch$0 = 7;break;
             case 8:switch$0 = 8;break;
             case 9:switch$0 = 9;break;
             case 10:switch$0 = 10;break;
             case 11:switch$0 = 11;break;
             case 12:switch$0 = 12;break;
             default:switch$13 = 1}
          else
           switch$13 = 1;
          if(switch$13)return -1;
          break;
         default:
          if(typeof b_005 !== "number")return -1;
          switch(b_005)
           {case 14:return 0;
            case 0:break;
            case 1:switch$0 = 1;break;
            case 2:switch$0 = 2;break;
            case 3:switch$0 = 3;break;
            case 4:switch$0 = 4;break;
            case 5:switch$0 = 5;break;
            case 6:switch$0 = 6;break;
            case 7:switch$0 = 7;break;
            case 8:switch$0 = 8;break;
            case 9:switch$0 = 9;break;
            case 10:switch$0 = 10;break;
            case 11:switch$0 = 11;break;
            case 12:switch$0 = 12;break;
            default:switch$0 = 13}}
      else
       if(0 === a_004[0])
        {var _b__=a_004[1];
         if(typeof b_005 !== "number")
          {if(0 !== b_005[0])return -1;
           var b_007=b_005[1];
           return caml_call2(compare_close_event_code,_b__,b_007)}
         switch(b_005)
          {case 0:break;
           case 1:switch$0 = 1;break;
           case 2:switch$0 = 2;break;
           case 3:switch$0 = 3;break;
           case 4:switch$0 = 4;break;
           case 5:switch$0 = 5;break;
           case 6:switch$0 = 6;break;
           case 7:switch$0 = 7;break;
           case 8:switch$0 = 8;break;
           case 9:switch$0 = 9;break;
           case 10:switch$0 = 10;break;
           case 11:switch$0 = 11;break;
           case 12:switch$0 = 12;break;
           case 13:switch$0 = 13;break;
           default:switch$0 = 14}}
       else
        {var _b$_=a_004[1];
         if(typeof b_005 !== "number")
          {if(0 === b_005[0])return 1;
           var b_009=b_005[1];
           return caml_call2(compare_close_event_code,_b$_,b_009)}
         switch(b_005)
          {case 0:break;
           case 1:switch$0 = 1;break;
           case 2:switch$0 = 2;break;
           case 3:switch$0 = 3;break;
           case 4:switch$0 = 4;break;
           case 5:switch$0 = 5;break;
           case 6:switch$0 = 6;break;
           case 7:switch$0 = 7;break;
           case 8:switch$0 = 8;break;
           case 9:switch$0 = 9;break;
           case 10:switch$0 = 10;break;
           case 11:switch$0 = 11;break;
           case 12:switch$0 = 12;break;
           case 13:switch$0 = 13;break;
           default:switch$0 = 14}}
      switch(switch$0)
       {case 0:return 1;
        case 1:return 1;
        case 2:return 1;
        case 3:return 1;
        case 4:return 1;
        case 5:return 1;
        case 6:return 1;
        case 7:return 1;
        case 8:return 1;
        case 9:return 1;
        case 10:return 1;
        case 11:return 1;
        case 12:return 1;
        case 13:return 1;
        default:return 1}}
    var l$0=l,acc=0;
    for(;;)
     {if(l$0)
       {var
         l$1=l$0[2],
         enumerate_011=l$0[1],
         acc$0=[0,[1,enumerate_011],acc],
         l$0=l$1,
         acc=acc$0;
        continue}
      var l$2=l,acc$1=0,_J_=caml_call1(Stdlib_List[9],acc);
      for(;;)
       {if(l$2)
         {var
           l$3=l$2[2],
           enumerate_010=l$2[1],
           acc$2=[0,[0,enumerate_010],acc$1],
           l$2=l$3,
           acc$1=acc$2;
          continue}
        var
         _K_=caml_call1(Stdlib_List[9],acc$1),
         all=
          [0,
           0,
           [0,
            1,
            [0,
             2,
             [0,
              3,
              [0,
               4,
               [0,
                5,
                [0,
                 6,
                 [0,
                  7,
                  [0,
                   8,
                   [0,
                    9,
                    [0,
                     10,
                     [0,
                      11,
                      [0,12,[0,13,[0,14,caml_call2(Stdlib_List[11],_K_,_J_)]]]]]]]]]]]]]]],
         normal_closure=0,
         of_int=
          function(code)
           {var switcher=code - 1000 | 0;
            if(15 >= switcher >>> 0)
             switch(switcher)
              {case 0:return 0;
               case 1:return 1;
               case 2:return 2;
               case 3:return 3;
               case 4:break;
               case 5:return 4;
               case 6:return 5;
               case 7:return 6;
               case 8:return 7;
               case 9:return 8;
               case 10:return 9;
               case 11:return 10;
               case 12:return 11;
               case 13:return 12;
               case 14:return 13;
               default:return 14}
            if
             (caml_call2(Core[88],code,3000)
              &&
              caml_call2(Core[89],code,4999))
             return [0,code];
            return [1,code]},
         to_int=
          function(param)
           {if(typeof param === "number")
             switch(param)
              {case 0:return 1000;
               case 1:return 1001;
               case 2:return 1002;
               case 3:return 1003;
               case 4:return 1005;
               case 5:return 1006;
               case 6:return 1007;
               case 7:return 1008;
               case 8:return 1009;
               case 9:return 1010;
               case 10:return 1011;
               case 11:return 1012;
               case 12:return 1013;
               case 13:return 1014;
               default:return 1015}
            if(0 === param[0]){var code=param[1];return code}
            var code$0=param[1];
            return code$0},
         _aa_=
          function(param)
           {function _b8_(t)
             {var
               x_030=of_int(to_int(t)),
               match=compare(x_030,t),
               _b9_=0 === match?1:0;
              if(_b9_)return 0;
              throw [0,Assert_failure,_ab_]}
            caml_call2(Core_List[9],all,_b8_);
            return 0};
        caml_call8
         (Ppx_inline_test_lib_Runtime[5],
          Inline_test_config,
          cst_to_int_of_int_round_trip,
          0,
          cst_src_rpc_ml$0,
          99,
          4,
          134,
          _aa_);
        var
         close_websocket=
          function(t3,reason)
           {function close(reason)
             {var
               t2=caml_jsstring_of_string(reason),
               t1=to_int(normal_closure);
              return t3.close(t1,t2)}
            try
             {close(reason)}
            catch(_b7_){return close(cst_close_reason_was_too_long_)}
            return 0},
         connect_websocket=
          function(url,from_server,to_server)
           {try
             {var
               _bQ_=caml_jsstring_of_string(caml_call2(to_string,0,url)),
               websocket=new (Js_of_ocaml_WebSockets[1])(_bQ_)}
            catch(exn$0)
             {exn$0 = caml_wrap_exception(exn$0);
              if(exn$0[1] === Js_of_ocaml_Js[57])
               {var
                 exn=exn$0[2],
                 _bN_=caml_string_of_jsstring(exn.message),
                 _bO_=caml_call1(Core_Or_error[41],_bN_);
                return caml_call1(Async_kernel[19],_bO_)}
              var _bP_=caml_call2(Core_Or_error[37],0,exn$0);
              return caml_call1(Async_kernel[19],_bP_)}
            var connected_ivar=caml_call1(Async_kernel_Ivar[12],0);
            function cleanup(reason)
             {caml_call2(Async_kernel_Ivar[15],connected_ivar,[1,reason]);
              caml_call1(Async_kernel_Pipe[14],from_server);
              caml_call1(Async_kernel_Pipe[15],to_server);
              return close_websocket
                      (websocket,caml_call1(Core_Error[9],reason))}
            function onclose(close_event)
             {var
               match=caml_call1(Async_kernel_Ivar[17],connected_ivar),
               what_happened=match?cst_closed:cst_connection_failed,
               _b4_=of_int(close_event.code),
               _b5_=
                [0,
                 [11,
                  cst_WebSocket,
                  [2,
                   0,
                   [11,
                    cst$2,
                    [24,
                     _ad_,
                     function(param,custom_printf_034)
                      {if(typeof custom_printf_034 === "number")
                        switch(custom_printf_034)
                         {case 0:var _b6_=_L_;break;
                          case 1:var _b6_=_M_;break;
                          case 2:var _b6_=_N_;break;
                          case 3:var _b6_=_O_;break;
                          case 4:var _b6_=_P_;break;
                          case 5:var _b6_=_Q_;break;
                          case 6:var _b6_=_R_;break;
                          case 7:var _b6_=_S_;break;
                          case 8:var _b6_=_T_;break;
                          case 9:var _b6_=_U_;break;
                          case 10:var _b6_=_V_;break;
                          case 11:var _b6_=_W_;break;
                          case 12:var _b6_=_X_;break;
                          case 13:var _b6_=_Y_;break;
                          default:var _b6_=_Z_}
                       else
                        if(0 === custom_printf_034[0])
                         var
                          arg0_026=custom_printf_034[1],
                          res0_027=caml_call1(sexp_of_close_event_code,arg0_026),
                          _b6_=[1,[0,___,[0,res0_027,0]]];
                        else
                         var
                          arg0_028=custom_printf_034[1],
                          res0_029=caml_call1(sexp_of_close_event_code,arg0_028),
                          _b6_=[1,[0,_$_,[0,res0_029,0]]];
                       return caml_call2(Ppx_sexp_conv_lib[1][13],0,_b6_)},
                     _ac_]]]],
                 cst_WebSocket_s_sexp_Close_cod],
               reason=caml_call3(Core[257],_b5_,what_happened,_b4_);
              cleanup(caml_call1(Core_Error[12],reason));
              return Js_of_ocaml_Js[8]}
            function onmessage(event)
             {var data=caml_call1(Js_of_ocaml_Typed_array[50][3],event.data);
              caml_call2(Async_kernel_Pipe[32],from_server,data);
              return Js_of_ocaml_Js[8]}
            function connected(param)
             {return caml_call2(Async_kernel_Ivar[15],connected_ivar,_ae_)}
            websocket.binaryType = "arraybuffer";
            var match=websocket.readyState;
            if(1 === match)
             connected(0);
            else
             if(match)
              cleanup
               (caml_call1(Core_Error[12],cst_WebSocket_failed_immediate));
             else
              {var
                _bY_=
                 function(param){connected(0);return Js_of_ocaml_Js[8]};
               websocket.onopen = caml_call1(Js_of_ocaml_Dom[10],_bY_)}
            function _bR_(param)
             {log_s
               (caml_call1
                 (Sexplib0_Sexp_conv[7],cst_websocket_encountered_unex));
              return Js_of_ocaml_Js[8]}
            websocket.onerror = caml_call1(Js_of_ocaml_Dom[10],_bR_);
            websocket.onmessage = caml_call1(Js_of_ocaml_Dom[10],onmessage);
            websocket.onclose = caml_call1(Js_of_ocaml_Dom[10],onclose);
            var
             connected_deferred=
              caml_call1(Async_kernel_Ivar[18],connected_ivar);
            function _bS_(param)
             {if(0 !== param[0])return caml_call1(Async_kernel[19],0);
              function _bZ_(data)
               {var match=websocket.readyState;
                if(1 === match)
                 {var buffer=caml_call1(Js_of_ocaml_Typed_array[50][1],data);
                  try
                   {var _b2_=websocket.send(buffer);return _b2_}
                  catch(exn)
                   {exn = caml_wrap_exception(exn);
                    var
                     _b0_=caml_call2(Core_Error[25],0,exn),
                     _b1_=
                      caml_call2(Core_Error[20],_b0_,cst_websocket_send_buffer);
                    return caml_call1(Core_Error[28],_b1_)}}
                if(match)return 0;
                var
                 _b3_=
                  caml_call1
                   (Sexplib0_Sexp_conv[7],cst_BUG_onopen_called_but_read);
                return caml_call1(Core[253],_b3_)}
              return caml_call5(Async_kernel_Pipe[51],0,0,0,to_server,_bZ_)}
            var _bT_=caml_call2(Async_kernel[22][2],connected_deferred,_bS_);
            caml_call1(Async_kernel[6],_bT_);
            function _bU_(param)
             {return cleanup
                      (caml_call1(Core_Error[12],cst_RPC_connection_closed_by_c))}
            var
             _bV_=[0,caml_call1(Async_kernel_Pipe[17],from_server),0],
             _bW_=[0,caml_call1(Async_kernel_Pipe[17],to_server),_bV_],
             _bX_=caml_call1(Async_kernel_Deferred[24],_bW_),
             cleanup_when_a_pipe_is_closed=
              caml_call2(Async_kernel[22][3],_bX_,_bU_);
            caml_call1(Async_kernel[6],cleanup_when_a_pipe_is_closed);
            return connected_deferred},
         client=
          function(opt,heartbeat_config,description,implementations,param)
           {if(opt)
             var sth=opt[1],uri=sth;
            else
             {var
               scheme=
                caml_call2(Core_String[126],Js_of_ocaml_Url[10][3],cst_https)
                 ?cst_wss
                 :cst_ws,
               _bD_=Js_of_ocaml_Url[10][2];
              if(_bD_)
               var port=_bD_[1],port$0=port;
              else
               var
                port$0=
                 caml_call2
                   (Core_String[126],Js_of_ocaml_Url[10][3],cst_https$0)
                  ?Js_of_ocaml_Url[4]
                  :Js_of_ocaml_Url[3];
              var
               host=Js_of_ocaml_Url[10][1],
               uri=caml_call8(make,[0,scheme],0,[0,host],[0,port$0],0,0,0,0)}
            var match=[0,[1,[0,_af_,[0,caml_call1(sexp_of_t,uri),0]]],0];
            if(description)
             var
              v=description[1],
              _bE_=[0,[1,[0,_ag_,[0,caml_call1(Core_Info[6],v),0]]],match];
            else
             var _bE_=match;
            var res=[0,caml_call1(Sexplib0_Sexp_conv[7],cst_websocket),_bE_];
            if(res[2])var _bF_=[1,res];else var h=res[1],_bF_=h;
            var
             description$0=caml_call1(Core_Info[18],_bF_),
             match$0=caml_call3(Async_kernel_Pipe[7],0,0,0),
             from_server_w=match$0[2],
             from_server_r=match$0[1],
             match$1=caml_call3(Async_kernel_Pipe[7],0,0,0),
             to_server_w=match$1[2],
             to_server_r=match$1[1];
            function _bG_(error)
             {if(0 !== error[0])return caml_call1(Async_kernel[19],error);
              var
               transport=
                caml_call3
                 (Async_rpc_kernel_Pipe_transpor[2],
                  Async_rpc_kernel_Pipe_transpor[1][2],
                  from_server_r,
                  to_server_w);
              function _bI_(param)
               {if(0 === param[0])
                 {var connection=param[1];
                  return caml_call1(Async_kernel[19],[0,connection])}
                var exn=param[1];
                function _bK_(param)
                 {var _bM_=caml_call2(Core_Or_error[37],0,exn);
                  return caml_call1(Async_kernel[19],_bM_)}
                var _bL_=caml_call1(Async_rpc_kernel_Transport[5],transport);
                return caml_call2(Async_kernel[22][2],_bL_,_bK_)}
              function create(param)
               {var implementations=param[2],connection_state=param[1];
                return caml_call7
                        (include[5][4],
                         [0,implementations],
                         connection_state,
                         0,
                         heartbeat_config,
                         [0,description$0],
                         0,
                         transport)}
              if(implementations)
               var
                implementations$0=implementations[1],
                _bJ_=create(implementations$0);
              else
               var _bJ_=create(caml_call1(include[5][3][1],0));
              return caml_call2(Async_kernel[22][2],_bJ_,_bI_)}
            var _bH_=connect_websocket(uri,from_server_w,to_server_r);
            return caml_call2(Async_kernel[22][2],_bH_,_bG_)},
         client_exn=
          function(uri,heartbeat_config,description,implementations,param)
           {var
             _bB_=Core_Or_error[36],
             _bC_=client(uri,heartbeat_config,description,implementations,0);
            return caml_call2(Async_kernel[21],_bC_,_bB_)},
         Connection=include[5],
         sexp_of_t$0=Connection[1],
         create=Connection[4],
         contains_magic_prefix=Connection[5],
         description=Connection[6],
         add_heartbeat_callback=Connection[7],
         reset_heartbeat_timeout=Connection[8],
         last_seen_alive=Connection[9],
         close=Connection[10],
         close_finished=Connection[11],
         close_reason=Connection[12],
         is_closed=Connection[13],
         bytes_to_write=Connection[14],
         flushed=Connection[15],
         with_close=Connection[16],
         server_with_close=Connection[17];
        caml_call1(Ppx_inline_test_lib_Runtime[3],cst_async_js$4);
        caml_call1(Expect_test_collector[5][2],0);
        caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2],0);
        caml_call1(Ppx_module_timer_runtime[5],cst_Async_js_Rpc$0);
        var
         Async_js_Rpc=
          [0,
           [0,
            sexp_of_t$0,
            create,
            contains_magic_prefix,
            description,
            add_heartbeat_callback,
            reset_heartbeat_timeout,
            last_seen_alive,
            close,
            close_finished,
            close_reason,
            is_closed,
            bytes_to_write,
            flushed,
            with_close,
            server_with_close,
            client,
            client_exn]];
        caml_register_global(338,Async_js_Rpc,"Async_js__Rpc");
        caml_call1(Ppx_module_timer_runtime[4],cst_Async_js_Persistent_connec);
        caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1],cst_async_js$5);
        caml_call1(Expect_test_collector[5][1],cst_src_persistent_connection_);
        caml_call2(Ppx_inline_test_lib_Runtime[2],cst_async_js$6,cst$3);
        var
         equal=Uri[3],
         of_string=Uri[7],
         to_string$0=function(s){return caml_call2(Uri[8],0,s)},
         include$0=caml_call1(Base_Sexpable[5],[0,of_string,to_string$0]),
         sexp_of_t$1=include$0[2],
         include$1=Async_rpc_kernel_Persistent_co[1],
         sexp_of_t$2=include$1[1],
         Event=include$1[2],
         create$0=include$1[3],
         connected=include$1[4],
         connected_or_failed_to_connect=include$1[5],
         current_connection=include$1[6],
         server_name=include$1[7],
         close$0=include$1[8],
         is_closed$0=include$1[9],
         close_finished$0=include$1[10],
         close_when_current_connection_=include$1[11],
         _ah_=Async_rpc_kernel_Persistent_co[1][3],
         _ai_=[0,equal,sexp_of_t$1],
         create_from_uri=
          function(_bu_)
           {var _bv_=caml_call1(_ah_,_bu_);
            return function(_bA_,_bz_,_by_,_bx_,_bw_)
             {return caml_call6(_bv_,_bA_,_bz_,_by_,_bx_,_bw_,_ai_)}},
         func=Async_rpc_kernel_Persistent_co[1][3],
         equal$0=
          function(a_001,b_002)
           {function _bt_(a_003,b_004){return caml_call2(equal,a_003,b_004)}
            return caml_call3(Core[452],_bt_,a_001,b_002)},
         sexp_of_t$3=
          function(x_007){return caml_call2(Core[454],sexp_of_t$1,x_007)},
         _aj_=[0,equal$0,sexp_of_t$3],
         create_from_uri_option=
          function(_bm_)
           {var _bn_=caml_call1(func,_bm_);
            return function(_bs_,_br_,_bq_,_bp_,_bo_)
             {return caml_call6(_bn_,_bs_,_br_,_bq_,_bp_,_bo_,_aj_)}},
         Rpc=
          [0,
           sexp_of_t$2,
           Event,
           create$0,
           connected,
           connected_or_failed_to_connect,
           current_connection,
           server_name,
           close$0,
           is_closed$0,
           close_finished$0,
           close_when_current_connection_,
           create_from_uri,
           create_from_uri_option];
        caml_call1(Ppx_inline_test_lib_Runtime[3],cst_async_js$7);
        caml_call1(Expect_test_collector[5][2],0);
        caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2],0);
        caml_call1
         (Ppx_module_timer_runtime[5],cst_Async_js_Persistent_connec$0);
        var
         Async_js_Persistent_connection=
          [0,Rpc,Async_rpc_kernel_Persistent_co[2]];
        caml_register_global
         (341,
          Async_js_Persistent_connection,
          "Async_js__Persistent_connection");
        caml_call1(Ppx_module_timer_runtime[4],cst_Async_js_Http);
        caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1],cst_async_js$8);
        caml_call1(Expect_test_collector[5][1],cst_src_http_ml);
        caml_call2(Ppx_inline_test_lib_Runtime[2],cst_async_js$9,cst$4);
        var
         Response_type=[0],
         Response=[0],
         Post_body=[0],
         Method_with_args=[0],
         request=
          function(opt,on_progress,on_upload_progress,url,response_type)
           {if(opt)var sth=opt[1],headers=sth;else var headers=0;
            return function(method_with_args)
             {if(0 === method_with_args[0])
               var
                args=method_with_args[1],
                _aV_=caml_call1(Js_of_ocaml_Url[6],args),
                _aU_=caml_call2(Core_String[39],url,63),
                _aW_=caml_call1(Core_Option[57],_aU_)?cst$5:cst$6,
                _aX_=caml_call2(Core[18],_aW_,_aV_),
                method_string$1=method_string,
                url$0=caml_call2(Core[18],url,_aX_);
              else
               var method_string$1=method_string$0,url$0=url;
              var
               t15=caml_call1(Js_of_ocaml_XmlHttpRequest[1],0),
               t1=caml_jsstring_of_string(url$0),
               t0=caml_jsstring_of_string(method_string$1);
              t15.open(t0,t1,Js_of_ocaml_Js[7]);
              switch(response_type)
               {case 0:t15.responseType = "arraybuffer";break;
                case 1:t15.responseType = "blob";break;
                case 2:t15.responseType = "document";break;
                case 3:t15.responseType = "json";break;
                case 4:t15.responseType = "text";break;
                default:t15.responseType = ""}
              function _aY_(param)
               {var
                 value=param[2],
                 name=param[1],
                 t17=caml_jsstring_of_string(value),
                 t16=caml_jsstring_of_string(name);
                return t15.setRequestHeader(t16,t17)}
              caml_call2(Core_List[9],headers,_aY_);
              var response=caml_call1(Async_kernel_Ivar[12],0);
              function _aZ_(param)
               {var _bl_=caml_call1(Core_Or_error[41],cst_Network_error);
                caml_call2(Async_kernel_Ivar[15],response,_bl_);
                return Js_of_ocaml_Js[7]}
              var t19=caml_call1(Js_of_ocaml_Dom[10],_aZ_);
              t15.onerror = t19;
              function _a0_(param)
               {var _bk_=caml_call1(Core_Or_error[41],cst_Timeout);
                caml_call2(Async_kernel_Ivar[15],response,_bk_);
                return Js_of_ocaml_Js[7]}
              var t21=caml_call1(Js_of_ocaml_Dom[10],_a0_);
              t15.ontimeout = t21;
              var
               t38=
                runtime.caml_js_wrap_callback
                 (function(param)
                   {var match=t15.readyState;
                    if(4 > match)return 0;
                    var switch$0=0;
                    if
                     (caml_call2(Core[88],t15.status,200)
                      &&
                      caml_call2(Core[92],t15.status,300))
                     {var
                       _a6_=
                        function(content)
                         {function get_header(s)
                           {function _bh_(v){return [0,caml_string_of_jsstring(v)]}
                            var t33=runtime.caml_jsbytes_of_string(s);
                            function _bi_(param){return 0}
                            var _bj_=t15.getResponseHeader(t33);
                            return caml_call3(Js_of_ocaml_Js[5][7],_bj_,_bi_,_bh_)}
                          return [0,[0,t15.status,get_header,content]]},
                       get_text_contents_or_error=
                        function(param)
                         {var _bb_=Core_Result[20];
                          function _bc_(param)
                           {var
                             _bd_=caml_string_of_jsstring(t15.statusText),
                             _be_=[0,[1,[0,_ak_,[0,caml_call1(Core[471],_bd_),0]]],0],
                             _bf_=
                              [0,
                               [1,
                                [0,[1,[0,_al_,[0,caml_call1(Core[356],t15.status),0]]],_be_]],
                               0],
                             _bg_=
                              [1,
                               [0,
                                caml_call1
                                 (Sexplib0_Sexp_conv[7],cst_No_response_returned_despi),
                                _bf_]];
                            return caml_call1(Core[233],_bg_)}
                          return caml_call3
                                  (Js_of_ocaml_Js[5][7],t15.responseText,_bc_,_bb_)};
                      switch(response_type)
                       {case 0:
                         var
                          _a7_=
                           [0,caml_call1(Js_of_ocaml_File[3][5],t15.response)];
                         break;
                        case 1:
                         var
                          _a7_=
                           [0,caml_call1(Js_of_ocaml_File[3][2],t15.response)];
                         break;
                        case 2:
                         var
                          _a7_=
                           [0,caml_call1(Js_of_ocaml_File[3][1],t15.response)];
                         break;
                        case 3:
                         var
                          _a7_=
                           [0,caml_call1(Js_of_ocaml_File[3][3],t15.response)];
                         break;
                        case 4:var _a7_=get_text_contents_or_error(0);break;
                        default:
                         var
                          _a8_=get_text_contents_or_error(0),
                          _a7_=
                           caml_call2(Core_Or_error[48],_a8_,caml_string_of_jsstring)}
                      var res=caml_call2(Base_Or_error[25][4][2],_a7_,_a6_);
                      switch$0 = 1}
                    if(! switch$0)
                     var
                      _a9_=caml_string_of_jsstring(t15.statusText),
                      _a__=[0,[1,[0,_am_,[0,caml_call1(Core[471],_a9_),0]]],0],
                      _a$_=
                       [0,
                        [1,
                         [0,[1,[0,_an_,[0,caml_call1(Core[356],t15.status),0]]],_a__]],
                        0],
                      _ba_=
                       [1,
                        [0,
                         caml_call1(Sexplib0_Sexp_conv[7],cst_Request_failed),
                         _a$_]],
                      res=caml_call1(Core_Or_error[40],_ba_);
                    return caml_call2(Async_kernel_Ivar[15],response,res)});
              t15.onreadystatechange = t38;
              function _a1_(on_progress)
               {function _a5_(e)
                 {caml_call2(on_progress,e.loaded,e.total);
                  return Js_of_ocaml_Js[7]}
                var t42=caml_call1(Js_of_ocaml_Dom[10],_a5_);
                return t15.onprogress = t42}
              caml_call2(Core_Option[41],on_progress,_a1_);
              function _a2_(t48)
               {function _a3_(on_upload_progress)
                 {function _a4_(e)
                   {caml_call2(on_upload_progress,e.loaded,e.total);
                    return Js_of_ocaml_Js[7]}
                  var t47=caml_call1(Js_of_ocaml_Dom[10],_a4_);
                  return t48.onprogress = t47}
                return caml_call2(Core_Option[41],on_upload_progress,_a3_)}
              caml_call2(Js_of_ocaml_Js[6][6],t15.upload,_a2_);
              if(0 === method_with_args[0])
               t15.send(Js_of_ocaml_Js[1]);
              else
               {var body=method_with_args[1];
                if(body)
                 {var body$0=body[1];
                  switch(body$0[0])
                   {case 0:var b=body$0[1];t15.send(b);break;
                    case 1:var d=body$0[1];t15.send(d);break;
                    case 2:
                     var
                      s=body$0[1],
                      t57=caml_call1(Js_of_ocaml_Js[2],caml_jsstring_of_string(s));
                     t15.send(t57);
                     break;
                    default:var fd=body$0[1];t15.send(fd)}}
                else
                 t15.send(Js_of_ocaml_Js[1])}
              return caml_call1(Async_kernel_Ivar[18],response)}},
         get=
          function(opt,url)
           {if(opt)var sth=opt[1],arguments$0=sth;else var arguments$0=0;
            function _aS_(resp){return resp[3]}
            var _aT_=caml_call1(request(0,0,0,url,5),[0,arguments$0]);
            return caml_call2(Async_kernel_Deferred_or_error[14],_aT_,_aS_)},
         post=
          function(body,url)
           {function _aQ_(resp){return resp[3]}
            var _aR_=caml_call1(request(0,0,0,url,5),[1,body]);
            return caml_call2(Async_kernel_Deferred_or_error[14],_aR_,_aQ_)};
        caml_call1(Ppx_inline_test_lib_Runtime[3],cst_async_js$10);
        caml_call1(Expect_test_collector[5][2],0);
        caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2],0);
        caml_call1(Ppx_module_timer_runtime[5],cst_Async_js_Http$0);
        var
         Async_js_Http=
          [0,
           Response_type,
           Post_body,
           Method_with_args,
           Response,
           request,
           get,
           post];
        caml_register_global(348,Async_js_Http,"Async_js__Http");
        caml_call1(Ppx_module_timer_runtime[4],cst_Async_js_Async_js0);
        caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1],cst_async_js$11);
        caml_call1(Expect_test_collector[5][1],cst_src_async_js0_ml);
        caml_call2(Ppx_inline_test_lib_Runtime[2],cst_async_js$12,cst$7);
        var
         sleep=
          function(d)
           {var _aP_=caml_call1(Core_Time_ns[1][81],d);
            return caml_call1(Async_kernel_Clock_ns[4],_aP_)},
         yield$0=
          function(param)
           {var _aO_=caml_call1(Async_kernel_Scheduler[2],0);
            return caml_call1(Async_kernel_Scheduler[67],_aO_)},
         extract_js_error=
          function(exn)
           {var _aN_=caml_call1(Js_of_ocaml_Js[56],exn);
            return caml_call1(Js_of_ocaml_Js[5][10],_aN_)},
         state=[0,0],
         timeouts=caml_call1(Core_Stack[23],0),
         run_after=
          function(f,ms){caml_call2(Js_of_ocaml_Dom_html[118],f,ms);return 0},
         loop=
          function(param)
           {var
             t=caml_call1(Async_kernel_Scheduler[2],0),
             _aF_=state[1],
             match=caml_call1(Async_kernel_Scheduler[20],t);
            if(! match && 1 !== _aF_)
             {state[1] = 1;
              caml_call1(Async_kernel_Scheduler[14],t);
              if(caml_call1(Async_kernel_Scheduler[44],t))
               var next_wakeup=1;
              else
               {var match$0=caml_call1(Async_kernel_Scheduler[17],t);
                if(match$0)
                 var
                  next=match$0[1],
                  now=caml_call1(Core_Time_ns[65],0),
                  d=caml_call2(Core_Time_ns[72],next,now),
                  d_ms$0=caml_call1(Core_Time_ns[1][90],d),
                  _aL_=caml_call2(Core_Float[121],d_ms$0,0.)?1:[0,next,d_ms$0],
                  _aM_=_aL_;
                else
                 var _aM_=0;
                var next_wakeup=_aM_}
              var
               _aG_=
                function(param)
                 {var
                   exn=param[1],
                   exn$0=caml_call1(Async_kernel_Monitor[13],exn);
                  if(exn$0[1] === Js_of_ocaml_Js[57])
                   {var err=exn$0[2];return caml_call1(Js_of_ocaml_Js[54],err)}
                  var match=extract_js_error(exn$0);
                  if(! match)throw exn$0;
                  var
                   err$0=match[1],
                   t0=caml_jsstring_of_string(caml_call1(Base_Exn[10],exn$0));
                  Js_of_ocaml_Firebug[1].error(t0);
                  return caml_call1(Js_of_ocaml_Js[54],err$0)},
               _aH_=caml_call1(Async_kernel_Scheduler[21],t);
              caml_call2(Core_Option[41],_aH_,_aG_);
              if(typeof next_wakeup === "number")
               return next_wakeup
                       ?(state[1] = 2,run_after(loop,0.))
                       :(state[1] = 0,0);
              var d_ms=next_wakeup[2],at=next_wakeup[1];
              state[1] = 0;
              var _aI_=caml_call1(Core_Stack[7],timeouts);
              if(_aI_)
               var _aJ_=_aI_;
              else
               var
                _aK_=caml_call1(Core_Stack[29],timeouts),
                _aJ_=caml_call2(Core_Time_ns[19],at,_aK_);
              return _aJ_
                      ?(caml_call2(Core_Stack[25],timeouts,at),
                        run_after(run_timeout,d_ms))
                      :_aJ_}
            return 0},
         run_timeout=
          function(param){caml_call1(Core_Stack[27],timeouts);return loop(0)},
         run=
          function(param)
           {return state[1]?0:(run_after(loop,0.),state[1] = 2,0)},
         log=
          function(name,exn)
           {var exn$0=caml_call1(Async_kernel_Monitor[13],exn);
            if(exn$0[1] === Js_of_ocaml_Js[57])
             var err=exn$0[2],exn$1=[0,16617,err];
            else
             {var match$0=extract_js_error(exn$0);
              if(match$0)
               var err$2=match$0[1],_aE_=[0,566177629,[0,exn$0,err$2]];
              else
               var _aE_=[0,3458171,exn$0];
              var exn$1=_aE_}
            var _aD_=exn$1[1];
            if(3458171 === _aD_)
             {var
               exn$2=exn$1[2],
               t6=caml_jsstring_of_string(caml_call1(Base_Exn[10],exn$2)),
               t5=caml_jsstring_of_string(name);
              return Js_of_ocaml_Firebug[1].error(t5,t6)}
            if(566177629 <= _aD_)
             {var
               match=exn$1[2],
               err$0=match[2],
               exn$3=match[1],
               t9=caml_jsstring_of_string(caml_call1(Base_Exn[10],exn$3)),
               t8=caml_jsstring_of_string(name);
              return Js_of_ocaml_Firebug[1].error(t8,t9,err$0)}
            var err$1=exn$1[2],t2=caml_jsstring_of_string(name);
            return Js_of_ocaml_Firebug[1].error(t2,err$1)},
         initialized_ref=[0,0],
         initialization=
          [246,
           function(_aw_)
            {var t=caml_call1(Async_kernel_Scheduler[2],0);
             initialized_ref[1] = 1;
             function _ax_(param){return run(0)}
             caml_call2(Async_kernel_Scheduler[51],t,_ax_);
             function _ay_(param){return run(0)}
             caml_call2(Async_kernel_Scheduler[52],t,_ay_);
             caml_call2(Async_kernel_Scheduler[50],t,run);
             function _az_(_aC_)
              {return log(cst_Async_kernel_Monitor_try_w,_aC_)}
             Async_kernel_Monitor[25][1][1] = _az_;
             function _aA_(_aB_)
              {return log(cst_Async_kernel_Unhandled_exc,_aB_)}
             caml_call2(Async_kernel_Monitor[7],Async_kernel_Monitor[24],_aA_);
             return run(0)}],
         init=function(param){return caml_call1(Core[237],initialization)},
         initialized=function(param){return initialized_ref[1]},
         js_string_compare=
          function(s)
           {var compare_using_javascript_tripl=Core[246];
            return caml_call1
                    (compare_using_javascript_tripl,caml_jsstring_of_string(s))},
         readystatechange_ev=
          caml_call1(Js_of_ocaml_Dom[14][1],ready_state_change),
         add_event=
          function(target,evt,handler)
           {caml_call4
             (Js_of_ocaml_Dom_html[17],target,evt,handler,Js_of_ocaml_Js[8]);
            return 0},
         document_loaded=
          function(param)
           {var _ao_=Js_of_ocaml_Dom_html[2].readyState;
            if(caml_call1(js_string_compare(complete),_ao_))
             return Async_kernel_Deferred[18];
            var loaded=caml_call1(Async_kernel_Ivar[12],0);
            function handler(evt)
             {var
               _as_=evt.type,
               _at_=1 - caml_call1(js_string_compare(ready_state_change),_as_);
              if(_at_)
               var _au_=_at_;
              else
               var
                _av_=Js_of_ocaml_Dom_html[2].readyState,
                _au_=caml_call1(js_string_compare(complete),_av_);
              if(_au_)caml_call2(Async_kernel_Ivar[15],loaded,0);
              return Js_of_ocaml_Js[7]}
            var _ap_=caml_call1(Js_of_ocaml_Dom[10],handler);
            add_event
             (Js_of_ocaml_Dom_html[2],Js_of_ocaml_Dom_html[15][54],_ap_);
            var _aq_=caml_call1(Js_of_ocaml_Dom[10],handler);
            add_event(Js_of_ocaml_Dom_html[2],readystatechange_ev,_aq_);
            var _ar_=caml_call1(Js_of_ocaml_Dom[10],handler);
            add_event
             (Js_of_ocaml_Dom_html[8],Js_of_ocaml_Dom_html[15][36],_ar_);
            return caml_call1(Async_kernel_Ivar[18],loaded)};
        caml_call1(Ppx_inline_test_lib_Runtime[3],cst_async_js$13);
        caml_call1(Expect_test_collector[5][2],0);
        caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2],0);
        caml_call1(Ppx_module_timer_runtime[5],cst_Async_js_Async_js0$0);
        var include$2=[0,sleep,yield$0,init,initialized,document_loaded];
        caml_register_global(357,include$2,"Async_js__Async_js0");
        caml_call1(Ppx_module_timer_runtime[4],cst_Async_js);
        caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1],cst_async_js$14);
        caml_call1(Expect_test_collector[5][1],cst_src_async_js_ml);
        caml_call2(Ppx_inline_test_lib_Runtime[2],cst_async_js$15,cst$8);
        caml_call1(Ppx_inline_test_lib_Runtime[3],cst_async_js$16);
        caml_call1(Expect_test_collector[5][2],0);
        caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2],0);
        caml_call1(Ppx_module_timer_runtime[5],cst_Async_js$0);
        var
         Async_js$0=
          [0,
           sleep,
           yield$0,
           init,
           initialized,
           document_loaded,
           log_s,
           log_s_as_string];
        caml_register_global(358,Async_js$0,"Async_js");
        return}}}
  (globalThis));

//# sourceMappingURL=data:application/json;base64,
