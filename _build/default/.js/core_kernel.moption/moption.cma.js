// Generated by js_of_ocaml
//# buildInfo:effects=false, use-js-string=false, version=5.0.1
(function
   (globalThis)
   {"use strict";
    var
     runtime=globalThis.jsoo_runtime,
     caml_register_global=runtime.caml_register_global,
     caml_string_of_jsbytes=runtime.caml_string_of_jsbytes;
    function caml_call1(f,a0)
     {return f.length == 1?f(a0):runtime.caml_call_gen(f,[a0])}
    function caml_call2(f,a0,a1)
     {return f.length == 2?f(a0,a1):runtime.caml_call_gen(f,[a0,a1])}
    function caml_call4(f,a0,a1,a2,a3)
     {return f.length == 4
              ?f(a0,a1,a2,a3)
              :runtime.caml_call_gen(f,[a0,a1,a2,a3])}
    var
     global_data=runtime.caml_get_global_data(),
     cst_Moption_Import=caml_string_of_jsbytes("Moption__Import"),
     cst_moption=caml_string_of_jsbytes("moption"),
     cst_moption_src_import_ml=caml_string_of_jsbytes("moption/src/import.ml"),
     cst=caml_string_of_jsbytes(""),
     cst_moption$0=caml_string_of_jsbytes("moption"),
     cst_moption$1=caml_string_of_jsbytes("moption"),
     cst_Moption_Import$0=caml_string_of_jsbytes("Moption__Import"),
     cst_Moption_get_some_exn=caml_string_of_jsbytes("Moption.get_some_exn"),
     cst_Moption=caml_string_of_jsbytes("Moption"),
     cst_moption$2=caml_string_of_jsbytes("moption"),
     cst_moption_src_moption_ml=
      caml_string_of_jsbytes("moption/src/moption.ml"),
     cst$0=caml_string_of_jsbytes(""),
     cst_moption$3=caml_string_of_jsbytes("moption"),
     cst_moption$4=caml_string_of_jsbytes("moption"),
     cst_Moption$0=caml_string_of_jsbytes("Moption"),
     Ppx_module_timer_runtime=global_data.Ppx_module_timer_runtime,
     Ppx_bench_lib_Benchmark_accumu=
      global_data.Ppx_bench_lib__Benchmark_accumulator,
     Expect_test_collector=global_data.Expect_test_collector,
     Ppx_inline_test_lib_Runtime=global_data.Ppx_inline_test_lib__Runtime,
     Core_Option=global_data.Core__Option,
     Base_Invariant=global_data.Base__Invariant,
     Core=global_data.Core,
     Sexplib0_Sexp_conv=global_data.Sexplib0__Sexp_conv,
     Stdlib_Obj=global_data.Stdlib__Obj,
     Moption=[0];
    caml_register_global(17,Moption,"Moption__");
    caml_call1(Ppx_module_timer_runtime[4],cst_Moption_Import);
    caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1],cst_moption);
    caml_call1(Expect_test_collector[5][1],cst_moption_src_import_ml);
    caml_call2(Ppx_inline_test_lib_Runtime[2],cst_moption$0,cst);
    caml_call1(Ppx_inline_test_lib_Runtime[3],cst_moption$1);
    caml_call1(Expect_test_collector[5][2],0);
    caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2],0);
    caml_call1(Ppx_module_timer_runtime[5],cst_Moption_Import$0);
    var Moption_Import=[0];
    caml_register_global(22,Moption_Import,"Moption__Import");
    caml_call1(Ppx_module_timer_runtime[4],cst_Moption);
    caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1],cst_moption$2);
    caml_call1(Expect_test_collector[5][1],cst_moption_src_moption_ml);
    caml_call2(Ppx_inline_test_lib_Runtime[2],cst_moption$3,cst$0);
    var
     none=runtime.caml_obj_block(Stdlib_Obj[12],1),
     _a_=[0,caml_string_of_jsbytes("_")],
     _b_=[0,caml_string_of_jsbytes("moption/src/moption.ml"),30,831,853];
    function create(param){return [0,none]}
    function is_none(x){return caml_call2(Core[246],x[1],none)}
    function is_some(x){return 1 - is_none(x)}
    function get_some_exn(x)
     {if(! is_none(x))return x[1];
      var _f_=caml_call1(Sexplib0_Sexp_conv[7],cst_Moption_get_some_exn);
      return caml_call1(Core[253],_f_)}
    function get(t){return is_none(t)?0:[0,t[1]]}
    function unsafe_get(t){return t[1]}
    function set_some(t,v){t[1] = v;return 0}
    function set_none(t){t[1] = none;return 0}
    function set(t,v)
     {if(! v)return set_none(t);var v$0=v[1];return set_some(t,v$0)}
    function sexp_of_t(sexp_of_a,t)
     {var x_001=get(t);return caml_call2(Core[454],sexp_of_a,x_001)}
    function invariant(invariant_a,t)
     {function _c_(param)
       {var _e_=get(t);return caml_call2(Core_Option[41],_e_,invariant_a)}
      function _d_(x_002){return sexp_of_t(function(param){return _a_},x_002)}
      return caml_call4(Base_Invariant[1],_b_,t,_d_,_c_)}
    var
     Optional_syntax=[0,is_none,unsafe_get],
     Optional_syntax$0=[0,Optional_syntax];
    caml_call1(Ppx_inline_test_lib_Runtime[3],cst_moption$4);
    caml_call1(Expect_test_collector[5][2],0);
    caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2],0);
    caml_call1(Ppx_module_timer_runtime[5],cst_Moption$0);
    var
     Moption$0=
      [0,
       sexp_of_t,
       invariant,
       Optional_syntax$0,
       create,
       is_none,
       is_some,
       get,
       get_some_exn,
       unsafe_get,
       set,
       set_none,
       set_some];
    caml_register_global(28,Moption$0,"Moption");
    return}
  (globalThis));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLjAsImZpbGUiOiJtb3B0aW9uLmNtYS5qcyIsInNvdXJjZVJvb3QiOiIiLCJuYW1lcyI6WyJub25lIiwiY3JlYXRlIiwiaXNfbm9uZSIsIngiLCJpc19zb21lIiwiZ2V0X3NvbWVfZXhuIiwiZ2V0IiwidCIsInVuc2FmZV9nZXQiLCJzZXRfc29tZSIsInYiLCJzZXRfbm9uZSIsInNldCIsInYkMCIsInNleHBfb2ZfdCIsInNleHBfb2ZfYSIsInhfMDAxIiwiaW52YXJpYW50IiwiaW52YXJpYW50X2EiLCJ4XzAwMiJdLCJzb3VyY2VzIjpbIi9ob21lL2Jlbi8ub3BhbS80LjE0L2xpYi9jb3JlX2tlcm5lbC9tb3B0aW9uL21vcHRpb24ubWwiXSwibWFwcGluZ3MiOiI7Ozs7O0k7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBVW1COzs7O2FBQ2ZDLGNBQVksVUFEWkQsS0FDb0I7SUFETCxTQUVmRSxRQUFRQyxHQUFJLDRCQUFKQSxLQUZSSCxLQUU4QjtJQUZmLFNBR2ZJLFFBQVFELEdBQVEsV0FEaEJELFFBQ1FDLEVBQW1CO0lBSFosU0FJZkUsYUFBYUY7TUFBTyxLQUZwQkQsUUFFYUMsR0FBcUUsT0FBckVBOztzQ0FBdUU7SUFKckUsU0FLZkcsSUFBSUMsR0FBTyxPQUhYTCxRQUdJSyxhQUF1QztJQUw1QixTQU1mQyxXQUFXRCxHQUFJLE9BQUpBLElBQU07SUFORixTQU9mRSxTQUFTRixFQUFFRyxHQUFJLE9BQUpBLEVBQUksUUFBTTtJQVBOLFNBUWZDLFNBQVNKLEdBQUksT0FSYlAsS0FRYSxRQUFTO0lBUlAsU0FVZlksSUFBSUwsRUFBRUc7TUFDUixLQURRQSxFQUVFLE9BSlJDLFNBRUlKLEdBR00sSUFBTE0sSUFIQ0gsS0FHSSxPQU5WRCxTQUdJRixFQUdDTSxJQUFpQjtJQWJQLFNBZ0JmQyxVQUFVQyxVQUFVUjtNQUFZLElBQVFTLE1BWHhDVixJQVdvQkMsK0JBQVZRLFVBQThCQztJQWhCekIsU0FrQmZDLFVBQVVDLFlBQVlYO01BQ3hCO1FBQ2MsUUFmWkQsSUFhc0JDLEdBRVYsc0NBRkZXLFlBRXdCO01BRHBDLGFBQXlDQyxPLE9BSHZDTCwwQixZQUd1Q0s7TUFBekMsd0NBRHdCWixVQUVhO0lBcEJwQjt3QkFFZkwsUUFJQU07S0FOZTs7Ozs7Ozs7T0FnQmZNO09BRUFHOztPQWpCQWhCO09BQ0FDO09BQ0FFO09BRUFFO09BREFEO09BRUFHO09BSUFJO09BRkFEO09BREFGOztVIiwic291cmNlc0NvbnRlbnQiOlsib3BlbiEgQ29yZVxub3BlbiEgSW1wb3J0XG5cbnR5cGUgJ2EgdCA9ICdhIHJlZlxuXG4oKiBCZWluZyBhIHBvaW50ZXIsIG5vIG9uZSBvdXRzaWRlIHRoaXMgbW9kdWxlIGNhbiBjb25zdHJ1Y3QgYSB2YWx1ZSB0aGF0IGlzXG4gICBbcGh5c19zYW1lXSBhcyB0aGlzIG9uZS5cblxuICAgdGhpcyBjb2RlIGlzIGR1cGxpY2F0ZWQgaW4gT3B0aW9uX2FycmF5LkNoZWFwX29wdGlvbiwgYW5kIGlmIHdlIGZpbmQgeWV0IGFub3RoZXJcbiAgIHBsYWNlIHdoZXJlIHdlIHdhbnQgaXQgd2Ugc2hvdWxkIHJlY29uc2lkZXIgbWFraW5nIGl0IHNoYXJlZC4gKilcbmxldCBub25lID0gT2JqLm9iaiAoT2JqLm5ld19ibG9jayBPYmouYWJzdHJhY3RfdGFnIDEpXG5sZXQgY3JlYXRlICgpID0gcmVmIG5vbmVcbmxldCBpc19ub25lIHggPSBwaHlzX2VxdWFsICF4IG5vbmVcbmxldCBpc19zb21lIHggPSBub3QgKGlzX25vbmUgeClcbmxldCBnZXRfc29tZV9leG4geCA9IGlmIGlzX25vbmUgeCB0aGVuIHJhaXNlX3MgWyVtZXNzYWdlIFwiTW9wdGlvbi5nZXRfc29tZV9leG5cIl0gZWxzZSAheFxubGV0IGdldCB0ID0gaWYgaXNfbm9uZSB0IHRoZW4gTm9uZSBlbHNlIFNvbWUgIXRcbmxldCB1bnNhZmVfZ2V0IHQgPSAhdFxubGV0IHNldF9zb21lIHQgdiA9IHQgOj0gdlxubGV0IHNldF9ub25lIHQgPSB0IDo9IG5vbmVcblxubGV0IHNldCB0IHYgPVxuICBtYXRjaCB2IHdpdGhcbiAgfCBOb25lIC0+IHNldF9ub25lIHRcbiAgfCBTb21lIHYgLT4gc2V0X3NvbWUgdCB2XG47O1xuXG5sZXQgc2V4cF9vZl90IHNleHBfb2ZfYSB0ID0gWyVzZXhwIChnZXQgdCA6IGEgb3B0aW9uKV1cblxubGV0IGludmFyaWFudCBpbnZhcmlhbnRfYSB0ID1cbiAgSW52YXJpYW50LmludmFyaWFudCBbJWhlcmVdIHQgWyVzZXhwX29mOiBfIHRdIChmdW4gKCkgLT5cbiAgICBPcHRpb24uaXRlciAoZ2V0IHQpIH5mOmludmFyaWFudF9hKVxuOztcblxubW9kdWxlIE9wdGlvbmFsX3N5bnRheCA9IHN0cnVjdFxuICBtb2R1bGUgT3B0aW9uYWxfc3ludGF4ID0gc3RydWN0XG4gICAgbGV0IGlzX25vbmUgPSBpc19ub25lXG4gICAgbGV0IHVuc2FmZV92YWx1ZSA9IHVuc2FmZV9nZXRcbiAgZW5kXG5lbmRcbiJdfQ==
