// Generated by js_of_ocaml
//# buildInfo:effects=false, use-js-string=false, version=5.0.1
(function
   (globalThis)
   {"use strict";
    var
     runtime=globalThis.jsoo_runtime,
     caml_string_of_jsbytes=runtime.caml_string_of_jsbytes;
    function caml_call1(f,a0)
     {return f.length == 1?f(a0):runtime.caml_call_gen(f,[a0])}
    function caml_call2(f,a0,a1)
     {return f.length == 2?f(a0,a1):runtime.caml_call_gen(f,[a0,a1])}
    function caml_call3(f,a0,a1,a2)
     {return f.length == 3?f(a0,a1,a2):runtime.caml_call_gen(f,[a0,a1,a2])}
    function caml_call5(f,a0,a1,a2,a3,a4)
     {return f.length == 5
              ?f(a0,a1,a2,a3,a4)
              :runtime.caml_call_gen(f,[a0,a1,a2,a3,a4])}
    var
     global_data=runtime.caml_get_global_data(),
     cst_Weak_array=caml_string_of_jsbytes("Weak_array"),
     cst_weak_array=caml_string_of_jsbytes("weak_array"),
     cst_weak_array_src_weak_array_=
      caml_string_of_jsbytes("weak_array/src/weak_array.ml"),
     cst=caml_string_of_jsbytes(""),
     cst_weak_array$0=caml_string_of_jsbytes("weak_array"),
     cst_weak_array$1=caml_string_of_jsbytes("weak_array"),
     cst_Weak_array$0=caml_string_of_jsbytes("Weak_array"),
     Stdlib_Weak=global_data.Stdlib__Weak,
     Core_Heap_block=global_data.Core__Heap_block,
     Core=global_data.Core,
     Core_Array=global_data.Core__Array,
     Core_Option=global_data.Core__Option,
     Ppx_module_timer_runtime=global_data.Ppx_module_timer_runtime,
     Ppx_bench_lib_Benchmark_accumu=
      global_data.Ppx_bench_lib__Benchmark_accumulator,
     Expect_test_collector=global_data.Expect_test_collector,
     Ppx_inline_test_lib_Runtime=global_data.Ppx_inline_test_lib__Runtime;
    caml_call1(Ppx_module_timer_runtime[4],cst_Weak_array);
    caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1],cst_weak_array);
    caml_call1(Expect_test_collector[5][1],cst_weak_array_src_weak_array_);
    caml_call2(Ppx_inline_test_lib_Runtime[2],cst_weak_array$0,cst);
    function create(len){return caml_call1(Stdlib_Weak[1],len)}
    function length(t){return caml_call1(Stdlib_Weak[2],t)}
    var _a_=Stdlib_Weak[3];
    function set_exn(t,i,x)
     {return caml_call3
              (_a_,t,i,caml_call2(Core_Option[29],x,Core_Heap_block[3]))}
    var _b_=Stdlib_Weak[4];
    function is_some(t,i){return caml_call2(Stdlib_Weak[6],t,i)}
    function is_none(t,i){return 1 - is_some(t,i)}
    function sexp_of_t(sexp_of_a,t)
     {function _i_(i){return caml_call2(_b_,t,i)}
      var
       _j_=length(t),
       x_001=caml_call2(Core_Array[40],_j_,_i_),
       _k_=caml_call1(Core_Heap_block[1],sexp_of_a),
       _l_=caml_call1(Core[454],_k_);
      return caml_call2(Core[288],_l_,x_001)}
    function iter(t,f)
     {var _g_=length(t) - 1 | 0,_f_=0;
      if(_g_ >= 0)
       {var i=_f_;
        for(;;)
         {var match=caml_call2(_b_,t,i);
          if(match)
           {var v=match[1];caml_call1(f,caml_call1(Core_Heap_block[4],v))}
          var _h_=i + 1 | 0;
          if(_g_ !== i){var i=_h_;continue}
          break}}
      return 0}
    function iteri(t,f)
     {var _d_=length(t) - 1 | 0,_c_=0;
      if(_d_ >= 0)
       {var i=_c_;
        for(;;)
         {var match=caml_call2(_b_,t,i);
          if(match)
           {var v=match[1];caml_call2(f,i,caml_call1(Core_Heap_block[4],v))}
          var _e_=i + 1 | 0;
          if(_d_ !== i){var i=_e_;continue}
          break}}
      return 0}
    function blit(src,src_pos,dst,dst_pos,len)
     {return caml_call5(Stdlib_Weak[8],src,src_pos,dst,dst_pos,len)}
    caml_call1(Ppx_inline_test_lib_Runtime[3],cst_weak_array$1);
    caml_call1(Expect_test_collector[5][2],0);
    caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2],0);
    caml_call1(Ppx_module_timer_runtime[5],cst_Weak_array$0);
    var
     Weak_array=
      [0,
       sexp_of_t,
       create,
       length,
       _a_,
       set_exn,
       _b_,
       is_some,
       is_none,
       iter,
       iteri,
       blit];
    runtime.caml_register_global(16,Weak_array,"Weak_array");
    return}
  (globalThis));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLjAsImZpbGUiOiJ3ZWFrX2FycmF5LmNtYS5qcyIsInNvdXJjZVJvb3QiOiIiLCJuYW1lcyI6WyJjcmVhdGUiLCJsZW4iLCJsZW5ndGgiLCJ0Iiwic2V0X2V4biIsImkiLCJ4IiwiaXNfc29tZSIsImlzX25vbmUiLCJzZXhwX29mX3QiLCJzZXhwX29mX2EiLCJ4XzAwMSIsIml0ZXIiLCJmIiwidiIsIml0ZXJpIiwiYmxpdCIsInNyYyIsInNyY19wb3MiLCJkc3QiLCJkc3RfcG9zIl0sInNvdXJjZXMiOlsiL2hvbWUvYmVuLy5vcGFtLzQuMTQvbGliL2NvcmVfa2VybmVsL3dlYWtfYXJyYXkvd2Vha19hcnJheS5tbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7STs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzthQU1JQSxPQUFRQyxLQUFNLGlDQUFOQSxJQUFxQjthQUM3QkMsT0FBT0MsR0FBSSxpQ0FBSkEsRUFBaUI7O2FBR3hCQyxRQUFRRCxFQUFFRSxFQUFFQztNQUFZO21CQUFoQkgsRUFBRUUsRUFBYywyQkFBWkMsc0JBQW1EOzthQUcvREMsUUFBUUosRUFBRUUsR0FBSSxpQ0FBTkYsRUFBRUUsRUFBa0I7YUFDNUJHLFFBQVFMLEVBQUVFLEdBQVEsV0FEbEJFLFFBQ1FKLEVBQUVFLEVBQXFCO2FBRS9CSSxVQUFVQyxVQUFVUDtNQURQLGFBQThCRSxHQUFLLHNCQUM1QkYsRUFEdUJFLEVBQVk7TUFBL0I7V0FSeEJILE9BU29CQztPQURJO3lDQUNkTzs7c0NBQXlCQyxNQUF5QzthQUU1RUMsS0FBS1QsRUFBR1U7TUFDRyxRQVpYWCxPQVdLQyxXQUNQO01BQWE7WUFBYkU7UUFDRTtVQUFNLHlCQUZERixFQUNQRTtVQUNRO1lBRU0sSUFBTFMsV0FBSyxXQUpKRCxFQUlNLDhCQUFQQztVQUZELFFBRFJUOzs7Y0FJSTthQUVGVSxNQUFNWixFQUFHVTtNQUNFLFFBbkJYWCxPQWtCTUMsV0FDUjtNQUFhO1lBQWJFO1FBQ0U7VUFBTSx5QkFGQUYsRUFDUkU7VUFDUTtZQUVNLElBQUxTLFdBQUssV0FKSEQsRUFDWFIsRUFHa0IsOEJBQVRTO1VBRkQsUUFEUlQ7OztjQUlJO2FBRUZXLEtBQU1DLElBQUtDLFFBQVNDLElBQUtDLFFBQVNuQjtNQUNwQyxpQ0FEUWdCLElBQUtDLFFBQVNDLElBQUtDLFFBQVNuQixJQUNDOzs7Ozs7OztPQWpCbkNRO09BVkFUO09BQ0FFOztPQUdBRTs7T0FHQUc7T0FDQUM7T0FJQUk7T0FPQUc7T0FPQUM7O1UiLCJzb3VyY2VzQ29udGVudCI6WyJvcGVuISBDb3JlXG5cbm1vZHVsZSBXZWFrID0gQ2FtbC5XZWFrXG5cbnR5cGUgJ2EgdCA9ICdhIEhlYXBfYmxvY2sudCBXZWFrLnRcblxubGV0IGNyZWF0ZSB+bGVuID0gV2Vhay5jcmVhdGUgbGVuXG5sZXQgbGVuZ3RoIHQgPSBXZWFrLmxlbmd0aCB0XG5sZXQgc2V0ID0gV2Vhay5zZXRcblxubGV0IHNldF9leG4gdCBpIHggPSBzZXQgdCBpIChPcHRpb24ubWFwIHggfmY6SGVhcF9ibG9jay5jcmVhdGVfZXhuKVxuXG5sZXQgZ2V0ID0gV2Vhay5nZXRcbmxldCBpc19zb21lIHQgaSA9IFdlYWsuY2hlY2sgdCBpXG5sZXQgaXNfbm9uZSB0IGkgPSBub3QgKGlzX3NvbWUgdCBpKVxubGV0IHRvX2FycmF5IHQgPSBBcnJheS5pbml0IChsZW5ndGggdCkgfmY6KGZ1biBpIC0+IGdldCB0IGkpXG5sZXQgc2V4cF9vZl90IHNleHBfb2ZfYSB0ID0gWyVzZXhwX29mOiBhIEhlYXBfYmxvY2sudCBvcHRpb24gYXJyYXldICh0b19hcnJheSB0KVxuXG5sZXQgaXRlciB0IH5mID1cbiAgZm9yIGkgPSAwIHRvIGxlbmd0aCB0IC0gMSBkb1xuICAgIG1hdGNoIGdldCB0IGkgd2l0aFxuICAgIHwgTm9uZSAtPiAoKVxuICAgIHwgU29tZSB2IC0+IGYgKEhlYXBfYmxvY2sudmFsdWUgdilcbiAgZG9uZVxuXG5sZXQgaXRlcmkgdCB+ZiA9XG4gIGZvciBpID0gMCB0byBsZW5ndGggdCAtIDEgZG9cbiAgICBtYXRjaCBnZXQgdCBpIHdpdGhcbiAgICB8IE5vbmUgLT4gKClcbiAgICB8IFNvbWUgdiAtPiBmIGkgKEhlYXBfYmxvY2sudmFsdWUgdilcbiAgZG9uZVxuXG5sZXQgYmxpdCB+c3JjIH5zcmNfcG9zIH5kc3QgfmRzdF9wb3MgfmxlbiA9XG4gIFdlYWsuYmxpdCBzcmMgc3JjX3BvcyBkc3QgZHN0X3BvcyBsZW5cbiJdfQ==
