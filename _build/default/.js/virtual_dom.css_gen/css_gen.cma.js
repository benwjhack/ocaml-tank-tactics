// Generated by js_of_ocaml
//# buildInfo:effects=false, use-js-string=false, version=5.0.1
(function
   (globalThis)
   {"use strict";
    var
     runtime=globalThis.jsoo_runtime,
     caml_compare=runtime.caml_compare,
     caml_int_compare=runtime.caml_int_compare,
     caml_ml_string_length=runtime.caml_ml_string_length,
     caml_register_global=runtime.caml_register_global,
     caml_string_compare=runtime.caml_string_compare,
     caml_string_notequal=runtime.caml_string_notequal,
     caml_string_of_jsbytes=runtime.caml_string_of_jsbytes,
     caml_wrap_exception=runtime.caml_wrap_exception;
    function caml_call1(f,a0)
     {return f.length == 1?f(a0):runtime.caml_call_gen(f,[a0])}
    function caml_call2(f,a0,a1)
     {return f.length == 2?f(a0,a1):runtime.caml_call_gen(f,[a0,a1])}
    function caml_call3(f,a0,a1,a2)
     {return f.length == 3?f(a0,a1,a2):runtime.caml_call_gen(f,[a0,a1,a2])}
    function caml_call4(f,a0,a1,a2,a3)
     {return f.length == 4
              ?f(a0,a1,a2,a3)
              :runtime.caml_call_gen(f,[a0,a1,a2,a3])}
    function caml_call8(f,a0,a1,a2,a3,a4,a5,a6,a7)
     {return f.length == 8
              ?f(a0,a1,a2,a3,a4,a5,a6,a7)
              :runtime.caml_call_gen(f,[a0,a1,a2,a3,a4,a5,a6,a7])}
    function caml_call9(f,a0,a1,a2,a3,a4,a5,a6,a7,a8)
     {return f.length == 9
              ?f(a0,a1,a2,a3,a4,a5,a6,a7,a8)
              :runtime.caml_call_gen(f,[a0,a1,a2,a3,a4,a5,a6,a7,a8])}
    var
     global_data=runtime.caml_get_global_data(),
     cst_test_19abf2_2=caml_string_of_jsbytes('"test\\19abf2\\2"'),
     cst_010_xFFa_o123_n_u_12345_aa=
      caml_string_of_jsbytes
       ('"\\010\\xFFa\\o123\\n\\\\\\u{12345}aa\xf0\x9f\x90\xaa\xf0\x9f\x90\xaa\xf0\x9f\x90\xaa\xf0\x9f\x90\xaa\xf0\x9f\x90\xaa"'),
     cst$11=
      caml_string_of_jsbytes
       ('"\xe2\x86\x90 \xe2\x86\x91 \xe2\x86\x92 \xe2\x86\x93 \xe2\x86\x94 \xe2\x86\x95 \xe2\x87\xaa \xe2\x86\xb9 \xe2\xac\x88 \xe2\x86\x98 \xe2\x9f\xbe \xe2\x86\xb6"'),
     cst_css_gen_src_css_tokenizer_$55=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_url_http_wwww_google_com=
      caml_string_of_jsbytes('url( "http://wwww.google.com")'),
     cst_url_http_wwww_google_com$0=
      caml_string_of_jsbytes("url('http://wwww.google.com')"),
     cst_url_http_wwww_google_com$1=
      caml_string_of_jsbytes("url('http://wwww.google.com' )"),
     cst_url_http_wwww_google_com$2=
      caml_string_of_jsbytes("url(  http://wwww.google.com )"),
     cst_url_http_wwww_google_com$3=
      caml_string_of_jsbytes('url(  http://wwww.google."com )'),
     cst_css_gen_src_css_tokenizer_$50=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_red=caml_string_of_jsbytes("red-->"),
     cst_css_gen_src_css_tokenizer_$45=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_import_foo_bar=caml_string_of_jsbytes('@import "foo.bar";'),
     cst_css_gen_src_css_tokenizer_$40=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_color_f00=caml_string_of_jsbytes("color: #f00"),
     cst_color_rgb_255_0_0=caml_string_of_jsbytes("color: rgb(255,0,0)"),
     cst_color_rgb_255_0_0$0=caml_string_of_jsbytes("color: rgb(255,0,0)"),
     cst_css_gen_src_css_tokenizer_$35=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_Foo_Bar=caml_string_of_jsbytes("'Foo '\"Bar\"';' '\\'' \"\\\"\""),
     cst_css_gen_src_css_tokenizer_$30=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_foo_bar$3=caml_string_of_jsbytes("'foo bar"),
     cst$9=caml_string_of_jsbytes("'"),
     cst$10=caml_string_of_jsbytes("'\\'"),
     cst_css_gen_src_css_tokenizer_$25=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_margin_0_5en=caml_string_of_jsbytes("margin: 0.5en"),
     cst_margin_0_5em=caml_string_of_jsbytes("margin: 0.5em"),
     cst_margin_0_5in=caml_string_of_jsbytes("margin: 0.5in"),
     cst_line_height_3cm=caml_string_of_jsbytes("line-height: 3cm"),
     cst_line_height_120=caml_string_of_jsbytes("line-height: 120%"),
     cst_grid_0_1_foo=caml_string_of_jsbytes("grid: 0 1 foo"),
     cst_margin_0_5_in=caml_string_of_jsbytes("margin: 0.5-in"),
     cst_margin_02e_20=caml_string_of_jsbytes("margin: .02e+20"),
     cst_margin_02e_20$0=caml_string_of_jsbytes("margin: .02e-20"),
     cst_margin_02E_20=caml_string_of_jsbytes("margin: .02E+20"),
     cst_margin_02E_20$0=caml_string_of_jsbytes("margin: .02E-20"),
     cst_margin_02E20=caml_string_of_jsbytes("margin: .02E20"),
     cst_margin_02e20=caml_string_of_jsbytes("margin: .02e20"),
     cst_css_gen_src_css_tokenizer_$20=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst$8=caml_string_of_jsbytes("  "),
     cst_css_gen_src_css_tokenizer_$15=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_foo_bar_baz=caml_string_of_jsbytes("-foo-bar: baz"),
     cst_foo_bar=caml_string_of_jsbytes("-foo-bar("),
     cst_foo_bar$0=caml_string_of_jsbytes("@foo-bar"),
     cst_foo_bar$1=caml_string_of_jsbytes("@-foo-bar"),
     cst_foo_bar$2=caml_string_of_jsbytes("@--foo-bar"),
     cst_var=caml_string_of_jsbytes("--var"),
     cst_RGBA=caml_string_of_jsbytes("RGBA"),
     cst_css_gen_src_css_tokenizer_$10=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst$7=caml_string_of_jsbytes(")({}[];:"),
     cst_css_gen_src_css_tokenizer_$5=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst$6=caml_string_of_jsbytes(""),
     cst_css_gen_src_css_tokenizer_$0=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$1=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$2=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$3=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$4=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_b2813aff1a52f8875e7ce14896=
      caml_string_of_jsbytes("b2813aff1a52f8875e7ce1489676cec3"),
     cst_css_gen_src_css_tokenizer_$6=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$7=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$8=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$9=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_b2813aff1a52f8875e7ce14896$0=
      caml_string_of_jsbytes("b2813aff1a52f8875e7ce1489676cec3"),
     cst_css_gen_src_css_tokenizer_$11=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$12=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$13=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$14=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_b2813aff1a52f8875e7ce14896$1=
      caml_string_of_jsbytes("b2813aff1a52f8875e7ce1489676cec3"),
     cst_css_gen_src_css_tokenizer_$16=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$17=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$18=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$19=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_b2813aff1a52f8875e7ce14896$2=
      caml_string_of_jsbytes("b2813aff1a52f8875e7ce1489676cec3"),
     cst_css_gen_src_css_tokenizer_$21=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$22=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$23=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$24=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_b2813aff1a52f8875e7ce14896$3=
      caml_string_of_jsbytes("b2813aff1a52f8875e7ce1489676cec3"),
     cst_css_gen_src_css_tokenizer_$26=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$27=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$28=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$29=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_b2813aff1a52f8875e7ce14896$4=
      caml_string_of_jsbytes("b2813aff1a52f8875e7ce1489676cec3"),
     cst_css_gen_src_css_tokenizer_$31=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$32=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$33=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$34=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_b2813aff1a52f8875e7ce14896$5=
      caml_string_of_jsbytes("b2813aff1a52f8875e7ce1489676cec3"),
     cst_css_gen_src_css_tokenizer_$36=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$37=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$38=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$39=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_b2813aff1a52f8875e7ce14896$6=
      caml_string_of_jsbytes("b2813aff1a52f8875e7ce1489676cec3"),
     cst_css_gen_src_css_tokenizer_$41=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$42=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$43=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$44=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_b2813aff1a52f8875e7ce14896$7=
      caml_string_of_jsbytes("b2813aff1a52f8875e7ce1489676cec3"),
     cst_css_gen_src_css_tokenizer_$46=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$47=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$48=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$49=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_b2813aff1a52f8875e7ce14896$8=
      caml_string_of_jsbytes("b2813aff1a52f8875e7ce1489676cec3"),
     cst_css_gen_src_css_tokenizer_$51=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$52=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$53=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$54=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_b2813aff1a52f8875e7ce14896$9=
      caml_string_of_jsbytes("b2813aff1a52f8875e7ce1489676cec3"),
     cst_css_gen_src_css_tokenizer_$56=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$57=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$58=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_css_gen_src_css_tokenizer_$59=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_b2813aff1a52f8875e7ce14896$10=
      caml_string_of_jsbytes("b2813aff1a52f8875e7ce1489676cec3"),
     cst$5=caml_string_of_jsbytes(""),
     cst$4=caml_string_of_jsbytes("@"),
     cst$3=caml_string_of_jsbytes(""),
     cst$2=caml_string_of_jsbytes("*/"),
     cst$1=caml_string_of_jsbytes("/*"),
     cst_url=caml_string_of_jsbytes("url("),
     cst$0=caml_string_of_jsbytes(""),
     cst_atkeyword=caml_string_of_jsbytes("atkeyword"),
     cst_Lbracket=caml_string_of_jsbytes("Lbracket"),
     cst_Dimension=caml_string_of_jsbytes("Dimension"),
     cst_Atkeyword=caml_string_of_jsbytes("Atkeyword"),
     cst_Colon=caml_string_of_jsbytes("Colon"),
     cst_Comma=caml_string_of_jsbytes("Comma"),
     cst_Comment=caml_string_of_jsbytes("Comment"),
     cst_Delim=caml_string_of_jsbytes("Delim"),
     cst_Eof=caml_string_of_jsbytes("Eof"),
     cst_Error=caml_string_of_jsbytes("Error"),
     cst_Function=caml_string_of_jsbytes("Function"),
     cst_Hash=caml_string_of_jsbytes("Hash"),
     cst_Ident=caml_string_of_jsbytes("Ident"),
     cst_Rcurly=caml_string_of_jsbytes("Rcurly"),
     cst_Lcurly=caml_string_of_jsbytes("Lcurly"),
     cst_Lparen=caml_string_of_jsbytes("Lparen"),
     cst_Number=caml_string_of_jsbytes("Number"),
     cst_Percentage=caml_string_of_jsbytes("Percentage"),
     cst_Rbracket=caml_string_of_jsbytes("Rbracket"),
     cst_Rparen=caml_string_of_jsbytes("Rparen"),
     cst_Semi_colon=caml_string_of_jsbytes("Semi_colon"),
     cst_String=caml_string_of_jsbytes("String"),
     cst_Uri=caml_string_of_jsbytes("Uri"),
     cst_White_space=caml_string_of_jsbytes("White_space"),
     cst_lcurly=caml_string_of_jsbytes("lcurly"),
     cst_eof=caml_string_of_jsbytes("eof"),
     cst_colon=caml_string_of_jsbytes("colon"),
     cst_comma=caml_string_of_jsbytes("comma"),
     cst_comment=caml_string_of_jsbytes("comment"),
     cst_delim=caml_string_of_jsbytes("delim"),
     cst_dimension=caml_string_of_jsbytes("dimension"),
     cst_error=caml_string_of_jsbytes("error"),
     cst_function=caml_string_of_jsbytes("function"),
     cst_hash=caml_string_of_jsbytes("hash"),
     cst_ident=caml_string_of_jsbytes("ident"),
     cst_lbracket=caml_string_of_jsbytes("lbracket"),
     cst_rparen=caml_string_of_jsbytes("rparen"),
     cst_lparen=caml_string_of_jsbytes("lparen"),
     cst_number=caml_string_of_jsbytes("number"),
     cst_percentage=caml_string_of_jsbytes("percentage"),
     cst_rbracket=caml_string_of_jsbytes("rbracket"),
     cst_rcurly=caml_string_of_jsbytes("rcurly"),
     cst_semi_colon=caml_string_of_jsbytes("semi_colon"),
     cst_string=caml_string_of_jsbytes("string"),
     cst_uri=caml_string_of_jsbytes("uri"),
     cst_white_space=caml_string_of_jsbytes("white_space"),
     cst_atkeyword$0=caml_string_of_jsbytes("atkeyword"),
     cst_Lbracket$0=caml_string_of_jsbytes("Lbracket"),
     cst_Dimension$0=caml_string_of_jsbytes("Dimension"),
     cst_Atkeyword$0=caml_string_of_jsbytes("Atkeyword"),
     cst_Colon$0=caml_string_of_jsbytes("Colon"),
     cst_Comma$0=caml_string_of_jsbytes("Comma"),
     cst_Comment$0=caml_string_of_jsbytes("Comment"),
     cst_Delim$0=caml_string_of_jsbytes("Delim"),
     cst_Eof$0=caml_string_of_jsbytes("Eof"),
     cst_Error$0=caml_string_of_jsbytes("Error"),
     cst_Function$0=caml_string_of_jsbytes("Function"),
     cst_Hash$0=caml_string_of_jsbytes("Hash"),
     cst_Ident$0=caml_string_of_jsbytes("Ident"),
     cst_Rcurly$0=caml_string_of_jsbytes("Rcurly"),
     cst_Lcurly$0=caml_string_of_jsbytes("Lcurly"),
     cst_Lparen$0=caml_string_of_jsbytes("Lparen"),
     cst_Number$0=caml_string_of_jsbytes("Number"),
     cst_Percentage$0=caml_string_of_jsbytes("Percentage"),
     cst_Rbracket$0=caml_string_of_jsbytes("Rbracket"),
     cst_Rparen$0=caml_string_of_jsbytes("Rparen"),
     cst_Semi_colon$0=caml_string_of_jsbytes("Semi_colon"),
     cst_String$0=caml_string_of_jsbytes("String"),
     cst_Uri$0=caml_string_of_jsbytes("Uri"),
     cst_White_space$0=caml_string_of_jsbytes("White_space"),
     cst_lcurly$0=caml_string_of_jsbytes("lcurly"),
     cst_eof$0=caml_string_of_jsbytes("eof"),
     cst_colon$0=caml_string_of_jsbytes("colon"),
     cst_comma$0=caml_string_of_jsbytes("comma"),
     cst_comment$0=caml_string_of_jsbytes("comment"),
     cst_delim$0=caml_string_of_jsbytes("delim"),
     cst_dimension$0=caml_string_of_jsbytes("dimension"),
     cst_error$0=caml_string_of_jsbytes("error"),
     cst_function$0=caml_string_of_jsbytes("function"),
     cst_hash$0=caml_string_of_jsbytes("hash"),
     cst_ident$0=caml_string_of_jsbytes("ident"),
     cst_lbracket$0=caml_string_of_jsbytes("lbracket"),
     cst_rparen$0=caml_string_of_jsbytes("rparen"),
     cst_lparen$0=caml_string_of_jsbytes("lparen"),
     cst_number$0=caml_string_of_jsbytes("number"),
     cst_percentage$0=caml_string_of_jsbytes("percentage"),
     cst_rbracket$0=caml_string_of_jsbytes("rbracket"),
     cst_rcurly$0=caml_string_of_jsbytes("rcurly"),
     cst_semi_colon$0=caml_string_of_jsbytes("semi_colon"),
     cst_string$0=caml_string_of_jsbytes("string"),
     cst_uri$0=caml_string_of_jsbytes("uri"),
     cst_white_space$0=caml_string_of_jsbytes("white_space"),
     cst_Css_gen_Css_tokenizer=
      caml_string_of_jsbytes("Css_gen__Css_tokenizer"),
     cst_css_gen=caml_string_of_jsbytes("css_gen"),
     cst_css_gen_src_css_tokenizer_=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst=caml_string_of_jsbytes(""),
     cst_css_gen$0=caml_string_of_jsbytes("css_gen"),
     error_source_003=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml.Token.t"),
     cst_Css_gen_Css_tokenizer_Erro=
      caml_string_of_jsbytes("Css_gen__Css_tokenizer.Error_happened"),
     cst_css_gen_src_css_tokenizer_$60=
      caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),
     cst_tests=caml_string_of_jsbytes("tests"),
     cst_css_gen$1=caml_string_of_jsbytes("css_gen"),
     cst_Css_gen_Css_tokenizer$0=
      caml_string_of_jsbytes("Css_gen__Css_tokenizer"),
     cst_Expected_any=caml_string_of_jsbytes("Expected <any>"),
     cst_Expected_value=caml_string_of_jsbytes("Expected <value>"),
     cst_flex_1_0_auto$0=caml_string_of_jsbytes("flex: 1 0 auto"),
     cst_flex_1_0_auto$1=caml_string_of_jsbytes("flex: 1 0 auto;"),
     cst_background_5d9ab2_url_img_=
      caml_string_of_jsbytes
       ('background: #5d9ab2 url("img_tree.png") no-repeat top left;margin-left: 200px'),
     cst$14=caml_string_of_jsbytes(";;;;;"),
     cst_flex_1_0_auto_other_sa=
      caml_string_of_jsbytes("flex: 1 0 auto ;; other : sa "),
     cst_css_gen_src_css_parser_ml$23=
      caml_string_of_jsbytes("css_gen/src/css_parser.ml"),
     cst_content=
      caml_string_of_jsbytes
       ("content: '\xe2\x86\x90 \xe2\x86\x91 \xe2\x86\x92 \xe2\x86\x93 \xe2\x86\x94 \xe2\x86\x95 \xe2\x87\xaa \xe2\x86\xb9 \xe2\xac\x88 \xe2\x86\x98 \xe2\x9f\xbe \xe2\x86\xb6'"),
     cst_css_gen_src_css_parser_ml$18=
      caml_string_of_jsbytes("css_gen/src/css_parser.ml"),
     cst_flex_1_0_auto=caml_string_of_jsbytes("flex: 1 0 auto"),
     cst_content_Hello_World=caml_string_of_jsbytes("content: 'Hello World'"),
     cst_content_foo=caml_string_of_jsbytes("content: foo;"),
     cst_content_bar=caml_string_of_jsbytes("content: bar "),
     cst_css_gen_src_css_parser_ml$13=
      caml_string_of_jsbytes("css_gen/src/css_parser.ml"),
     cst_x=caml_string_of_jsbytes("x"),
     cst_3=caml_string_of_jsbytes("3"),
     cst_3in=caml_string_of_jsbytes("3in"),
     cst_3$0=caml_string_of_jsbytes("3%"),
     cst_fff=caml_string_of_jsbytes("#fff"),
     cst_1_0_auto=caml_string_of_jsbytes("1 0 auto"),
     cst_Hello_World=caml_string_of_jsbytes("'Hello World'"),
     cst_rgb_0_0_0=caml_string_of_jsbytes("rgb(0,0,0)"),
     cst_css_gen_src_css_parser_ml$8=
      caml_string_of_jsbytes("css_gen/src/css_parser.ml"),
     s=
      caml_string_of_jsbytes
       ("0 4px 8px 0 RGBA(var(--js-text-color-rgb), 0.12), 0 2px 4px 0 RGBA(var(--js-text-color-rgb), 0.08)"),
     cst_css_gen_src_css_parser_ml$0=
      caml_string_of_jsbytes("css_gen/src/css_parser.ml"),
     cst_css_gen_src_css_parser_ml$1=
      caml_string_of_jsbytes("css_gen/src/css_parser.ml"),
     cst_css_gen_src_css_parser_ml$2=
      caml_string_of_jsbytes("css_gen/src/css_parser.ml"),
     cst_css_gen_src_css_parser_ml$3=
      caml_string_of_jsbytes("css_gen/src/css_parser.ml"),
     cst_css_gen_src_css_parser_ml$4=
      caml_string_of_jsbytes("css_gen/src/css_parser.ml"),
     cst_css_gen_src_css_parser_ml$5=
      caml_string_of_jsbytes("css_gen/src/css_parser.ml"),
     cst_css_gen_src_css_parser_ml$6=
      caml_string_of_jsbytes("css_gen/src/css_parser.ml"),
     cst_css_gen_src_css_parser_ml$7=
      caml_string_of_jsbytes("css_gen/src/css_parser.ml"),
     cst_b7a9b3a8ca078e6eda4e6e123f=
      caml_string_of_jsbytes("b7a9b3a8ca078e6eda4e6e123fe26992"),
     cst_css_gen_src_css_parser_ml$9=
      caml_string_of_jsbytes("css_gen/src/css_parser.ml"),
     cst_css_gen_src_css_parser_ml$10=
      caml_string_of_jsbytes("css_gen/src/css_parser.ml"),
     cst_css_gen_src_css_parser_ml$11=
      caml_string_of_jsbytes("css_gen/src/css_parser.ml"),
     cst_css_gen_src_css_parser_ml$12=
      caml_string_of_jsbytes("css_gen/src/css_parser.ml"),
     cst_b7a9b3a8ca078e6eda4e6e123f$0=
      caml_string_of_jsbytes("b7a9b3a8ca078e6eda4e6e123fe26992"),
     cst_css_gen_src_css_parser_ml$14=
      caml_string_of_jsbytes("css_gen/src/css_parser.ml"),
     cst_css_gen_src_css_parser_ml$15=
      caml_string_of_jsbytes("css_gen/src/css_parser.ml"),
     cst_css_gen_src_css_parser_ml$16=
      caml_string_of_jsbytes("css_gen/src/css_parser.ml"),
     cst_css_gen_src_css_parser_ml$17=
      caml_string_of_jsbytes("css_gen/src/css_parser.ml"),
     cst_b7a9b3a8ca078e6eda4e6e123f$1=
      caml_string_of_jsbytes("b7a9b3a8ca078e6eda4e6e123fe26992"),
     cst_css_gen_src_css_parser_ml$19=
      caml_string_of_jsbytes("css_gen/src/css_parser.ml"),
     cst_css_gen_src_css_parser_ml$20=
      caml_string_of_jsbytes("css_gen/src/css_parser.ml"),
     cst_css_gen_src_css_parser_ml$21=
      caml_string_of_jsbytes("css_gen/src/css_parser.ml"),
     cst_css_gen_src_css_parser_ml$22=
      caml_string_of_jsbytes("css_gen/src/css_parser.ml"),
     cst_b7a9b3a8ca078e6eda4e6e123f$2=
      caml_string_of_jsbytes("b7a9b3a8ca078e6eda4e6e123fe26992"),
     cst_css_gen_src_css_parser_ml$24=
      caml_string_of_jsbytes("css_gen/src/css_parser.ml"),
     cst_css_gen_src_css_parser_ml$25=
      caml_string_of_jsbytes("css_gen/src/css_parser.ml"),
     cst_css_gen_src_css_parser_ml$26=
      caml_string_of_jsbytes("css_gen/src/css_parser.ml"),
     cst_css_gen_src_css_parser_ml$27=
      caml_string_of_jsbytes("css_gen/src/css_parser.ml"),
     cst_b7a9b3a8ca078e6eda4e6e123f$3=
      caml_string_of_jsbytes("b7a9b3a8ca078e6eda4e6e123fe26992"),
     cst_s_sexp_arg_Or_error_t=
      caml_string_of_jsbytes("%s --> %{sexp:arg Or_error.t}\n"),
     cst$13=caml_string_of_jsbytes(" --> "),
     cst_Expected_declaration=caml_string_of_jsbytes("Expected <declaration>"),
     cst_Unexpected_token=caml_string_of_jsbytes("Unexpected token"),
     cst_Css_gen_Css_parser=caml_string_of_jsbytes("Css_gen__Css_parser"),
     cst_css_gen$2=caml_string_of_jsbytes("css_gen"),
     cst_css_gen_src_css_parser_ml=
      caml_string_of_jsbytes("css_gen/src/css_parser.ml"),
     cst$12=caml_string_of_jsbytes(""),
     cst_css_gen$3=caml_string_of_jsbytes("css_gen"),
     cst_css_gen_src_css_parser_ml$28=
      caml_string_of_jsbytes("css_gen/src/css_parser.ml"),
     cst_tests$0=caml_string_of_jsbytes("tests"),
     cst_css_gen$4=caml_string_of_jsbytes("css_gen"),
     cst_Css_gen_Css_parser$0=caml_string_of_jsbytes("Css_gen__Css_parser"),
     cst_red$0=caml_string_of_jsbytes("red"),
     cst_ff0000=caml_string_of_jsbytes("#ff0000"),
     cst_black=caml_string_of_jsbytes("black"),
     cst_css_gen_src_css_gen_ml$5=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml"),
     cst_red$1=caml_string_of_jsbytes("red"),
     cst_black$0=caml_string_of_jsbytes("black"),
     cst_css_gen_src_css_gen_ml$6=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml"),
     cst$57=caml_string_of_jsbytes('";"'),
     cst_content$0=caml_string_of_jsbytes("content"),
     cst_css_gen_src_css_gen_ml$0=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml"),
     cst_css_gen_src_css_gen_ml$1=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml"),
     cst_css_gen_src_css_gen_ml$2=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml"),
     cst_css_gen_src_css_gen_ml$3=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml"),
     cst_css_gen_src_css_gen_ml$4=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml"),
     cst_137ca25006cdd4c0890902a6ef=
      caml_string_of_jsbytes("137ca25006cdd4c0890902a6ef98fe65"),
     cst_css_gen_src_css_gen_ml$7=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml"),
     cst_css_gen_src_css_gen_ml$8=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml"),
     cst_css_gen_src_css_gen_ml$9=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml"),
     cst_css_gen_src_css_gen_ml$10=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml"),
     cst_css_gen_src_css_gen_ml$11=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml"),
     cst_css_gen_src_css_gen_ml$12=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml"),
     cst_137ca25006cdd4c0890902a6ef$0=
      caml_string_of_jsbytes("137ca25006cdd4c0890902a6ef98fe65"),
     cst_user_select=caml_string_of_jsbytes("user-select"),
     cst_text=caml_string_of_jsbytes("text"),
     cst_none$5=caml_string_of_jsbytes("none"),
     cst_auto$2=caml_string_of_jsbytes("auto"),
     cst_all=caml_string_of_jsbytes("all"),
     cst_animation_delay=caml_string_of_jsbytes("animation-delay"),
     cst_animation_iteration_count=
      caml_string_of_jsbytes("animation-iteration-count"),
     cst_animation_timing_function=
      caml_string_of_jsbytes("animation-timing-function"),
     cst_none$4=caml_string_of_jsbytes("none"),
     cst_backwards=caml_string_of_jsbytes("backwards"),
     cst_both$0=caml_string_of_jsbytes("both"),
     cst_initial$17=caml_string_of_jsbytes("initial"),
     cst_forwards=caml_string_of_jsbytes("forwards"),
     cst_inherit$17=caml_string_of_jsbytes("inherit"),
     cst_animation_fill_mode=caml_string_of_jsbytes("animation-fill-mode"),
     cst_initial$16=caml_string_of_jsbytes("initial"),
     cst_inherit$16=caml_string_of_jsbytes("inherit"),
     cst_alternate_reverse=caml_string_of_jsbytes("alternate-reverse"),
     cst_reverse=caml_string_of_jsbytes("reverse"),
     cst_normal$3=caml_string_of_jsbytes("normal"),
     cst_alternate=caml_string_of_jsbytes("alternate"),
     cst_animation_direction=caml_string_of_jsbytes("animation-direction"),
     cst$56=caml_string_of_jsbytes(""),
     cst_animation_duration=caml_string_of_jsbytes("animation-duration"),
     cst_animation_name=caml_string_of_jsbytes("animation-name"),
     cst_none$3=caml_string_of_jsbytes("none"),
     cst_both=caml_string_of_jsbytes("both"),
     cst_initial$15=caml_string_of_jsbytes("initial"),
     cst_horizontal=caml_string_of_jsbytes("horizontal"),
     cst_inherit$15=caml_string_of_jsbytes("inherit"),
     cst_vertical=caml_string_of_jsbytes("vertical"),
     cst_resize=caml_string_of_jsbytes("resize"),
     cst_align_self=caml_string_of_jsbytes("align-self"),
     cst_order=caml_string_of_jsbytes("order"),
     cst$53=caml_string_of_jsbytes(" "),
     cst$54=caml_string_of_jsbytes(" "),
     cst$55=caml_string_of_jsbytes(""),
     cst_flex$0=caml_string_of_jsbytes("flex"),
     cst_column_reverse=caml_string_of_jsbytes("column-reverse"),
     cst_row_reverse=caml_string_of_jsbytes("row-reverse"),
     cst_row=caml_string_of_jsbytes("row"),
     cst_column=caml_string_of_jsbytes("column"),
     cst_wrap=caml_string_of_jsbytes("wrap"),
     cst_nowrap$0=caml_string_of_jsbytes("nowrap"),
     cst_wrap_reverse=caml_string_of_jsbytes("wrap-reverse"),
     cst_align_items=caml_string_of_jsbytes("align-items"),
     cst_justify_content=caml_string_of_jsbytes("justify-content"),
     cst_flex_wrap=caml_string_of_jsbytes("flex-wrap"),
     cst_flex_direction=caml_string_of_jsbytes("flex-direction"),
     cst_center$1=caml_string_of_jsbytes("center"),
     cst_space_evenly=caml_string_of_jsbytes("space-evenly"),
     cst_flex_start$0=caml_string_of_jsbytes("flex-start"),
     cst_space_between=caml_string_of_jsbytes("space-between"),
     cst_flex_end$0=caml_string_of_jsbytes("flex-end"),
     cst_space_around=caml_string_of_jsbytes("space-around"),
     cst_center$0=caml_string_of_jsbytes("center"),
     cst_auto$1=caml_string_of_jsbytes("auto"),
     cst_flex_start=caml_string_of_jsbytes("flex-start"),
     cst_baseline=caml_string_of_jsbytes("baseline"),
     cst_flex_end=caml_string_of_jsbytes("flex-end"),
     cst_stretch=caml_string_of_jsbytes("stretch"),
     cst_none$2=caml_string_of_jsbytes("none"),
     cst_underline=caml_string_of_jsbytes("underline"),
     cst_overline=caml_string_of_jsbytes("overline"),
     cst_initial$13=caml_string_of_jsbytes("initial"),
     cst_inherit$13=caml_string_of_jsbytes("inherit"),
     cst_line_through=caml_string_of_jsbytes("line-through"),
     cst_wavy=caml_string_of_jsbytes("wavy"),
     cst_initial$14=caml_string_of_jsbytes("initial"),
     cst_solid$0=caml_string_of_jsbytes("solid"),
     cst_inherit$14=caml_string_of_jsbytes("inherit"),
     cst_double$0=caml_string_of_jsbytes("double"),
     cst_dashed$0=caml_string_of_jsbytes("dashed"),
     cst_dotted$0=caml_string_of_jsbytes("dotted"),
     cst$52=caml_string_of_jsbytes(""),
     cst_text_decoration=caml_string_of_jsbytes("text-decoration"),
     cst_border_radius=caml_string_of_jsbytes("border-radius"),
     cst_collapse$0=caml_string_of_jsbytes("collapse"),
     cst_initial$12=caml_string_of_jsbytes("initial"),
     cst_inherit$12=caml_string_of_jsbytes("inherit"),
     cst_separate=caml_string_of_jsbytes("separate"),
     cst_border_collapse=caml_string_of_jsbytes("border-collapse"),
     cst_outline=caml_string_of_jsbytes("outline"),
     cst_border_left=caml_string_of_jsbytes("border-left"),
     cst_border_bottom=caml_string_of_jsbytes("border-bottom"),
     cst_border_top=caml_string_of_jsbytes("border-top"),
     cst_border_right=caml_string_of_jsbytes("border-right"),
     cst_border=caml_string_of_jsbytes("border"),
     cst_none$1=caml_string_of_jsbytes("none"),
     cst_initial$11=caml_string_of_jsbytes("initial"),
     cst_solid=caml_string_of_jsbytes("solid"),
     cst_hidden$1=caml_string_of_jsbytes("hidden"),
     cst_ridge=caml_string_of_jsbytes("ridge"),
     cst_inherit$11=caml_string_of_jsbytes("inherit"),
     cst_double=caml_string_of_jsbytes("double"),
     cst_dotted=caml_string_of_jsbytes("dotted"),
     cst_dashed=caml_string_of_jsbytes("dashed"),
     cst_inset=caml_string_of_jsbytes("inset"),
     cst_groove=caml_string_of_jsbytes("groove"),
     cst_outset=caml_string_of_jsbytes("outset"),
     cst$49=caml_string_of_jsbytes(""),
     cst$50=caml_string_of_jsbytes(""),
     cst$51=caml_string_of_jsbytes(" "),
     cst_none$0=caml_string_of_jsbytes("none"),
     cst_left$1=caml_string_of_jsbytes("left"),
     cst_initial$10=caml_string_of_jsbytes("initial"),
     cst_inherit$10=caml_string_of_jsbytes("inherit"),
     cst_right$1=caml_string_of_jsbytes("right"),
     cst_float=caml_string_of_jsbytes("float"),
     cst_radial_gradient=caml_string_of_jsbytes("radial-gradient("),
     cst$47=caml_string_of_jsbytes(""),
     cst_deg=caml_string_of_jsbytes("deg, "),
     cst_linear_gradient=caml_string_of_jsbytes("linear-gradient("),
     cst$48=caml_string_of_jsbytes(""),
     cst_url$0=caml_string_of_jsbytes("url("),
     cst$46=caml_string_of_jsbytes(""),
     cst_background_image=caml_string_of_jsbytes("background-image"),
     cst$44=caml_string_of_jsbytes(" "),
     cst$45=caml_string_of_jsbytes(""),
     cst_fill=caml_string_of_jsbytes("fill"),
     cst_background_color=caml_string_of_jsbytes("background-color"),
     cst_color=caml_string_of_jsbytes("color"),
     cst_initial$9=caml_string_of_jsbytes("initial"),
     cst_small_caps=caml_string_of_jsbytes("small-caps"),
     cst_inherit$9=caml_string_of_jsbytes("inherit"),
     cst_normal$2=caml_string_of_jsbytes("normal"),
     cst_font_variant=caml_string_of_jsbytes("font-variant"),
     cst_bold=caml_string_of_jsbytes("bold"),
     cst_initial$8=caml_string_of_jsbytes("initial"),
     cst_bolder=caml_string_of_jsbytes("bolder"),
     cst_inherit$8=caml_string_of_jsbytes("inherit"),
     cst_lighter=caml_string_of_jsbytes("lighter"),
     cst_normal$1=caml_string_of_jsbytes("normal"),
     cst_font_weight=caml_string_of_jsbytes("font-weight"),
     cst_italic=caml_string_of_jsbytes("italic"),
     cst_initial$7=caml_string_of_jsbytes("initial"),
     cst_inherit$7=caml_string_of_jsbytes("inherit"),
     cst_normal$0=caml_string_of_jsbytes("normal"),
     cst_oblique=caml_string_of_jsbytes("oblique"),
     cst_font_style=caml_string_of_jsbytes("font-style"),
     cst_font_family=caml_string_of_jsbytes("font-family"),
     cst_initial$6=caml_string_of_jsbytes("initial"),
     cst_pre=caml_string_of_jsbytes("pre"),
     cst_inherit$6=caml_string_of_jsbytes("inherit"),
     cst_nowrap=caml_string_of_jsbytes("nowrap"),
     cst_normal=caml_string_of_jsbytes("normal"),
     cst_pre_line=caml_string_of_jsbytes("pre-line"),
     cst_pre_wrap=caml_string_of_jsbytes("pre-wrap"),
     cst_white_space$1=caml_string_of_jsbytes("white-space"),
     cst_opacity=caml_string_of_jsbytes("opacity"),
     cst_z_index=caml_string_of_jsbytes("z-index"),
     cst_auto$0=caml_string_of_jsbytes("auto"),
     cst_initial$5=caml_string_of_jsbytes("initial"),
     cst_hidden$0=caml_string_of_jsbytes("hidden"),
     cst_scroll=caml_string_of_jsbytes("scroll"),
     cst_inherit$5=caml_string_of_jsbytes("inherit"),
     cst_visible$0=caml_string_of_jsbytes("visible"),
     cst_collapse=caml_string_of_jsbytes("collapse"),
     cst_initial$4=caml_string_of_jsbytes("initial"),
     cst_hidden=caml_string_of_jsbytes("hidden"),
     cst_visible=caml_string_of_jsbytes("visible"),
     cst_inherit$4=caml_string_of_jsbytes("inherit"),
     cst_visibility=caml_string_of_jsbytes("visibility"),
     cst_none=caml_string_of_jsbytes("none"),
     cst_flex=caml_string_of_jsbytes("flex"),
     cst_table=caml_string_of_jsbytes("table"),
     cst_list_item=caml_string_of_jsbytes("list-item"),
     cst_initial$3=caml_string_of_jsbytes("initial"),
     cst_inline_grid=caml_string_of_jsbytes("inline-grid"),
     cst_inline_flex=caml_string_of_jsbytes("inline-flex"),
     cst_inherit$3=caml_string_of_jsbytes("inherit"),
     cst_inline_block=caml_string_of_jsbytes("inline-block"),
     cst_inline=caml_string_of_jsbytes("inline"),
     cst_block=caml_string_of_jsbytes("block"),
     cst_inline_table=caml_string_of_jsbytes("inline-table"),
     cst_display=caml_string_of_jsbytes("display"),
     cst_initial$2=caml_string_of_jsbytes("initial"),
     cst_content_box=caml_string_of_jsbytes("content-box"),
     cst_border_box=caml_string_of_jsbytes("border-box"),
     cst_inherit$2=caml_string_of_jsbytes("inherit"),
     cst_box_sizing=caml_string_of_jsbytes("box-sizing"),
     cst_sticky=caml_string_of_jsbytes("sticky"),
     cst_static=caml_string_of_jsbytes("static"),
     cst_absolute=caml_string_of_jsbytes("absolute"),
     cst_relative=caml_string_of_jsbytes("relative"),
     cst_fixed=caml_string_of_jsbytes("fixed"),
     cst_position=caml_string_of_jsbytes("position"),
     cst$42=caml_string_of_jsbytes(": "),
     cst$43=caml_string_of_jsbytes(""),
     cst$41=caml_string_of_jsbytes(""),
     cst_auto=caml_string_of_jsbytes("auto"),
     cst_Auto$0=caml_string_of_jsbytes("Auto"),
     cst_Auto$1=caml_string_of_jsbytes("Auto"),
     cst_initial$1=caml_string_of_jsbytes("initial"),
     cst_inherit$1=caml_string_of_jsbytes("inherit"),
     cst$31=caml_string_of_jsbytes(""),
     cst$32=caml_string_of_jsbytes(""),
     cst$33=caml_string_of_jsbytes(""),
     cst$34=caml_string_of_jsbytes(""),
     cst$35=caml_string_of_jsbytes(""),
     cst$37=caml_string_of_jsbytes(""),
     cst$38=caml_string_of_jsbytes(""),
     cst$39=caml_string_of_jsbytes(""),
     cst$40=caml_string_of_jsbytes(""),
     cst$36=caml_string_of_jsbytes(""),
     cst_Px=caml_string_of_jsbytes("Px"),
     cst_Ch=caml_string_of_jsbytes("Ch"),
     cst_Em=caml_string_of_jsbytes("Em"),
     cst_Em_float=caml_string_of_jsbytes("Em_float"),
     cst_Percent=caml_string_of_jsbytes("Percent"),
     cst_Pt=caml_string_of_jsbytes("Pt"),
     cst_Px_float=caml_string_of_jsbytes("Px_float"),
     cst_Raw=caml_string_of_jsbytes("Raw"),
     cst_Rem=caml_string_of_jsbytes("Rem"),
     cst_Vh=caml_string_of_jsbytes("Vh"),
     cst_Vw=caml_string_of_jsbytes("Vw"),
     cst_Px$0=caml_string_of_jsbytes("Px"),
     cst_Ch$0=caml_string_of_jsbytes("Ch"),
     cst_Em$0=caml_string_of_jsbytes("Em"),
     cst_Em_float$0=caml_string_of_jsbytes("Em_float"),
     cst_Percent$0=caml_string_of_jsbytes("Percent"),
     cst_Pt$0=caml_string_of_jsbytes("Pt"),
     cst_Px_float$0=caml_string_of_jsbytes("Px_float"),
     cst_Raw$0=caml_string_of_jsbytes("Raw"),
     cst_Rem$0=caml_string_of_jsbytes("Rem"),
     cst_Vh$0=caml_string_of_jsbytes("Vh"),
     cst_Vw$0=caml_string_of_jsbytes("Vw"),
     cst_center=caml_string_of_jsbytes("center"),
     cst_left=caml_string_of_jsbytes("left"),
     cst_bottom=caml_string_of_jsbytes("bottom"),
     cst_initial$0=caml_string_of_jsbytes("initial"),
     cst_super=caml_string_of_jsbytes("super"),
     cst_middle=caml_string_of_jsbytes("middle"),
     cst_top=caml_string_of_jsbytes("top"),
     cst_sub=caml_string_of_jsbytes("sub"),
     cst_right=caml_string_of_jsbytes("right"),
     cst_justify=caml_string_of_jsbytes("justify"),
     cst_inherit$0=caml_string_of_jsbytes("inherit"),
     cst_initial=caml_string_of_jsbytes("initial"),
     cst_inherit=caml_string_of_jsbytes("inherit"),
     cst$17=caml_string_of_jsbytes(","),
     cst$18=caml_string_of_jsbytes(","),
     cst$19=caml_string_of_jsbytes(","),
     cst_rgba=caml_string_of_jsbytes("rgba("),
     cst$20=caml_string_of_jsbytes(""),
     cst$21=caml_string_of_jsbytes(","),
     cst$22=caml_string_of_jsbytes(","),
     cst_rgb=caml_string_of_jsbytes("rgb("),
     cst$23=caml_string_of_jsbytes(""),
     cst$24=caml_string_of_jsbytes("%,"),
     cst$25=caml_string_of_jsbytes("%,"),
     cst$26=caml_string_of_jsbytes(","),
     cst_hsla=caml_string_of_jsbytes("hsla("),
     cst$27=caml_string_of_jsbytes(""),
     cst$28=caml_string_of_jsbytes("%,"),
     cst$29=caml_string_of_jsbytes(","),
     cst_hsl=caml_string_of_jsbytes("hsl("),
     cst$30=caml_string_of_jsbytes(""),
     cst_var$0=caml_string_of_jsbytes("var("),
     cst$16=caml_string_of_jsbytes(""),
     err=[2,caml_string_of_jsbytes("css_gen/src/css_gen.ml.Color.T.t")],
     cst_HSLA=caml_string_of_jsbytes("HSLA"),
     cst_Hex=caml_string_of_jsbytes("Hex"),
     cst_Name=caml_string_of_jsbytes("Name"),
     cst_RGBA$0=caml_string_of_jsbytes("RGBA"),
     cst_Var=caml_string_of_jsbytes("Var"),
     cst_HSLA$0=caml_string_of_jsbytes("HSLA"),
     cst_Hex$0=caml_string_of_jsbytes("Hex"),
     cst_Name$0=caml_string_of_jsbytes("Name"),
     cst_RGBA$1=caml_string_of_jsbytes("RGBA"),
     cst_Var$0=caml_string_of_jsbytes("Var"),
     cst_css_gen_src_css_gen_ml_Col$0=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml.Color.T.HSLA.t"),
     cst_a$2=caml_string_of_jsbytes("a"),
     cst_h=caml_string_of_jsbytes("h"),
     cst_l=caml_string_of_jsbytes("l"),
     cst_s=caml_string_of_jsbytes("s"),
     cst_a$3=caml_string_of_jsbytes("a"),
     cst_l$0=caml_string_of_jsbytes("l"),
     cst_s$0=caml_string_of_jsbytes("s"),
     cst_h$0=caml_string_of_jsbytes("h"),
     cst_css_gen_src_css_gen_ml_Col=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml.Color.T.RGBA.t"),
     cst_a=caml_string_of_jsbytes("a"),
     cst_b=caml_string_of_jsbytes("b"),
     cst_g=caml_string_of_jsbytes("g"),
     cst_r=caml_string_of_jsbytes("r"),
     cst_a$0=caml_string_of_jsbytes("a"),
     cst_b$0=caml_string_of_jsbytes("b"),
     cst_g$0=caml_string_of_jsbytes("g"),
     cst_r$0=caml_string_of_jsbytes("r"),
     cst_Inherit=caml_string_of_jsbytes("Inherit"),
     cst_Initial=caml_string_of_jsbytes("Initial"),
     cst_Inherit$0=caml_string_of_jsbytes("Inherit"),
     cst_Initial$0=caml_string_of_jsbytes("Initial"),
     cst_Css_gen=caml_string_of_jsbytes("Css_gen"),
     cst_css_gen$5=caml_string_of_jsbytes("css_gen"),
     cst_css_gen_src_css_gen_ml=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml"),
     cst$15=caml_string_of_jsbytes(""),
     cst_css_gen$6=caml_string_of_jsbytes("css_gen"),
     error_source_007=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml.Stable.V1.t"),
     cst_t=caml_string_of_jsbytes("t"),
     cst_css_gen_src_css_gen_ml_7_4=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml:7:4"),
     cst_t$0=caml_string_of_jsbytes("t"),
     error_source_027=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml.css_global_values"),
     error_source_029=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml.css_global_values"),
     cst_Initial$1=caml_string_of_jsbytes("Initial"),
     cst_Inherit$1=caml_string_of_jsbytes("Inherit"),
     cst_css_gen_src_css_gen_ml_15_=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml:15:2"),
     cst_css_global_values=caml_string_of_jsbytes("css_global_values"),
     cst_css_gen_src_css_gen_ml_14_=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml:14:0"),
     cst_css_global_values$0=caml_string_of_jsbytes("css_global_values"),
     error_source_052=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml.Color.T.RGBA.t"),
     cst_a$1=caml_string_of_jsbytes("a"),
     cst_b$1=caml_string_of_jsbytes("b"),
     cst_g$1=caml_string_of_jsbytes("g"),
     cst_r$1=caml_string_of_jsbytes("r"),
     cst_t$1=caml_string_of_jsbytes("t"),
     cst_css_gen_src_css_gen_ml_29_=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml:29:6"),
     cst_t$2=caml_string_of_jsbytes("t"),
     error_source_089=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml.Color.T.HSLA.t"),
     cst_a$4=caml_string_of_jsbytes("a"),
     cst_l$1=caml_string_of_jsbytes("l"),
     cst_s$1=caml_string_of_jsbytes("s"),
     cst_h$1=caml_string_of_jsbytes("h"),
     cst_t$3=caml_string_of_jsbytes("t"),
     cst_css_gen_src_css_gen_ml_41_=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml:41:6"),
     cst_t$4=caml_string_of_jsbytes("t"),
     error_source_114=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml.Color.T.t"),
     error_source_128=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml.Color.T.t"),
     cst_css_gen_src_css_gen_ml_58_=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml:58:8"),
     cst_Var$1=caml_string_of_jsbytes("Var"),
     cst_Hex$1=caml_string_of_jsbytes("Hex"),
     cst_Name$1=caml_string_of_jsbytes("Name"),
     cst_HSLA$1=caml_string_of_jsbytes("HSLA"),
     cst_RGBA$2=caml_string_of_jsbytes("RGBA"),
     cst_css_gen_src_css_gen_ml_53_=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml:53:6"),
     cst_t$5=caml_string_of_jsbytes("t"),
     cst_css_gen_src_css_gen_ml_52_=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml:52:4"),
     cst_t$6=caml_string_of_jsbytes("t"),
     cst_css_gen_src_css_gen_ml_101=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml:101:6"),
     cst_Sub=caml_string_of_jsbytes("Sub"),
     cst_Super=caml_string_of_jsbytes("Super"),
     cst_Justify=caml_string_of_jsbytes("Justify"),
     cst_Middle=caml_string_of_jsbytes("Middle"),
     cst_Bottom=caml_string_of_jsbytes("Bottom"),
     cst_Top=caml_string_of_jsbytes("Top"),
     cst_Center=caml_string_of_jsbytes("Center"),
     cst_Right=caml_string_of_jsbytes("Right"),
     cst_Left=caml_string_of_jsbytes("Left"),
     cst_css_gen_src_css_gen_ml_92_=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml:92:4"),
     cst_t$7=caml_string_of_jsbytes("t"),
     cst_css_gen_src_css_gen_ml_91_=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml:91:2"),
     cst_t$8=caml_string_of_jsbytes("t"),
     error_source_161=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml.Length.t"),
     error_source_193=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml.Length.t"),
     cst_css_gen_src_css_gen_ml_133=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml:133:6"),
     cst_Vw$1=caml_string_of_jsbytes("Vw"),
     cst_Vh$1=caml_string_of_jsbytes("Vh"),
     cst_Px_float$1=caml_string_of_jsbytes("Px_float"),
     cst_Px$1=caml_string_of_jsbytes("Px"),
     cst_Pt$1=caml_string_of_jsbytes("Pt"),
     cst_Percent$1=caml_string_of_jsbytes("Percent"),
     cst_Em_float$1=caml_string_of_jsbytes("Em_float"),
     cst_Em$1=caml_string_of_jsbytes("Em"),
     cst_Rem$1=caml_string_of_jsbytes("Rem"),
     cst_Ch$1=caml_string_of_jsbytes("Ch"),
     cst_Raw$1=caml_string_of_jsbytes("Raw"),
     cst_css_gen_src_css_gen_ml_122=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml:122:4"),
     cst_t$9=caml_string_of_jsbytes("t"),
     cst_css_gen_src_css_gen_ml_121=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml:121:2"),
     cst_t$10=caml_string_of_jsbytes("t"),
     cst_css_gen_src_css_gen_ml_159=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml:159:6"),
     cst_Auto=caml_string_of_jsbytes("Auto"),
     cst_css_gen_src_css_gen_ml_158=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml:158:4"),
     cst_t$11=caml_string_of_jsbytes("t"),
     cst_css_gen_src_css_gen_ml_157=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml:157:2"),
     cst_t$12=caml_string_of_jsbytes("t"),
     error_source_241=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml.Auto_or_length.t"),
     error_source_243=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml.Auto_or_length.t"),
     cst_left$0=caml_string_of_jsbytes("left"),
     cst_top$0=caml_string_of_jsbytes("top"),
     cst_bottom$0=caml_string_of_jsbytes("bottom"),
     cst_right$0=caml_string_of_jsbytes("right"),
     cst_overflow=caml_string_of_jsbytes("overflow"),
     cst_overflow_x=caml_string_of_jsbytes("overflow-x"),
     cst_overflow_y=caml_string_of_jsbytes("overflow-y"),
     cst_font_size=caml_string_of_jsbytes("font-size"),
     cst_text_align=caml_string_of_jsbytes("text-align"),
     cst_horizontal_align=caml_string_of_jsbytes("horizontal-align"),
     cst_vertical_align=caml_string_of_jsbytes("vertical-align"),
     cst_width=caml_string_of_jsbytes("width"),
     cst_min_width=caml_string_of_jsbytes("min-width"),
     cst_max_width=caml_string_of_jsbytes("max-width"),
     cst_height=caml_string_of_jsbytes("height"),
     cst_min_height=caml_string_of_jsbytes("min-height"),
     cst_max_height=caml_string_of_jsbytes("max-height"),
     cst_padding_top=caml_string_of_jsbytes("padding-top"),
     cst_padding_bottom=caml_string_of_jsbytes("padding-bottom"),
     cst_padding_left=caml_string_of_jsbytes("padding-left"),
     cst_padding_right=caml_string_of_jsbytes("padding-right"),
     cst_margin_top=caml_string_of_jsbytes("margin-top"),
     cst_margin_bottom=caml_string_of_jsbytes("margin-bottom"),
     cst_margin_left=caml_string_of_jsbytes("margin-left"),
     cst_margin_right=caml_string_of_jsbytes("margin-right"),
     cst_border_spacing=caml_string_of_jsbytes("border-spacing"),
     cst_css_gen_src_css_gen_ml$13=
      caml_string_of_jsbytes("css_gen/src/css_gen.ml"),
     cst_tests$1=caml_string_of_jsbytes("tests"),
     cst_css_gen$7=caml_string_of_jsbytes("css_gen"),
     cst_Css_gen$0=caml_string_of_jsbytes("Css_gen"),
     Expect_test_common_File=global_data.Expect_test_common__File,
     Core=global_data.Core,
     Core_Sexp=global_data.Core__Sexp,
     Expect_test_config=global_data.Expect_test_config,
     Expect_test_collector=global_data.Expect_test_collector,
     Inline_test_config=global_data.Inline_test_config,
     Core_List=global_data.Core__List,
     Core_String=global_data.Core__String,
     Core_Int=global_data.Core__Int,
     Assert_failure=global_data.Assert_failure,
     Core_Char=global_data.Core__Char,
     Sexplib0_Sexp_conv_error=global_data.Sexplib0__Sexp_conv_error,
     Ppx_module_timer_runtime=global_data.Ppx_module_timer_runtime,
     Ppx_bench_lib_Benchmark_accumu=
      global_data.Ppx_bench_lib__Benchmark_accumulator,
     Ppx_inline_test_lib_Runtime=global_data.Ppx_inline_test_lib__Runtime,
     Sexplib0_Sexp_conv=global_data.Sexplib0__Sexp_conv,
     Core_Unit=global_data.Core__Unit,
     Core_Or_error=global_data.Core__Or_error,
     Ppx_sexp_conv_lib=global_data.Ppx_sexp_conv_lib,
     Core_Percent=global_data.Core__Percent,
     Core_Time_ns=global_data.Core__Time_ns,
     Stdlib_String=global_data.Stdlib__String,
     Core_Option=global_data.Core__Option,
     Ppx_compare_lib=global_data.Ppx_compare_lib,
     Bin_prot_Read=global_data.Bin_prot__Read,
     Bin_prot_Common=global_data.Bin_prot__Common,
     Bin_prot_Write=global_data.Bin_prot__Write;
    global_data.Base__Field;
    var
     Core_Stable=global_data.Core__Stable,
     Bin_prot_Shape=global_data.Bin_prot__Shape,
     Core_Sexpable=global_data.Core__Sexpable,
     Css_gen=[0];
    caml_register_global(938,Css_gen,"Css_gen__");
    caml_call1(Ppx_module_timer_runtime[4],cst_Css_gen_Css_tokenizer);
    caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1],cst_css_gen);
    caml_call1(Expect_test_collector[5][1],cst_css_gen_src_css_tokenizer_);
    caml_call2(Ppx_inline_test_lib_Runtime[2],cst_css_gen$0,cst);
    var
     _K_=[1,caml_string_of_jsbytes("((Eof 0 0))")],
     _L_=[0,caml_string_of_jsbytes("")],
     _M_=[0,caml_string_of_jsbytes("eof")],
     _N_=
      [1,
       caml_string_of_jsbytes
        (" ((Rparen 0 1)(Lparen 1 1)(Lcurly 2 1)(Rcurly 3 1)(Lbracket 4 1)(Rbracket 5 1)(Semi_colon 6 1)(Colon 7 1)(Eof 8 0)) ")],
     _O_=[0,caml_string_of_jsbytes("")],
     _P_=[0,caml_string_of_jsbytes("simple_tokens")],
     _Q_=
      [1,
       caml_string_of_jsbytes
        ("\n    ((Ident 0 8)(Colon 8 1)(White_space 9 1)(Ident 10 3)(Eof 13 0))\n    ((Function 0 9)(Eof 9 0))\n    ((Atkeyword 0 8)(Eof 8 0))\n    ((Atkeyword 0 9)(Eof 9 0))\n    ((Atkeyword 0 10)(Eof 10 0))\n    ((Ident 0 5)(Eof 5 0))\n    ((Ident 0 4)(Eof 4 0)) ")],
     _R_=[0,caml_string_of_jsbytes("")],
     _S_=[0,caml_string_of_jsbytes("ident")],
     _T_=[1,caml_string_of_jsbytes("((White_space 0 2)(Eof 2 0))")],
     _U_=[0,caml_string_of_jsbytes("")],
     _V_=[0,caml_string_of_jsbytes("whitespace")],
     _W_=
      [1,
       caml_string_of_jsbytes
        ("\n    ((Ident 0 6)(Colon 6 1)(White_space 7 1)(Dimension 8 5)(Eof 13 0))\n    ((Ident 0 6)(Colon 6 1)(White_space 7 1)(Dimension 8 5)(Eof 13 0))\n    ((Ident 0 6)(Colon 6 1)(White_space 7 1)(Dimension 8 5)(Eof 13 0))\n    ((Ident 0 11)(Colon 11 1)(White_space 12 1)(Dimension 13 3)(Eof 16 0))\n    ((Ident 0 11)(Colon 11 1)(White_space 12 1)(Percentage 13 4)(Eof 17 0))\n    ((Ident 0 4)(Colon 4 1)(White_space 5 1)(Number 6 1)(White_space 7 1)(Number 8 1)(White_space 9 1)(Ident 10 3)(Eof 13 0))\n    ((Ident 0 6)(Colon 6 1)(White_space 7 1)(Dimension 8 6)(Eof 14 0))\n    ((Ident 0 6)(Colon 6 1)(White_space 7 1)(Number 8 7)(Eof 15 0))\n    ((Ident 0 6)(Colon 6 1)(White_space 7 1)(Number 8 7)(Eof 15 0))\n    ((Ident 0 6)(Colon 6 1)(White_space 7 1)(Number 8 7)(Eof 15 0))\n    ((Ident 0 6)(Colon 6 1)(White_space 7 1)(Number 8 7)(Eof 15 0))\n    ((Ident 0 6)(Colon 6 1)(White_space 7 1)(Number 8 6)(Eof 14 0))\n    ((Ident 0 6)(Colon 6 1)(White_space 7 1)(Number 8 6)(Eof 14 0)) ")],
     _X_=[0,caml_string_of_jsbytes("")],
     _Y_=[0,caml_string_of_jsbytes("numbers")],
     _Z_=
      [1,
       caml_string_of_jsbytes
        ("\n    ((Error 0 8))\n    ((Error 0 1))\n    ((Error 0 3)) ")],
     ___=[0,caml_string_of_jsbytes("")],
     _$_=[0,caml_string_of_jsbytes("badly_quoted")],
     _aa_=
      [1,
       caml_string_of_jsbytes
        (" ((String 0 6)(String 6 5)(String 11 3)(White_space 14 1)(String 15 4)(White_space 19 1)(String 20 4)(Eof 24 0)) ")],
     _ab_=[0,caml_string_of_jsbytes("")],
     _ac_=[0,caml_string_of_jsbytes("quoted")],
     _ad_=
      [1,
       caml_string_of_jsbytes
        ("\n    ((Ident 0 5)(Colon 5 1)(White_space 6 1)(Hash 7 4)(Eof 11 0))\n    ((Ident 0 5)(Colon 5 1)(White_space 6 1)(Function 7 4)(Number 11 3)(Comma 14 1)(Number 15 1)(Comma 16 1)(Number 17 1)(Rparen 18 1)(Eof 19 0))\n    ((Ident 0 5)(Colon 5 1)(White_space 6 1)(Function 7 4)(Number 11 3)(Comma 14 1)(Number 15 1)(Comma 16 1)(Number 17 1)(Rparen 18 1)(Eof 19 0)) ")],
     _ae_=[0,caml_string_of_jsbytes("")],
     _af_=[0,caml_string_of_jsbytes("colors")],
     _ag_=
      [1,
       caml_string_of_jsbytes
        (" ((Atkeyword 0 7)(White_space 7 1)(String 8 9)(Semi_colon 17 1)(Eof 18 0)) ")],
     _ah_=[0,caml_string_of_jsbytes("")],
     _ai_=[0,caml_string_of_jsbytes("import")],
     _aj_=[1,caml_string_of_jsbytes(" ((Ident 0 5)(Delim 5 1)(Eof 6 0)) ")],
     _ak_=[0,caml_string_of_jsbytes("")],
     _al_=[0,caml_string_of_jsbytes("red example")],
     _am_=
      [1,
       caml_string_of_jsbytes
        ("\n    ((Function 0 4)(White_space 4 1)(String 5 24)(Rparen 29 1)(Eof 30 0))\n    ((Function 0 4)(String 4 24)(Rparen 28 1)(Eof 29 0))\n    ((Function 0 4)(String 4 24)(White_space 28 1)(Rparen 29 1)(Eof 30 0))\n    ((Uri 0 30)(Eof 30 0))\n    ((Error 0 25)) ")],
     _an_=[0,caml_string_of_jsbytes("")],
     _ao_=[0,caml_string_of_jsbytes("url")],
     _ap_=
      [1,
       caml_string_of_jsbytes
        ("\n    ((String 0 15)(Eof 15 0))\n    ((String 0 51)(Eof 51 0))\n    ((String 0 49)(Eof 49 0)) ")],
     _aq_=[0,caml_string_of_jsbytes("")],
     _ar_=[0,caml_string_of_jsbytes("escape")],
     _H_=[0,caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),293,2],
     _G_=[0,caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),270,2],
     _F_=[0,caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),271,2],
     _E_=[0,caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),262,2],
     _D_=[0,caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),263,2],
     _C_=[0,caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),251,2],
     _B_=[0,caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),252,2],
     _A_=[0,caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),239,2],
     _z_=[0,caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),202,2],
     _y_=[0,caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),145,2],
     _x_=[0,caml_string_of_jsbytes("css_gen/src/css_tokenizer.ml"),55,2],
     _a_=[0,caml_string_of_jsbytes("Ident")],
     _b_=[0,caml_string_of_jsbytes("Function")],
     _c_=[0,caml_string_of_jsbytes("Atkeyword")],
     _d_=[0,caml_string_of_jsbytes("Hash")],
     _e_=[0,caml_string_of_jsbytes("String")],
     _f_=[0,caml_string_of_jsbytes("Uri")],
     _g_=[0,caml_string_of_jsbytes("Delim")],
     _h_=[0,caml_string_of_jsbytes("Number")],
     _i_=[0,caml_string_of_jsbytes("Percentage")],
     _j_=[0,caml_string_of_jsbytes("Dimension")],
     _k_=[0,caml_string_of_jsbytes("White_space")],
     _l_=[0,caml_string_of_jsbytes("Colon")],
     _m_=[0,caml_string_of_jsbytes("Semi_colon")],
     _n_=[0,caml_string_of_jsbytes("Comma")],
     _o_=[0,caml_string_of_jsbytes("Lbracket")],
     _p_=[0,caml_string_of_jsbytes("Rbracket")],
     _q_=[0,caml_string_of_jsbytes("Lparen")],
     _r_=[0,caml_string_of_jsbytes("Rparen")],
     _s_=[0,caml_string_of_jsbytes("Lcurly")],
     _t_=[0,caml_string_of_jsbytes("Rcurly")],
     _u_=[0,caml_string_of_jsbytes("Comment")],
     _v_=[0,caml_string_of_jsbytes("Eof")],
     _w_=[0,caml_string_of_jsbytes("Error")],
     _aK_=
      [0,
       caml_string_of_jsbytes
        ("\xe2\x86\x90 \xe2\x86\x91 \xe2\x86\x92 \xe2\x86\x93 \xe2\x86\x94 \xe2\x86\x95 \xe2\x87\xaa \xe2\x86\xb9 \xe2\xac\x88 \xe2\x86\x98 \xe2\x9f\xbe \xe2\x86\xb6")],
     _ay_=[0,caml_string_of_jsbytes("validate_value value")],
     _az_=
      [1,
       caml_string_of_jsbytes
        ("\n    Number\n    White_space\n    Dimension\n    White_space\n    Dimension\n    White_space\n    Number\n    White_space\n    Function\n    Function\n    Ident\n    Rparen\n    Comma\n    White_space\n    Number\n    Rparen\n    Comma\n    White_space\n    Number\n    White_space\n    Dimension\n    White_space\n    Dimension\n    White_space\n    Number\n    White_space\n    Function\n    Function\n    Ident\n    Rparen\n    Comma\n    White_space\n    Number\n    Rparen ")],
     _aA_=[0,caml_string_of_jsbytes("")],
     _aB_=
      [1,caml_string_of_jsbytes('\n    ("validate_value value" (Ok ())) ')],
     _aC_=[0,caml_string_of_jsbytes("")],
     _aD_=[0,caml_string_of_jsbytes("")],
     _aE_=
      [1,
       caml_string_of_jsbytes
        ("\n      x --> (Ok ())\n      3 --> (Ok ())\n      3in --> (Ok ())\n      3% --> (Ok ())\n      #fff --> (Ok ())\n      1 0 auto --> (Ok ())\n      'Hello World' --> (Ok ())\n      rgb(0,0,0) --> (Ok ()) ")],
     _aF_=[0,caml_string_of_jsbytes("")],
     _aG_=[0,caml_string_of_jsbytes("values")],
     _aH_=
      [1,
       caml_string_of_jsbytes
        ('\n      flex: 1 0 auto --> (Ok (flex "1 0 auto"))\n      content: \'Hello World\' --> (Ok (content "\'Hello World\'"))\n      content: foo; --> (Error ("Unexpected token" (expected Eof) (got Semi_colon)))\n      content: bar  --> (Ok (content bar)) ')],
     _aI_=[0,caml_string_of_jsbytes("")],
     _aJ_=[0,caml_string_of_jsbytes("declaration")],
     _aL_=
      [1,
       caml_string_of_jsbytes
        ("\n    content: '\xe2\x86\x90 \xe2\x86\x91 \xe2\x86\x92 \xe2\x86\x93 \xe2\x86\x94 \xe2\x86\x95 \xe2\x87\xaa \xe2\x86\xb9 \xe2\xac\x88 \xe2\x86\x98 \xe2\x9f\xbe \xe2\x86\xb6' --> (Ok\n     (content\n      \"'\\226\\134\\144 \\226\\134\\145 \\226\\134\\146 \\226\\134\\147 \\226\\134\\148 \\226\\134\\149 \\226\\135\\170 \\226\\134\\185 \\226\\172\\136 \\226\\134\\152 \\226\\159\\190 \\226\\134\\182'\"))\n    \"\\226\\134\\144 \\226\\134\\145 \\226\\134\\146 \\226\\134\\147 \\226\\134\\148 \\226\\134\\149 \\226\\135\\170 \\226\\134\\185 \\226\\172\\136 \\226\\134\\152 \\226\\159\\190 \\226\\134\\182\" ")],
     _aM_=[0,caml_string_of_jsbytes("")],
     _aN_=[0,caml_string_of_jsbytes("unicode")],
     _aO_=
      [1,
       caml_string_of_jsbytes
        ('\n    flex: 1 0 auto --> (Ok ((flex "1 0 auto")))\n    flex: 1 0 auto; --> (Ok ((flex "1 0 auto")))\n    background: #5d9ab2 url("img_tree.png") no-repeat top left;margin-left: 200px --> (Ok\n     ((background "#5d9ab2 url(\\"img_tree.png\\") no-repeat top left")\n      (margin-left 200px)))\n    ;;;;; --> (Ok ())\n    flex: 1 0 auto ;; other : sa  --> (Ok ((flex "1 0 auto") (other sa))) ')],
     _aP_=[0,caml_string_of_jsbytes("")],
     _aQ_=[0,caml_string_of_jsbytes("declaration list")],
     _av_=[12,10,0],
     _aw_=[0,0],
     _at_=[0,caml_string_of_jsbytes("got")],
     _au_=[0,caml_string_of_jsbytes("expected")],
     _c4_=[0,3404198,90],
     _cZ_=[0,-81804554],
     _c0_=[0,1],
     _c1_=
      [1,
       caml_string_of_jsbytes
        ('\n    flex: 1.000000 1.000000 auto;overflow: scroll\n    flex: 1.000000 1.000000 auto;overflow: scroll\n    display: inline-flex;flex-direction: column;flex-wrap: nowrap;border: dashed\n    display: inline-flex;flex-direction: column;flex-wrap: nowrap;border: dashed\n    color: rgb(100,100,100)\n    color: rgb(100,100,100)\n    color: hsl(100,75%,60%)\n    color: hsl(100,75%,60%)\n    content: ";"\n    content: ";" ')],
     _c2_=[0,caml_string_of_jsbytes("")],
     _c3_=
      [0,
       caml_string_of_jsbytes
        ("to_string_css -> of_string_css_exn -> to_string_css")],
     _c5_=
      [1,
       caml_string_of_jsbytes
        (" background-image: linear-gradient(90deg, black 0.000000%, #ff0000 20.000000%, red 40.000000%, rgba(100,50,30,0.75) 100.000000%) ")],
     _c6_=[0,caml_string_of_jsbytes("")],
     _c7_=
      [1,
       caml_string_of_jsbytes
        (" background-image: radial-gradient(black 0.000000%, red 100.000000%) ")],
     _c8_=[0,caml_string_of_jsbytes("")],
     _c9_=[0,caml_string_of_jsbytes("gradients")],
     _cX_=[0,caml_string_of_jsbytes("s"),0],
     _cW_=[0,caml_string_of_jsbytes(" ")],
     _cV_=[0,-57574468],
     _cU_=[0,847852583],
     _cT_=[0,437082891],
     _cS_=[0,4202101],
     _cQ_=[0,caml_string_of_jsbytes(")"),0],
     _cR_=[0,caml_string_of_jsbytes(")"),0],
     _cP_=[0,caml_string_of_jsbytes(")"),0],
     _cN_=[0,caml_string_of_jsbytes("%"),0],
     _cO_=[0,caml_string_of_jsbytes(", ")],
     _cM_=[0,caml_string_of_jsbytes(",")],
     _cK_=[0,caml_string_of_jsbytes(";")],
     _cJ_=[0,caml_string_of_jsbytes("Auto")],
     _cr_=[0,caml_string_of_jsbytes("em"),0],
     _cs_=[0,caml_string_of_jsbytes("rem"),0],
     _ct_=[0,caml_string_of_jsbytes("vw"),0],
     _cu_=[0,caml_string_of_jsbytes("vh"),0],
     _cv_=[0,caml_string_of_jsbytes("px"),0],
     _cx_=[0,caml_string_of_jsbytes("pt"),0],
     _cy_=[0,caml_string_of_jsbytes("em"),0],
     _cz_=[0,caml_string_of_jsbytes("ch"),0],
     _cA_=[0,caml_string_of_jsbytes("%"),0],
     _cw_=[0,caml_string_of_jsbytes("px"),0],
     _b0_=[0,caml_string_of_jsbytes("Em_float")],
     _b1_=[0,caml_string_of_jsbytes("Rem")],
     _b2_=[0,caml_string_of_jsbytes("Raw")],
     _b3_=[0,caml_string_of_jsbytes("Vw")],
     _b4_=[0,caml_string_of_jsbytes("Vh")],
     _b5_=[0,caml_string_of_jsbytes("Px")],
     _b7_=[0,caml_string_of_jsbytes("Pt")],
     _b8_=[0,caml_string_of_jsbytes("Em")],
     _b9_=[0,caml_string_of_jsbytes("Ch")],
     _b__=[0,caml_string_of_jsbytes("Percent")],
     _b6_=[0,caml_string_of_jsbytes("Px_float")],
     _bG_=[0,caml_string_of_jsbytes(")"),0],
     _bH_=[0,caml_string_of_jsbytes(")"),0],
     _bI_=[0,caml_string_of_jsbytes(")"),0],
     _bJ_=[0,caml_string_of_jsbytes("%)"),0],
     _bF_=[0,caml_string_of_jsbytes(")"),0],
     _bp_=[0,caml_string_of_jsbytes("RGBA")],
     _bq_=[0,caml_string_of_jsbytes("Name")],
     _br_=[0,caml_string_of_jsbytes("HSLA")],
     _bs_=[0,caml_string_of_jsbytes("Hex")],
     _bo_=[0,caml_string_of_jsbytes("Var")],
     _bf_=[0,caml_string_of_jsbytes("a")],
     _bg_=[0,caml_string_of_jsbytes("l")],
     _bh_=[0,caml_string_of_jsbytes("s")],
     _bi_=[0,caml_string_of_jsbytes("h")],
     _be_=[0,caml_string_of_jsbytes("css_gen/src/css_gen.ml"),41,6],
     _a7_=[0,caml_string_of_jsbytes("a")],
     _a8_=[0,caml_string_of_jsbytes("b")],
     _a9_=[0,caml_string_of_jsbytes("g")],
     _a__=[0,caml_string_of_jsbytes("r")],
     _a6_=[0,caml_string_of_jsbytes("css_gen/src/css_gen.ml"),29,6],
     _a5_=[0,[8,[0,0,0],0,1,0],caml_string_of_jsbytes("%.*f")],
     _aW_=[0,caml_string_of_jsbytes("Initial")],
     _aX_=[0,caml_string_of_jsbytes("Inherit")];
    function t_of_sexp(sexp_004)
     {if(0 === sexp_004[0])
       {var
         _i0_=sexp_004[1],
         _i1_=caml_string_compare(_i0_,cst_atkeyword),
         switch$0=0;
        if(0 <= _i1_)
         if(0 < _i1_)
          {var _i2_=caml_string_compare(_i0_,cst_lcurly);
           if(0 <= _i2_)
            if(0 < _i2_)
             {var _i3_=caml_string_compare(_i0_,cst_rparen);
              if(0 <= _i3_)
               if(0 < _i3_)
                if(caml_string_notequal(_i0_,cst_semi_colon))
                 if(caml_string_notequal(_i0_,cst_string))
                  if(caml_string_notequal(_i0_,cst_uri))
                   {if(! caml_string_notequal(_i0_,cst_white_space))
                     switch$0 = 11}
                  else
                   switch$0 = 6;
                 else
                  switch$0 = 5;
                else
                 switch$0 = 13;
               else
                switch$0 = 18;
              else
               if(caml_string_notequal(_i0_,cst_lparen))
                if(caml_string_notequal(_i0_,cst_number))
                 if(caml_string_notequal(_i0_,cst_percentage))
                  if(caml_string_notequal(_i0_,cst_rbracket))
                   {if(! caml_string_notequal(_i0_,cst_rcurly))switch$0 = 20}
                  else
                   switch$0 = 16;
                 else
                  switch$0 = 9;
                else
                 switch$0 = 8;
               else
                switch$0 = 17}
            else
             switch$0 = 19;
           else
            {var _i4_=caml_string_compare(_i0_,cst_eof);
             if(0 <= _i4_)
              if(0 < _i4_)
               if(caml_string_notequal(_i0_,cst_error))
                if(caml_string_notequal(_i0_,cst_function))
                 if(caml_string_notequal(_i0_,cst_hash))
                  if(caml_string_notequal(_i0_,cst_ident))
                   {if(! caml_string_notequal(_i0_,cst_lbracket))switch$0 = 15}
                  else
                   switch$0 = 1;
                 else
                  switch$0 = 4;
                else
                 switch$0 = 2;
               else
                switch$0 = 23;
              else
               switch$0 = 22;
             else
              if(caml_string_notequal(_i0_,cst_colon))
               if(caml_string_notequal(_i0_,cst_comma))
                if(caml_string_notequal(_i0_,cst_comment))
                 if(caml_string_notequal(_i0_,cst_delim))
                  {if(! caml_string_notequal(_i0_,cst_dimension))switch$0 = 10}
                 else
                  switch$0 = 7;
                else
                 switch$0 = 21;
               else
                switch$0 = 14;
              else
               switch$0 = 12}}
         else
          switch$0 = 3;
        else
         {var _i5_=caml_string_compare(_i0_,cst_Lbracket);
          if(0 <= _i5_)
           if(0 < _i5_)
            {var _i6_=caml_string_compare(_i0_,cst_Rcurly);
             if(0 <= _i6_)
              if(0 < _i6_)
               if(caml_string_notequal(_i0_,cst_Rparen))
                if(caml_string_notequal(_i0_,cst_Semi_colon))
                 if(caml_string_notequal(_i0_,cst_String))
                  if(caml_string_notequal(_i0_,cst_Uri))
                   {if(! caml_string_notequal(_i0_,cst_White_space))
                     switch$0 = 11}
                  else
                   switch$0 = 6;
                 else
                  switch$0 = 5;
                else
                 switch$0 = 13;
               else
                switch$0 = 18;
              else
               switch$0 = 20;
             else
              if(caml_string_notequal(_i0_,cst_Lcurly))
               if(caml_string_notequal(_i0_,cst_Lparen))
                if(caml_string_notequal(_i0_,cst_Number))
                 if(caml_string_notequal(_i0_,cst_Percentage))
                  {if(! caml_string_notequal(_i0_,cst_Rbracket))switch$0 = 16}
                 else
                  switch$0 = 9;
                else
                 switch$0 = 8;
               else
                switch$0 = 17;
              else
               switch$0 = 19}
           else
            switch$0 = 15;
          else
           {var _i7_=caml_string_compare(_i0_,cst_Dimension);
            if(0 <= _i7_)
             if(0 < _i7_)
              if(caml_string_notequal(_i0_,cst_Eof))
               if(caml_string_notequal(_i0_,cst_Error))
                if(caml_string_notequal(_i0_,cst_Function))
                 if(caml_string_notequal(_i0_,cst_Hash))
                  {if(! caml_string_notequal(_i0_,cst_Ident))switch$0 = 1}
                 else
                  switch$0 = 4;
                else
                 switch$0 = 2;
               else
                switch$0 = 23;
              else
               switch$0 = 22;
             else
              switch$0 = 10;
            else
             if(caml_string_notequal(_i0_,cst_Atkeyword))
              if(caml_string_notequal(_i0_,cst_Colon))
               if(caml_string_notequal(_i0_,cst_Comma))
                if(caml_string_notequal(_i0_,cst_Comment))
                 {if(! caml_string_notequal(_i0_,cst_Delim))switch$0 = 7}
                else
                 switch$0 = 21;
               else
                switch$0 = 14;
              else
               switch$0 = 12;
             else
              switch$0 = 3}}
        switch(switch$0)
         {case 1:return 0;
          case 2:return 1;
          case 3:return 2;
          case 4:return 3;
          case 5:return 4;
          case 6:return 5;
          case 7:return 6;
          case 8:return 7;
          case 9:return 8;
          case 10:return 9;
          case 11:return 10;
          case 12:return 11;
          case 13:return 12;
          case 14:return 13;
          case 15:return 14;
          case 16:return 15;
          case 17:return 16;
          case 18:return 17;
          case 19:return 18;
          case 20:return 19;
          case 21:return 20;
          case 22:return 21;
          case 23:return 22
          }}
      else
       {var _i8_=sexp_004[1];
        if(! _i8_)
         return caml_call2
                 (Sexplib0_Sexp_conv_error[7],error_source_003,sexp_004);
        var _i9_=_i8_[1];
        if(0 !== _i9_[0])
         return caml_call2
                 (Sexplib0_Sexp_conv_error[6],error_source_003,sexp_004);
        var
         _i__=_i9_[1],
         _i$_=caml_string_compare(_i__,cst_atkeyword$0),
         switch$1=0;
        if(0 <= _i$_)
         if(0 < _i$_)
          {var _ja_=caml_string_compare(_i__,cst_lcurly$0);
           if(0 <= _ja_)
            if(0 < _ja_)
             {var _jb_=caml_string_compare(_i__,cst_rparen$0);
              if(0 <= _jb_)
               if(0 < _jb_)
                if(caml_string_notequal(_i__,cst_semi_colon$0))
                 if(caml_string_notequal(_i__,cst_string$0))
                  if(caml_string_notequal(_i__,cst_uri$0))
                   {if(! caml_string_notequal(_i__,cst_white_space$0))
                     switch$1 = 11}
                  else
                   switch$1 = 6;
                 else
                  switch$1 = 5;
                else
                 switch$1 = 13;
               else
                switch$1 = 18;
              else
               if(caml_string_notequal(_i__,cst_lparen$0))
                if(caml_string_notequal(_i__,cst_number$0))
                 if(caml_string_notequal(_i__,cst_percentage$0))
                  if(caml_string_notequal(_i__,cst_rbracket$0))
                   {if(! caml_string_notequal(_i__,cst_rcurly$0))switch$1 = 20}
                  else
                   switch$1 = 16;
                 else
                  switch$1 = 9;
                else
                 switch$1 = 8;
               else
                switch$1 = 17}
            else
             switch$1 = 19;
           else
            {var _jc_=caml_string_compare(_i__,cst_eof$0);
             if(0 <= _jc_)
              if(0 < _jc_)
               if(caml_string_notequal(_i__,cst_error$0))
                if(caml_string_notequal(_i__,cst_function$0))
                 if(caml_string_notequal(_i__,cst_hash$0))
                  if(caml_string_notequal(_i__,cst_ident$0))
                   {if(! caml_string_notequal(_i__,cst_lbracket$0))
                     switch$1 = 15}
                  else
                   switch$1 = 1;
                 else
                  switch$1 = 4;
                else
                 switch$1 = 2;
               else
                switch$1 = 23;
              else
               switch$1 = 22;
             else
              if(caml_string_notequal(_i__,cst_colon$0))
               if(caml_string_notequal(_i__,cst_comma$0))
                if(caml_string_notequal(_i__,cst_comment$0))
                 if(caml_string_notequal(_i__,cst_delim$0))
                  {if(! caml_string_notequal(_i__,cst_dimension$0))
                    switch$1 = 10}
                 else
                  switch$1 = 7;
                else
                 switch$1 = 21;
               else
                switch$1 = 14;
              else
               switch$1 = 12}}
         else
          switch$1 = 3;
        else
         {var _jd_=caml_string_compare(_i__,cst_Lbracket$0);
          if(0 <= _jd_)
           if(0 < _jd_)
            {var _je_=caml_string_compare(_i__,cst_Rcurly$0);
             if(0 <= _je_)
              if(0 < _je_)
               if(caml_string_notequal(_i__,cst_Rparen$0))
                if(caml_string_notequal(_i__,cst_Semi_colon$0))
                 if(caml_string_notequal(_i__,cst_String$0))
                  if(caml_string_notequal(_i__,cst_Uri$0))
                   {if(! caml_string_notequal(_i__,cst_White_space$0))
                     switch$1 = 11}
                  else
                   switch$1 = 6;
                 else
                  switch$1 = 5;
                else
                 switch$1 = 13;
               else
                switch$1 = 18;
              else
               switch$1 = 20;
             else
              if(caml_string_notequal(_i__,cst_Lcurly$0))
               if(caml_string_notequal(_i__,cst_Lparen$0))
                if(caml_string_notequal(_i__,cst_Number$0))
                 if(caml_string_notequal(_i__,cst_Percentage$0))
                  {if(! caml_string_notequal(_i__,cst_Rbracket$0))
                    switch$1 = 16}
                 else
                  switch$1 = 9;
                else
                 switch$1 = 8;
               else
                switch$1 = 17;
              else
               switch$1 = 19}
           else
            switch$1 = 15;
          else
           {var _jf_=caml_string_compare(_i__,cst_Dimension$0);
            if(0 <= _jf_)
             if(0 < _jf_)
              if(caml_string_notequal(_i__,cst_Eof$0))
               if(caml_string_notequal(_i__,cst_Error$0))
                if(caml_string_notequal(_i__,cst_Function$0))
                 if(caml_string_notequal(_i__,cst_Hash$0))
                  {if(! caml_string_notequal(_i__,cst_Ident$0))switch$1 = 1}
                 else
                  switch$1 = 4;
                else
                 switch$1 = 2;
               else
                switch$1 = 23;
              else
               switch$1 = 22;
             else
              switch$1 = 10;
            else
             if(caml_string_notequal(_i__,cst_Atkeyword$0))
              if(caml_string_notequal(_i__,cst_Colon$0))
               if(caml_string_notequal(_i__,cst_Comma$0))
                if(caml_string_notequal(_i__,cst_Comment$0))
                 {if(! caml_string_notequal(_i__,cst_Delim$0))switch$1 = 7}
                else
                 switch$1 = 21;
               else
                switch$1 = 14;
              else
               switch$1 = 12;
             else
              switch$1 = 3}}
        switch(switch$1)
         {case 1:
           return caml_call2
                   (Sexplib0_Sexp_conv_error[3],error_source_003,sexp_004);
          case 2:
           return caml_call2
                   (Sexplib0_Sexp_conv_error[3],error_source_003,sexp_004);
          case 3:
           return caml_call2
                   (Sexplib0_Sexp_conv_error[3],error_source_003,sexp_004);
          case 4:
           return caml_call2
                   (Sexplib0_Sexp_conv_error[3],error_source_003,sexp_004);
          case 5:
           return caml_call2
                   (Sexplib0_Sexp_conv_error[3],error_source_003,sexp_004);
          case 6:
           return caml_call2
                   (Sexplib0_Sexp_conv_error[3],error_source_003,sexp_004);
          case 7:
           return caml_call2
                   (Sexplib0_Sexp_conv_error[3],error_source_003,sexp_004);
          case 8:
           return caml_call2
                   (Sexplib0_Sexp_conv_error[3],error_source_003,sexp_004);
          case 9:
           return caml_call2
                   (Sexplib0_Sexp_conv_error[3],error_source_003,sexp_004);
          case 10:
           return caml_call2
                   (Sexplib0_Sexp_conv_error[3],error_source_003,sexp_004);
          case 11:
           return caml_call2
                   (Sexplib0_Sexp_conv_error[3],error_source_003,sexp_004);
          case 12:
           return caml_call2
                   (Sexplib0_Sexp_conv_error[3],error_source_003,sexp_004);
          case 13:
           return caml_call2
                   (Sexplib0_Sexp_conv_error[3],error_source_003,sexp_004);
          case 14:
           return caml_call2
                   (Sexplib0_Sexp_conv_error[3],error_source_003,sexp_004);
          case 15:
           return caml_call2
                   (Sexplib0_Sexp_conv_error[3],error_source_003,sexp_004);
          case 16:
           return caml_call2
                   (Sexplib0_Sexp_conv_error[3],error_source_003,sexp_004);
          case 17:
           return caml_call2
                   (Sexplib0_Sexp_conv_error[3],error_source_003,sexp_004);
          case 18:
           return caml_call2
                   (Sexplib0_Sexp_conv_error[3],error_source_003,sexp_004);
          case 19:
           return caml_call2
                   (Sexplib0_Sexp_conv_error[3],error_source_003,sexp_004);
          case 20:
           return caml_call2
                   (Sexplib0_Sexp_conv_error[3],error_source_003,sexp_004);
          case 21:
           return caml_call2
                   (Sexplib0_Sexp_conv_error[3],error_source_003,sexp_004);
          case 22:
           return caml_call2
                   (Sexplib0_Sexp_conv_error[3],error_source_003,sexp_004);
          case 23:
           return caml_call2
                   (Sexplib0_Sexp_conv_error[3],error_source_003,sexp_004)
          }}
      return caml_call2(Sexplib0_Sexp_conv_error[8],error_source_003,sexp_004)}
    function sexp_of_t(param)
     {switch(param)
       {case 0:return _a_;
        case 1:return _b_;
        case 2:return _c_;
        case 3:return _d_;
        case 4:return _e_;
        case 5:return _f_;
        case 6:return _g_;
        case 7:return _h_;
        case 8:return _i_;
        case 9:return _j_;
        case 10:return _k_;
        case 11:return _l_;
        case 12:return _m_;
        case 13:return _n_;
        case 14:return _o_;
        case 15:return _p_;
        case 16:return _q_;
        case 17:return _r_;
        case 18:return _s_;
        case 19:return _t_;
        case 20:return _u_;
        case 21:return _v_;
        default:return _w_}}
    function equal(x_007,x_008)
     {var match=caml_int_compare(x_007,x_008);return 0 === match?1:0}
    function source(t){return t[1]}
    function next_pos(t){return t[2] + t[3] | 0}
    function is_next_eof(t)
     {var _iY_=caml_ml_string_length(t[1]),_iZ_=next_pos(t);
      return caml_call2(Core_Int[99][1],_iZ_,_iY_)}
    function next_char(t)
     {var _iX_=next_pos(t);return runtime.caml_string_get(t[1],_iX_)}
    function reset(t,param){t[3] = param;return 0}
    function consume_1(t){t[3] = t[3] + 1 | 0;return 0}
    function one_char_token(t,tok)
     {if(! caml_call2(Core_Int[99][3],t[3],0))throw [0,Assert_failure,_x_];
      consume_1(t);
      t[4] = tok;
      return 0}
    var
     Error_happened=
      [248,cst_Css_gen_Css_tokenizer_Erro,runtime.caml_fresh_oo_id(0)];
    function error(t){t[4] = 22;throw Error_happened}
    function accept(t,f)
     {if(! is_next_eof(t) && caml_call1(f,next_char(t)))
       {consume_1(t);return 1}
      return 0}
    function accept_char(t,ch){return accept(t,caml_call1(Core_Char[49],ch))}
    function accept_string(t,str)
     {if(caml_call2(Core_Int[99][3],caml_ml_string_length(str),0))return 1;
      var pos=next_pos(t),n=caml_ml_string_length(str);
      return caml_call2
               (Core_Int[99][4],pos + n | 0,caml_ml_string_length(t[1]))
              ?0
              :caml_call3(Core_String[53],t[1],pos,str)
                ?(t[3] = t[3] + n | 0,1)
                :0}
    function expect(t,f){return accept(t,f)?0:error(t)}
    function expect_char(t,ch){return expect(t,caml_call1(Core_Char[49],ch))}
    function many(t,f)
     {for(;;)
       {if(! is_next_eof(t) && caml_call1(f,next_char(t)))
         {consume_1(t);continue}
        return 0}}
    function many1(t,f){expect(t,f);return many(t,f)}
    function plus_or_minus(param)
     {if(43 !== param && 45 !== param)return 0;return 1}
    function nmstart(param)
     {var _iW_=param - 91 | 0,switch$0=0;
      if(5 < _iW_ >>> 0)
       {if(57 >= _iW_ + 26 >>> 0)switch$0 = 1}
      else
       if(4 === _iW_)switch$0 = 1;
      return switch$0?1:0}
    function nmchar(param)
     {var switch$0=0;
      if(65 <= param)
       {var _iV_=param - 91 | 0;
        if(5 < _iV_ >>> 0)
         {if(32 > _iV_)switch$0 = 1}
        else
         if(4 === _iV_)switch$0 = 1}
      else
       if(48 <= param)
        {if(58 > param)switch$0 = 1}
       else
        if(45 === param)switch$0 = 1;
      return switch$0?1:0}
    function ident(t)
     {return accept_char(t,45)
              ?accept_char(t,45)
                ?many(t,nmchar)
                :(expect(t,nmstart),many(t,nmchar))
              :(expect(t,nmstart),many(t,nmchar))}
    function ident_or_function(t)
     {ident(t);return accept_char(t,40)?(t[4] = 1,0):(t[4] = 0,0)}
    function is_whitespace(param)
     {var _iU_=param - 9 | 0,switch$0=0;
      if(4 < _iU_ >>> 0)
       {if(23 === _iU_)switch$0 = 1}
      else
       if(2 !== _iU_)switch$0 = 1;
      return switch$0?1:0}
    function start_ident(prefix,t)
     {var cur=t[3],_iS_=accept_string(t,prefix);
      if(_iS_)
       if(accept_char(t,45))
        var _iT_=accept_char(t,45),b=_iT_ || accept(t,nmstart);
       else
        var b=accept(t,nmstart);
      else
       var b=_iS_;
      reset(t,cur);
      return b}
    function _I_(t)
     {var new_off=next_pos(t);
      t[2] = new_off;
      t[3] = 0;
      if(is_next_eof(t)){t[4] = 21;return 0}
      var quote=next_char(t);
      if(is_whitespace(quote)){many(t,is_whitespace);t[4] = 10;return 0}
      if(94 <= quote)
       {var switcher=quote - 117 | 0;
        if(8 >= switcher >>> 0)
         switch(switcher)
          {case 0:
            if(! caml_call2(Core_Int[99][3],t[3],0))
             throw [0,Assert_failure,_G_];
            var _iN_=next_char(t);
            if(! caml_call2(Core_Char[49],_iN_,117))
             throw [0,Assert_failure,_F_];
            if(! accept_string(t,cst_url))return ident_or_function(t);
            var m=t[3];
            many(t,is_whitespace);
            var _iO_=next_char(t);
            if(! caml_call2(Core_Char[49],_iO_,34))
             {var _iP_=next_char(t);
              if(! caml_call2(Core_Char[49],_iP_,39))
               {many
                 (t,
                  function(c)
                   {var _iQ_=c - 32 | 0;
                    if(9 >= _iQ_ >>> 0)
                     switch(_iQ_)
                      {case 0:
                       case 9:return 0;
                       case 2:
                       case 7:
                       case 8:return error(t)
                       }
                    return caml_call1(Core_Char[18],c)?1:error(t)});
                many(t,is_whitespace);
                expect_char(t,41);
                t[4] = 5;
                return 0}}
            reset(t,m);
            t[4] = 1;
            return 0;
           case 6:return one_char_token(t,18);
           case 8:return one_char_token(t,19)
           }}
      else
       if(34 <= quote)
        switch(quote - 34 | 0)
         {case 1:
           if(! caml_call2(Core_Int[99][3],t[3],0))
            throw [0,Assert_failure,_C_];
           var _iL_=next_char(t);
           if(! caml_call2(Core_Char[49],_iL_,35))
            throw [0,Assert_failure,_B_];
           consume_1(t);
           return accept(t,nmchar)?(many1(t,nmchar),t[4] = 3,0):(t[4] = 6,0);
          case 6:return one_char_token(t,16);
          case 7:return one_char_token(t,17);
          case 10:return one_char_token(t,13);
          case 13:
           if(! caml_call2(Core_Int[99][3],t[3],0))
            throw [0,Assert_failure,_H_];
           if(! accept_string(t,cst$1)){expect_char(t,47);t[4] = 6;return 0}
           for(;;)
            {many(t,function(param){return 42 === param?0:1});
             if(accept_string(t,cst$2)){t[4] = 20;return 0}
             if(accept_char(t,42))continue;
             return error(t)}
          case 24:return one_char_token(t,11);
          case 25:return one_char_token(t,12);
          case 30:
           if(start_ident(cst$4,t))
            {if(! caml_call2(Core_Int[99][3],t[3],0))
              throw [0,Assert_failure,_E_];
             var _iM_=next_char(t);
             if(! caml_call2(Core_Char[49],_iM_,64))
              throw [0,Assert_failure,_D_];
             consume_1(t);
             ident(t);
             t[4] = 2;
             return 0}
           break;
          case 57:return one_char_token(t,14);
          case 59:return one_char_token(t,15);
          case 0:
          case 5:
           if(! caml_call2(Core_Int[99][3],t[3],0))
            throw [0,Assert_failure,_z_];
           var _iK_=next_char(t);
           if(! caml_call2(Core_Char[49],_iK_,quote))
            throw [0,Assert_failure,_y_];
           consume_1(t);
           for(;;)
            {many
              (t,
               function(c)
                {var _iR_=c - 10 | 0,switch$0=0;
                 if(3 < _iR_ >>> 0)
                  {if(82 === _iR_)switch$0 = 1}
                 else
                  if(1 !== _iR_)switch$0 = 1;
                 return switch$0?0:caml_call2(Core_Char[49],c,quote)?0:1});
             if(! accept_char(t,92)){expect_char(t,quote);t[4] = 4;return 0}
             if(accept_char(t,quote))continue;
             var c=next_char(t),switch$0=0;
             if(11 <= c)
              {if(14 > c)
                switch(c - 11 | 0)
                 {case 0:break;
                  case 1:switch$0 = 1;break;
                  default:consume_1(t);accept_char(t,10);continue}}
             else
              if(10 <= c)switch$0 = 1;
             if(switch$0){consume_1(t);continue}
             consume_1(t)}
          case 9:
          case 11:
          case 12:
          case 14:
          case 15:
          case 16:
          case 17:
          case 18:
          case 19:
          case 20:
          case 21:
          case 22:
          case 23:
           var cur=t[3];
           accept(t,plus_or_minus);
           accept_char(t,46);
           var b=accept(t,Core_Char[13]);
           reset(t,cur);
           if(b)
            {if(! caml_call2(Core_Int[99][3],t[3],0))
              throw [0,Assert_failure,_A_];
             accept(t,plus_or_minus);
             if(accept_char(t,46))
              many1(t,Core_Char[13]);
             else
              {many1(t,Core_Char[13]);
               if(accept_char(t,46))many1(t,Core_Char[13])}
             var mark=t[3];
             if
              (accept
                (t,
                 function(param)
                  {if(69 !== param && 101 !== param)return 0;return 1}))
              if(accept(t,plus_or_minus))
               many1(t,Core_Char[13]);
              else
               if(accept(t,Core_Char[13]))
                many(t,Core_Char[13]);
               else
                reset(t,mark);
             return accept_char(t,37)
                     ?(t[4] = 8,0)
                     :start_ident(cst$0,t)?(ident(t),t[4] = 9,0):(t[4] = 7,0)}
           break
          }
      return start_ident(cst$3,t)
              ?ident_or_function(t)
              :(consume_1(t),t[4] = 6,0)}
    function next(t)
     {if(equal(t[4],22))return 0;
      try
       {var _iI_=_I_(t);return _iI_}
      catch(_iJ_)
       {_iJ_ = caml_wrap_exception(_iJ_);
        if(_iJ_ === Error_happened)return 0;
        throw _iJ_}}
    function create(s){var t=[0,s,0,0,10];next(t);return t}
    function slice(t){return [0,t[2],t[3]]}
    function current(t){return t[4]}
    function current_text(t)
     {if(equal(t[4],21))return cst$5;
      var match=slice(t),len=match[2],pos=match[1];
      return caml_call3(Core_String[2],t[1],pos,len)}
    function _J_(param)
     {function test(s)
       {var t=create(s),acc=0;
        for(;;)
         {var
           match=slice(t),
           len=match[2],
           start=match[1],
           acc$0=[0,[0,t[4],start,len],acc];
          if(! equal(t[4],21) && ! equal(t[4],22))
           {next(t);var acc=acc$0;continue}
          var
           x_017=caml_call1(Core_List[34],acc$0),
           _iF_=
            function(param)
             {var
               arg2_013=param[3],
               arg1_012=param[2],
               arg0_011=param[1],
               res0_014=sexp_of_t(arg0_011),
               res1_015=caml_call1(Core[356],arg1_012),
               res2_016=caml_call1(Core[356],arg2_013);
              return [1,[0,res0_014,[0,res1_015,[0,res2_016,0]]]]},
           _iG_=caml_call2(Core[421],_iF_,x_017),
           _iH_=caml_call1(Core_Sexp[82],_iG_);
          return caml_call1(Core[32],_iH_)}}
      var
       Expect_test_collector$0=
        caml_call1(Expect_test_collector[2],Expect_test_config);
      function _hx_(param)
       {test(cst$6);
        var
         _iE_=
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$0),
           398,
           8436,
           8444,
           8450];
        return caml_call1(Expect_test_collector$0[1],_iE_)}
      var
       _hy_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$1),
         398,
         8436,
         8451,
         8466],
       _hz_=
        [0,
         [0,
          _L_,
          _K_,
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$2),
           398,
           8436,
           8444,
           8450],
          _hy_],
         0],
       _hA_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$4),
         396,
         8393,
         8397,
         8467],
       _hB_=
        caml_call1
         (Expect_test_common_File[4][3],cst_b2813aff1a52f8875e7ce14896);
      caml_call9
       (Expect_test_collector$0[3],
        _hB_,
        _hA_,
        cst_css_gen_src_css_tokenizer_$3,
        _M_,
        0,
        _hz_,
        0,
        Inline_test_config,
        _hx_);
      var
       Expect_test_collector$1=
        caml_call1(Expect_test_collector[2],Expect_test_config);
      function _hC_(param)
       {test(cst$7);
        var
         _iD_=
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$5),
           403,
           8537,
           8545,
           8551];
        return caml_call1(Expect_test_collector$1[1],_iD_)}
      var
       _hD_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$6),
         404,
         8552,
         8560,
         8680],
       _hE_=
        [0,
         [0,
          _O_,
          _N_,
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$7),
           403,
           8537,
           8545,
           8551],
          _hD_],
         0],
       _hF_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$9),
         401,
         8476,
         8480,
         8681],
       _hG_=
        caml_call1
         (Expect_test_common_File[4][3],cst_b2813aff1a52f8875e7ce14896$0);
      caml_call9
       (Expect_test_collector$1[3],
        _hG_,
        _hF_,
        cst_css_gen_src_css_tokenizer_$8,
        _P_,
        0,
        _hE_,
        0,
        Inline_test_config,
        _hC_);
      var
       Expect_test_collector$2=
        caml_call1(Expect_test_collector[2],Expect_test_config);
      function _hH_(param)
       {test(cst_foo_bar_baz);
        test(cst_foo_bar);
        test(cst_foo_bar$0);
        test(cst_foo_bar$1);
        test(cst_foo_bar$2);
        test(cst_var);
        test(cst_RGBA);
        var
         _iC_=
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$10),
           415,
           8883,
           8891,
           8897];
        return caml_call1(Expect_test_collector$2[1],_iC_)}
      var
       _hI_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$11),
         416,
         8898,
         8906,
         9158],
       _hJ_=
        [0,
         [0,
          _R_,
          _Q_,
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$12),
           415,
           8883,
           8891,
           8897],
          _hI_],
         0],
       _hK_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$14),
         407,
         8690,
         8694,
         9159],
       _hL_=
        caml_call1
         (Expect_test_common_File[4][3],cst_b2813aff1a52f8875e7ce14896$1);
      caml_call9
       (Expect_test_collector$2[3],
        _hL_,
        _hK_,
        cst_css_gen_src_css_tokenizer_$13,
        _S_,
        0,
        _hJ_,
        0,
        Inline_test_config,
        _hH_);
      var
       Expect_test_collector$3=
        caml_call1(Expect_test_collector[2],Expect_test_config);
      function _hM_(param)
       {test(cst$8);
        var
         _iB_=
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$15),
           428,
           9220,
           9228,
           9234];
        return caml_call1(Expect_test_collector$3[1],_iB_)}
      var
       _hN_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$16),
         428,
         9220,
         9235,
         9267],
       _hO_=
        [0,
         [0,
          _U_,
          _T_,
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$17),
           428,
           9220,
           9228,
           9234],
          _hN_],
         0],
       _hP_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$19),
         426,
         9168,
         9172,
         9268],
       _hQ_=
        caml_call1
         (Expect_test_common_File[4][3],cst_b2813aff1a52f8875e7ce14896$2);
      caml_call9
       (Expect_test_collector$3[3],
        _hQ_,
        _hP_,
        cst_css_gen_src_css_tokenizer_$18,
        _V_,
        0,
        _hO_,
        0,
        Inline_test_config,
        _hM_);
      var
       Expect_test_collector$4=
        caml_call1(Expect_test_collector[2],Expect_test_config);
      function _hR_(param)
       {test(cst_margin_0_5en);
        test(cst_margin_0_5em);
        test(cst_margin_0_5in);
        test(cst_line_height_3cm);
        test(cst_line_height_120);
        test(cst_grid_0_1_foo);
        test(cst_margin_0_5_in);
        test(cst_margin_02e_20);
        test(cst_margin_02e_20$0);
        test(cst_margin_02E_20);
        test(cst_margin_02E_20$0);
        test(cst_margin_02E20);
        test(cst_margin_02e20);
        var
         _iA_=
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$20),
           445,
           9691,
           9699,
           9705];
        return caml_call1(Expect_test_collector$4[1],_iA_)}
      var
       _hS_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$21),
         446,
         9706,
         9714,
         10688],
       _hT_=
        [0,
         [0,
          _X_,
          _W_,
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$22),
           445,
           9691,
           9699,
           9705],
          _hS_],
         0],
       _hU_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$24),
         431,
         9277,
         9281,
         10689],
       _hV_=
        caml_call1
         (Expect_test_common_File[4][3],cst_b2813aff1a52f8875e7ce14896$3);
      caml_call9
       (Expect_test_collector$4[3],
        _hV_,
        _hU_,
        cst_css_gen_src_css_tokenizer_$23,
        _Y_,
        0,
        _hT_,
        0,
        Inline_test_config,
        _hR_);
      var
       Expect_test_collector$5=
        caml_call1(Expect_test_collector[2],Expect_test_config);
      function _hW_(param)
       {test(cst_foo_bar$3);
        test(cst$9);
        test(cst$10);
        var
         _iz_=
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$25),
           466,
           10793,
           10801,
           10807];
        return caml_call1(Expect_test_collector$5[1],_iz_)}
      var
       _hX_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$26),
         466,
         10793,
         10808,
         10867],
       _hY_=
        [0,
         [0,
          ___,
          _Z_,
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$27),
           466,
           10793,
           10801,
           10807],
          _hX_],
         0],
       _hZ_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$29),
         462,
         10698,
         10702,
         10868],
       _h0_=
        caml_call1
         (Expect_test_common_File[4][3],cst_b2813aff1a52f8875e7ce14896$4);
      caml_call9
       (Expect_test_collector$5[3],
        _h0_,
        _hZ_,
        cst_css_gen_src_css_tokenizer_$28,
        _$_,
        0,
        _hY_,
        0,
        Inline_test_config,
        _hW_);
      var
       Expect_test_collector$6=
        caml_call1(Expect_test_collector[2],Expect_test_config);
      function _h1_(param)
       {test(cst_Foo_Bar);
        var
         _iy_=
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$30),
           474,
           10949,
           10957,
           10963];
        return caml_call1(Expect_test_collector$6[1],_iy_)}
      var
       _h2_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$31),
         475,
         10964,
         10972,
         11089],
       _h3_=
        [0,
         [0,
          _ab_,
          _aa_,
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$32),
           474,
           10949,
           10957,
           10963],
          _h2_],
         0],
       _h4_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$34),
         472,
         10877,
         10881,
         11090],
       _h5_=
        caml_call1
         (Expect_test_common_File[4][3],cst_b2813aff1a52f8875e7ce14896$5);
      caml_call9
       (Expect_test_collector$6[3],
        _h5_,
        _h4_,
        cst_css_gen_src_css_tokenizer_$33,
        _ac_,
        0,
        _h3_,
        0,
        Inline_test_config,
        _h1_);
      var
       Expect_test_collector$7=
        caml_call1(Expect_test_collector[2],Expect_test_config);
      function _h6_(param)
       {test(cst_color_f00);
        test(cst_color_rgb_255_0_0);
        test(cst_color_rgb_255_0_0$0);
        var
         _ix_=
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$35),
           482,
           11230,
           11238,
           11244];
        return caml_call1(Expect_test_collector$7[1],_ix_)}
      var
       _h7_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$36),
         483,
         11245,
         11253,
         11616],
       _h8_=
        [0,
         [0,
          _ae_,
          _ad_,
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$37),
           482,
           11230,
           11238,
           11244],
          _h7_],
         0],
       _h9_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$39),
         478,
         11099,
         11103,
         11617],
       _h__=
        caml_call1
         (Expect_test_common_File[4][3],cst_b2813aff1a52f8875e7ce14896$6);
      caml_call9
       (Expect_test_collector$7[3],
        _h__,
        _h9_,
        cst_css_gen_src_css_tokenizer_$38,
        _af_,
        0,
        _h8_,
        0,
        Inline_test_config,
        _h6_);
      var
       Expect_test_collector$8=
        caml_call1(Expect_test_collector[2],Expect_test_config);
      function _h$_(param)
       {test(cst_import_foo_bar);
        var
         _iw_=
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$40),
           491,
           11692,
           11700,
           11706];
        return caml_call1(Expect_test_collector$8[1],_iw_)}
      var
       _ia_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$41),
         492,
         11707,
         11715,
         11794],
       _ib_=
        [0,
         [0,
          _ah_,
          _ag_,
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$42),
           491,
           11692,
           11700,
           11706],
          _ia_],
         0],
       _ic_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$44),
         489,
         11626,
         11630,
         11795],
       _id_=
        caml_call1
         (Expect_test_common_File[4][3],cst_b2813aff1a52f8875e7ce14896$7);
      caml_call9
       (Expect_test_collector$8[3],
        _id_,
        _ic_,
        cst_css_gen_src_css_tokenizer_$43,
        _ai_,
        0,
        _ib_,
        0,
        Inline_test_config,
        _h$_);
      var
       Expect_test_collector$9=
        caml_call1(Expect_test_collector[2],Expect_test_config);
      function _ie_(param)
       {test(cst_red);
        var
         _iv_=
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$45),
           497,
           11861,
           11869,
           11875];
        return caml_call1(Expect_test_collector$9[1],_iv_)}
      var
       _if_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$46),
         497,
         11861,
         11876,
         11915],
       _ig_=
        [0,
         [0,
          _ak_,
          _aj_,
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$47),
           497,
           11861,
           11869,
           11875],
          _if_],
         0],
       _ih_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$49),
         495,
         11804,
         11808,
         11916],
       _ii_=
        caml_call1
         (Expect_test_common_File[4][3],cst_b2813aff1a52f8875e7ce14896$8);
      caml_call9
       (Expect_test_collector$9[3],
        _ii_,
        _ih_,
        cst_css_gen_src_css_tokenizer_$48,
        _al_,
        0,
        _ig_,
        0,
        Inline_test_config,
        _ie_);
      var
       Expect_test_collector$10=
        caml_call1(Expect_test_collector[2],Expect_test_config);
      function _ij_(param)
       {test(cst_url_http_wwww_google_com);
        test(cst_url_http_wwww_google_com$0);
        test(cst_url_http_wwww_google_com$1);
        test(cst_url_http_wwww_google_com$2);
        test(cst_url_http_wwww_google_com$3);
        var
         _iu_=
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$50),
           506,
           12188,
           12196,
           12202];
        return caml_call1(Expect_test_collector$10[1],_iu_)}
      var
       _ik_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$51),
         507,
         12203,
         12211,
         12468],
       _il_=
        [0,
         [0,
          _an_,
          _am_,
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$52),
           506,
           12188,
           12196,
           12202],
          _ik_],
         0],
       _im_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$54),
         500,
         11925,
         11929,
         12469],
       _in_=
        caml_call1
         (Expect_test_common_File[4][3],cst_b2813aff1a52f8875e7ce14896$9);
      caml_call9
       (Expect_test_collector$10[3],
        _in_,
        _im_,
        cst_css_gen_src_css_tokenizer_$53,
        _ao_,
        0,
        _il_,
        0,
        Inline_test_config,
        _ij_);
      var
       Expect_test_collector$11=
        caml_call1(Expect_test_collector[2],Expect_test_config);
      function _io_(param)
       {test(cst_test_19abf2_2);
        test(cst_010_xFFa_o123_n_u_12345_aa);
        test(cst$11);
        var
         _it_=
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$55),
           519,
           12675,
           12683,
           12689];
        return caml_call1(Expect_test_collector$11[1],_it_)}
      var
       _ip_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$56),
         520,
         12690,
         12698,
         12793],
       _iq_=
        [0,
         [0,
          _aq_,
          _ap_,
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$57),
           519,
           12675,
           12683,
           12689],
          _ip_],
         0],
       _ir_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_tokenizer_$59),
         515,
         12478,
         12482,
         12794],
       _is_=
        caml_call1
         (Expect_test_common_File[4][3],cst_b2813aff1a52f8875e7ce14896$10);
      caml_call9
       (Expect_test_collector$11[3],
        _is_,
        _ir_,
        cst_css_gen_src_css_tokenizer_$58,
        _ar_,
        0,
        _iq_,
        0,
        Inline_test_config,
        _io_);
      return 0}
    caml_call8
     (Ppx_inline_test_lib_Runtime[6],
      Inline_test_config,
      cst_tests,
      0,
      cst_css_gen_src_css_tokenizer_$60,
      389,
      0,
      4585,
      _J_);
    caml_call1(Ppx_inline_test_lib_Runtime[3],cst_css_gen$1);
    caml_call1(Expect_test_collector[5][2],0);
    caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2],0);
    caml_call1(Ppx_module_timer_runtime[5],cst_Css_gen_Css_tokenizer$0);
    var
     _as_=[0,t_of_sexp,sexp_of_t,equal],
     Css_gen_Css_tokenizer=
      [0,create,_as_,current,slice,current_text,source,next];
    caml_register_global(954,Css_gen_Css_tokenizer,"Css_gen__Css_tokenizer");
    caml_call1(Ppx_module_timer_runtime[4],cst_Css_gen_Css_parser);
    caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1],cst_css_gen$2);
    caml_call1(Expect_test_collector[5][1],cst_css_gen_src_css_parser_ml);
    caml_call2(Ppx_inline_test_lib_Runtime[2],cst_css_gen$3,cst$12);
    function next$0(ct)
     {for(;;){next(ct);if(caml_call2(_as_[3],ct[4],20))continue;return 0}}
    function skip_white_space(ct)
     {for(;;){if(! caml_call2(_as_[3],ct[4],10))return 0;next$0(ct)}}
    function accept$0(ct,expected)
     {var got=ct[4];return caml_call2(_as_[3],got,expected)?(next$0(ct),1):0}
    function expect$0(ct,expected)
     {var got=ct[4];
      if(caml_call2(_as_[3],got,expected))return next$0(ct);
      var
       _hu_=[0,[1,[0,_at_,[0,caml_call1(_as_[2],got),0]]],0],
       _hv_=[0,[1,[0,_au_,[0,caml_call1(_as_[2],expected),0]]],_hu_],
       _hw_=
        [1,[0,caml_call1(Sexplib0_Sexp_conv[7],cst_Unexpected_token),_hv_]];
      return caml_call1(Core[253],_hw_)}
    function many$0(ct,f){for(;;){if(caml_call1(f,ct))continue;return 0}}
    function any(ct)
     {var match=ct[4];
      switch(match)
       {case 1:
         next$0(ct);
         skip_white_space(ct);
         many$0(ct,any);
         expect$0(ct,17);
         var res=1;
         break;
        case 14:
         next$0(ct);
         skip_white_space(ct);
         expect_any(ct);
         expect$0(ct,15);
         var res=1;
         break;
        case 16:
         next$0(ct);
         skip_white_space(ct);
         expect_any(ct);
         expect$0(ct,17);
         var res=1;
         break;
        case 18:var res=0;break;
        case 15:
        case 17:
        case 19:var res=0;break;
        case 2:
        case 11:
        case 12:var res=0;break;
        case 10:
        case 20:
        case 21:
        case 22:var res=0;break;
        default:next$0(ct);var res=1}
      if(res)skip_white_space(ct);
      return res}
    function expect_any(ct)
     {if(any(ct))return 0;
      var _ht_=caml_call1(Sexplib0_Sexp_conv[7],cst_Expected_any);
      return caml_call1(Core[253],_ht_)}
    function f(ct)
     {var _ho_=any(ct);
      if(_ho_)
       var _hp_=_ho_;
      else
       {var
         _hq_=
          accept$0(ct,18)
           ?(skip_white_space(ct),
             many$0
              (ct,
               function(ct)
                {var _hr_=f(ct);
                 if(_hr_)
                  var _hs_=_hr_;
                 else
                  {if(accept$0(ct,12)){skip_white_space(ct);return 1}
                   var _hs_=0}
                 return _hs_}),
             expect$0(ct,19),
             skip_white_space(ct),
             1)
           :0;
        if(_hq_)
         var _hp_=_hq_;
        else
         {if(accept$0(ct,2)){skip_white_space(ct);return 1}var _hp_=0}}
      return _hp_}
    function expect_value(ct)
     {var _hm_=f(ct)?(many$0(ct,f),1):0;
      if(_hm_)return 0;
      var _hn_=caml_call1(Sexplib0_Sexp_conv[7],cst_Expected_value);
      return caml_call1(Core[253],_hn_)}
    function declaration(ct)
     {var match=slice(ct),ident_len=match[2],ident_start=match[1];
      if(! accept$0(ct,0))return 0;
      skip_white_space(ct);
      expect$0(ct,11);
      skip_white_space(ct);
      var value_start=slice(ct)[1];
      expect_value(ct);
      var
       next_token_start=slice(ct)[1],
       source=ct[1],
       _hk_=
        caml_call3
         (Core_String[2],
          source,
          value_start,
          next_token_start - value_start | 0),
       _hl_=caml_call2(Core_String[68],0,_hk_);
      return [0,
              [0,caml_call3(Core_String[2],source,ident_start,ident_len),_hl_]]}
    function expect_declaration(ct)
     {var match=declaration(ct);
      if(match)
       {var match$0=match[1],value=match$0[2],field=match$0[1];
        return [0,field,value]}
      var _hj_=caml_call1(Sexplib0_Sexp_conv[7],cst_Expected_declaration);
      return caml_call1(Core[253],_hj_)}
    function expect_declaration_list(ct)
     {var res=[0,0];
      function add(kv)
       {if(! kv)return 0;
        var match=kv[1],v=match[2],k=match[1];
        res[1] = [0,[0,k,v],res[1]];
        return 0}
      skip_white_space(ct);
      add(declaration(ct));
      many$0
       (ct,
        function(ct)
         {return accept$0(ct,12)
                  ?(skip_white_space(ct),add(declaration(ct)),1)
                  :0});
      return caml_call1(Core_List[34],res[1])}
    function parse(parser_f,s)
     {var ct=create(s);
      for(;;)
       {if(caml_call2(_as_[3],ct[4],20)){next(ct);continue}
        var
         _hi_=
          function(param)
           {var res=caml_call1(parser_f,ct);expect$0(ct,21);return res};
        return caml_call2(Core_Or_error[33],0,_hi_)}}
    function validate_value(_hh_){return parse(expect_value,_hh_)}
    function parse_declaration_list(s)
     {return parse(expect_declaration_list,s)}
    function test_parser(p,sexp_of_arg,s)
     {var
       r=parse(p,s),
       _hf_=
        [0,
         [2,
          0,
          [11,
           cst$13,
           [24,
            _aw_,
            function(param,custom_printf_002)
             {var
               _hg_=
                caml_call2(Core_Or_error[13],sexp_of_arg,custom_printf_002);
              return caml_call2(Ppx_sexp_conv_lib[1][13],0,_hg_)},
            _av_]]],
         cst_s_sexp_arg_Or_error_t];
      return caml_call3(Core[250],_hf_,s,r)}
    function _ax_(param)
     {var
       Expect_test_collector$0=
        caml_call1(Expect_test_collector[2],Expect_test_config);
      function _gA_(param)
       {var ct=create(s);
        for(;;)
         {if(caml_call2(_as_[3],ct[4],21))
           {var
             _hc_=
              [0,
               caml_call1
                (Expect_test_common_File[1][6],
                 cst_css_gen_src_css_parser_ml$0),
               208,
               5043,
               5051,
               5057];
            caml_call1(Expect_test_collector$0[1],_hc_);
            var
             x_003=validate_value(s),
             _hd_=
              [1,[0,_ay_,[0,caml_call2(Core_Or_error[13],Core[518],x_003),0]]];
            caml_call2(Core[248],0,_hd_);
            var
             _he_=
              [0,
               caml_call1
                (Expect_test_common_File[1][6],
                 cst_css_gen_src_css_parser_ml$1),
               245,
               5585,
               5593,
               5599];
            return caml_call1(Expect_test_collector$0[1],_he_)}
          var _hb_=caml_call1(_as_[2],ct[4]);
          caml_call2(Core[248],0,_hb_);
          next(ct)}}
      var
       _gB_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_parser_ml$2),
         209,
         5058,
         5066,
         5515],
       _gC_=
        [0,
         [0,
          _aA_,
          _az_,
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_parser_ml$3),
           208,
           5043,
           5051,
           5057],
          _gB_],
         0],
       _gD_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_parser_ml$4),
         245,
         5585,
         5600,
         5642],
       _gE_=
        [0,
         [0,
          _aC_,
          _aB_,
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_parser_ml$5),
           245,
           5585,
           5593,
           5599],
          _gD_],
         _gC_],
       _gF_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_parser_ml$7),
         202,
         4845,
         4849,
         5643],
       _gG_=
        caml_call1
         (Expect_test_common_File[4][3],cst_b7a9b3a8ca078e6eda4e6e123f);
      caml_call9
       (Expect_test_collector$0[3],
        _gG_,
        _gF_,
        cst_css_gen_src_css_parser_ml$6,
        _aD_,
        0,
        _gE_,
        0,
        Inline_test_config,
        _gA_);
      var
       Expect_test_collector$1=
        caml_call1(Expect_test_collector[2],Expect_test_config);
      function _gH_(param)
       {var _g__=Core_Unit[15];
        function test(_ha_){return test_parser(expect_value,_g__,_ha_)}
        test(cst_x);
        test(cst_3);
        test(cst_3in);
        test(cst_3$0);
        test(cst_fff);
        test(cst_1_0_auto);
        test(cst_Hello_World);
        test(cst_rgb_0_0_0);
        var
         _g$_=
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_parser_ml$8),
           259,
           5905,
           5913,
           5919];
        return caml_call1(Expect_test_collector$1[1],_g$_)}
      var
       _gI_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_parser_ml$9),
         260,
         5920,
         5928,
         6127],
       _gJ_=
        [0,
         [0,
          _aF_,
          _aE_,
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_parser_ml$10),
           259,
           5905,
           5913,
           5919],
          _gI_],
         0],
       _gK_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_parser_ml$12),
         249,
         5652,
         5656,
         6128],
       _gL_=
        caml_call1
         (Expect_test_common_File[4][3],cst_b7a9b3a8ca078e6eda4e6e123f$0);
      caml_call9
       (Expect_test_collector$1[3],
        _gL_,
        _gK_,
        cst_css_gen_src_css_parser_ml$11,
        _aG_,
        0,
        _gJ_,
        0,
        Inline_test_config,
        _gH_);
      var
       Expect_test_collector$2=
        caml_call1(Expect_test_collector[2],Expect_test_config);
      function _gM_(param)
       {function _g7_(param)
         {var
           arg1_005=param[2],
           arg0_004=param[1],
           res0_006=caml_call1(Core[471],arg0_004),
           res1_007=caml_call1(Core[471],arg1_005);
          return [1,[0,res0_006,[0,res1_007,0]]]}
        function test(_g9_){return test_parser(expect_declaration,_g7_,_g9_)}
        test(cst_flex_1_0_auto);
        test(cst_content_Hello_World);
        test(cst_content_foo);
        test(cst_content_bar);
        var
         _g8_=
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_parser_ml$13),
           279,
           6491,
           6499,
           6505];
        return caml_call1(Expect_test_collector$2[1],_g8_)}
      var
       _gN_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_parser_ml$14),
         280,
         6506,
         6514,
         6759],
       _gO_=
        [0,
         [0,
          _aI_,
          _aH_,
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_parser_ml$15),
           279,
           6491,
           6499,
           6505],
          _gN_],
         0],
       _gP_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_parser_ml$17),
         271,
         6137,
         6141,
         6760],
       _gQ_=
        caml_call1
         (Expect_test_common_File[4][3],cst_b7a9b3a8ca078e6eda4e6e123f$1);
      caml_call9
       (Expect_test_collector$2[3],
        _gQ_,
        _gP_,
        cst_css_gen_src_css_parser_ml$16,
        _aJ_,
        0,
        _gO_,
        0,
        Inline_test_config,
        _gM_);
      var
       Expect_test_collector$3=
        caml_call1(Expect_test_collector[2],Expect_test_config);
      function _gR_(param)
       {test_parser
         (expect_declaration,
          function(param)
           {var
             arg1_009=param[2],
             arg0_008=param[1],
             res0_010=caml_call1(Core[471],arg0_008),
             res1_011=caml_call1(Core[471],arg1_009);
            return [1,[0,res0_010,[0,res1_011,0]]]},
          cst_content);
        var _g5_=caml_call1(Core_Sexp[83],_aK_);
        caml_call1(Core[32],_g5_);
        var
         _g6_=
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_parser_ml$18),
           291,
           7053,
           7061,
           7067];
        return caml_call1(Expect_test_collector$3[1],_g6_)}
      var
       _gS_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_parser_ml$19),
         292,
         7068,
         7076,
         7496],
       _gT_=
        [0,
         [0,
          _aM_,
          _aL_,
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_parser_ml$20),
           291,
           7053,
           7061,
           7067],
          _gS_],
         0],
       _gU_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_parser_ml$22),
         287,
         6769,
         6773,
         7497],
       _gV_=
        caml_call1
         (Expect_test_common_File[4][3],cst_b7a9b3a8ca078e6eda4e6e123f$2);
      caml_call9
       (Expect_test_collector$3[3],
        _gV_,
        _gU_,
        cst_css_gen_src_css_parser_ml$21,
        _aN_,
        0,
        _gT_,
        0,
        Inline_test_config,
        _gR_);
      var
       Expect_test_collector$4=
        caml_call1(Expect_test_collector[2],Expect_test_config);
      function _gW_(param)
       {function _g1_(x_016)
         {function _g4_(param)
           {var
             arg1_013=param[2],
             arg0_012=param[1],
             res0_014=caml_call1(Core[471],arg0_012),
             res1_015=caml_call1(Core[471],arg1_013);
            return [1,[0,res0_014,[0,res1_015,0]]]}
          return caml_call2(Core[421],_g4_,x_016)}
        function test(_g3_)
         {return test_parser(expect_declaration_list,_g1_,_g3_)}
        test(cst_flex_1_0_auto$0);
        test(cst_flex_1_0_auto$1);
        test(cst_background_5d9ab2_url_img_);
        test(cst$14);
        test(cst_flex_1_0_auto_other_sa);
        var
         _g2_=
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_parser_ml$23),
           307,
           7863,
           7871,
           7877];
        return caml_call1(Expect_test_collector$4[1],_g2_)}
      var
       _gX_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_parser_ml$24),
         308,
         7878,
         7886,
         8272],
       _gY_=
        [0,
         [0,
          _aP_,
          _aO_,
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_parser_ml$25),
           307,
           7863,
           7871,
           7877],
          _gX_],
         0],
       _gZ_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_parser_ml$27),
         299,
         7506,
         7510,
         8273],
       _g0_=
        caml_call1
         (Expect_test_common_File[4][3],cst_b7a9b3a8ca078e6eda4e6e123f$3);
      caml_call9
       (Expect_test_collector$4[3],
        _g0_,
        _gZ_,
        cst_css_gen_src_css_parser_ml$26,
        _aQ_,
        0,
        _gY_,
        0,
        Inline_test_config,
        _gW_);
      return 0}
    caml_call8
     (Ppx_inline_test_lib_Runtime[6],
      Inline_test_config,
      cst_tests$0,
      0,
      cst_css_gen_src_css_parser_ml$28,
      200,
      0,
      3484,
      _ax_);
    caml_call1(Ppx_inline_test_lib_Runtime[3],cst_css_gen$4);
    caml_call1(Expect_test_collector[5][2],0);
    caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2],0);
    caml_call1(Ppx_module_timer_runtime[5],cst_Css_gen_Css_parser$0);
    var Css_gen_Css_parser=[0,validate_value,parse_declaration_list];
    caml_register_global(959,Css_gen_Css_parser,"Css_gen__Css_parser");
    caml_call1(Ppx_module_timer_runtime[4],cst_Css_gen);
    caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1],cst_css_gen$5);
    caml_call1(Expect_test_collector[5][1],cst_css_gen_src_css_gen_ml);
    caml_call2(Ppx_inline_test_lib_Runtime[2],cst_css_gen$6,cst$15);
    function t_of_sexp$0(x_008)
     {function _gx_(sexp_006)
       {if(1 === sexp_006[0])
         {var _gy_=sexp_006[1];
          if(_gy_)
           {var _gz_=_gy_[2];
            if(_gz_ && ! _gz_[2])
             {var
               arg1_003=_gz_[1],
               arg0_002=_gy_[1],
               res0_004=caml_call1(Core_Stable[284],arg0_002),
               res1_005=caml_call1(Core_Stable[284],arg1_003);
              return [0,res0_004,res1_005]}}}
        return caml_call3
                (Sexplib0_Sexp_conv_error[2],error_source_007,2,sexp_006)}
      return caml_call2(Core_Stable[272],_gx_,x_008)}
    function sexp_of_t$0(x_013)
     {function _gw_(param)
       {var
         arg1_010=param[2],
         arg0_009=param[1],
         res0_011=caml_call1(Core_Stable[283],arg0_009),
         res1_012=caml_call1(Core_Stable[283],arg1_010);
        return [1,[0,res0_011,[0,res1_012,0]]]}
      return caml_call2(Core_Stable[271],_gw_,x_013)}
    function compare(a_014,b_015)
     {function _gv_(a_016,b_017)
       {var
         t_019=a_016[2],
         t_018=a_016[1],
         t_021=b_017[2],
         t_020=b_017[1],
         n=caml_call2(Core_Stable[356],t_018,t_020);
        return 0 === n?caml_call2(Core_Stable[356],t_019,t_021):n}
      return caml_call3(Core_Stable[359],_gv_,a_014,b_015)}
    var
     _aR_=
      caml_call1(Bin_prot_Shape[7],[0,Core_Stable[60],[0,Core_Stable[60],0]]),
     _aS_=caml_call1(Core_Stable[157],_aR_),
     _aT_=[0,[0,caml_call1(Bin_prot_Shape[2][1],cst_t),0,_aS_],0],
     _aU_=caml_call1(Bin_prot_Shape[4][1],cst_css_gen_src_css_gen_ml_7_4),
     group=caml_call2(Bin_prot_Shape[6],_aU_,_aT_),
     _aV_=caml_call1(Bin_prot_Shape[2][1],cst_t$0),
     bin_shape_t=caml_call1(caml_call2(Bin_prot_Shape[14],group,_aV_),0);
    function bin_size_t(v)
     {function _gs_(param)
       {var
         v2=param[2],
         v1=param[1],
         _gt_=caml_call1(Core_Stable[3],v1),
         size=caml_call2(Bin_prot_Common[23],0,_gt_),
         _gu_=caml_call1(Core_Stable[3],v2);
        return caml_call2(Bin_prot_Common[23],size,_gu_)}
      return caml_call2(Core_Stable[18],_gs_,v)}
    function bin_write_t(buf,pos,v)
     {function _gr_(buf,pos,param)
       {var
         v2=param[2],
         v1=param[1],
         pos$0=caml_call3(Core_Stable[62],buf,pos,v1);
        return caml_call3(Core_Stable[62],buf,pos$0,v2)}
      return caml_call3(caml_call1(Core_Stable[159],_gr_),buf,pos,v)}
    var bin_writer_t=[0,bin_size_t,bin_write_t];
    function bin_read_t(buf,pos_ref,vint)
     {function _gq_(buf,pos_ref)
       {var
         v1=caml_call2(Core_Stable[64],buf,pos_ref),
         v2=caml_call2(Core_Stable[64],buf,pos_ref);
        return [0,v1,v2]}
      return caml_call3(caml_call1(Core_Stable[162],_gq_),buf,pos_ref,vint)}
    function bin_read_t$0(buf,pos_ref)
     {function _gp_(buf,pos_ref)
       {var
         v1=caml_call2(Core_Stable[64],buf,pos_ref),
         v2=caml_call2(Core_Stable[64],buf,pos_ref);
        return [0,v1,v2]}
      return caml_call2(caml_call1(Core_Stable[161],_gp_),buf,pos_ref)}
    var
     bin_reader_t=[0,bin_read_t$0,bin_read_t],
     bin_t=[0,bin_shape_t,bin_writer_t,bin_reader_t];
    function css_global_values_of_sexp(sexp_025)
     {if(0 === sexp_025[0])
       {var atom_023=sexp_025[1];
        return caml_string_notequal(atom_023,cst_Inherit)
                ?caml_string_notequal(atom_023,cst_Initial)
                  ?caml_call1(Sexplib0_Sexp_conv_error[19],0)
                  :418396260
                :-72987685}
      var _gn_=sexp_025[1];
      if(! _gn_)
       return caml_call2
               (Sexplib0_Sexp_conv_error[25],error_source_027,sexp_025);
      var _go_=_gn_[1];
      if(0 !== _go_[0])
       return caml_call2
               (Sexplib0_Sexp_conv_error[24],error_source_027,sexp_025);
      var atom_023$0=_go_[1];
      return caml_string_notequal(atom_023$0,cst_Inherit$0)
              ?caml_string_notequal(atom_023$0,cst_Initial$0)
                ?caml_call1(Sexplib0_Sexp_conv_error[19],0)
                :caml_call2
                  (Sexplib0_Sexp_conv_error[21],error_source_027,sexp_025)
              :caml_call2
                (Sexplib0_Sexp_conv_error[21],error_source_027,sexp_025)}
    function css_global_values_of_sexp$0(sexp_028)
     {try
       {var _gl_=css_global_values_of_sexp(sexp_028);return _gl_}
      catch(_gm_)
       {_gm_ = caml_wrap_exception(_gm_);
        if(_gm_ === Sexplib0_Sexp_conv_error[18])
         return caml_call2
                 (Sexplib0_Sexp_conv_error[20],error_source_029,sexp_028);
        throw _gm_}}
    function sexp_of_css_global_values(param)
     {return 418396260 <= param?_aW_:_aX_}
    var
     _aY_=[0,caml_call2(Bin_prot_Shape[10],cst_Initial$1,0),0],
     _aZ_=[0,caml_call2(Bin_prot_Shape[10],cst_Inherit$1,0),_aY_],
     _a0_=caml_call1(Bin_prot_Shape[4][1],cst_css_gen_src_css_gen_ml_15_),
     _a1_=caml_call2(Bin_prot_Shape[12],_a0_,_aZ_),
     _a2_=
      [0,[0,caml_call1(Bin_prot_Shape[2][1],cst_css_global_values),0,_a1_],0],
     _a3_=caml_call1(Bin_prot_Shape[4][1],cst_css_gen_src_css_gen_ml_14_),
     group$0=caml_call2(Bin_prot_Shape[6],_a3_,_a2_),
     _a4_=caml_call1(Bin_prot_Shape[2][1],cst_css_global_values$0),
     bin_shape_css_global_values=
      caml_call1(caml_call2(Bin_prot_Shape[14],group$0,_a4_),0);
    function compare_css_global_values(a_030,b_031)
     {if(caml_call2(Ppx_compare_lib[1],a_030,b_031))return 0;
      if(418396260 <= a_030)
       {if(418396260 === b_031)return 0}
      else
       if(-72987685 === b_031)return 0;
      return caml_int_compare(a_030,b_031)}
    var
     float_to_string_with_fixed=
      [0,function(digits,f){return caml_call3(Core[257],_a5_,digits,f)}],
     Private=[0,float_to_string_with_fixed];
    function f2s(digits,f){return caml_call2(Private[1][1],digits,f)}
    function t_of_sexp$1(sexp_033)
     {if(0 === sexp_033[0])
       return caml_call2
               (Sexplib0_Sexp_conv_error[16],error_source_052,sexp_033);
      var
       field_sexps_034=sexp_033[1],
       r_035=[0,0],
       g_037=[0,0],
       b_039=[0,0],
       a_041=[0,0],
       duplicates_043=[0,0],
       extra_044=[0,0],
       param=field_sexps_034;
      for(;;)
       {if(param)
         {var _gb_=param[1];
          if(1 === _gb_[0])
           {var _gc_=_gb_[1];
            if(_gc_)
             {var _gd_=_gc_[1];
              if(0 === _gd_[0])
               {var _ge_=_gc_[2],_gf_=_gd_[1],switch$0=0;
                if(! _ge_ || ! _ge_[2])switch$0 = 1;
                if(switch$0)
                 {var
                   tail_054=param[2],
                   field_sexp_046$4=
                    function(_gk_)
                     {function field_sexp_046(param)
                       {if(! _gk_)
                         return caml_call2
                                 (Sexplib0_Sexp_conv_error[10],error_source_052,sexp_033);
                        if(_gk_[2])throw [0,Assert_failure,_a6_];
                        var x_055=_gk_[1];
                        return x_055}
                      return field_sexp_046},
                   field_sexp_046=field_sexp_046$4(_ge_);
                  if(caml_string_notequal(_gf_,cst_a))
                   if(caml_string_notequal(_gf_,cst_b))
                    if(caml_string_notequal(_gf_,cst_g))
                     if(caml_string_notequal(_gf_,cst_r))
                      {if(Sexplib0_Sexp_conv[26][1])
                        extra_044[1] = [0,_gf_,extra_044[1]]}
                     else
                      if(r_035[1])
                       duplicates_043[1] = [0,_gf_,duplicates_043[1]];
                      else
                       {var
                         field_sexp_046$0=field_sexp_046(0),
                         fvalue_051=caml_call1(Core[357],field_sexp_046$0);
                        r_035[1] = [0,fvalue_051]}
                    else
                     if(g_037[1])
                      duplicates_043[1] = [0,_gf_,duplicates_043[1]];
                     else
                      {var
                        field_sexp_046$1=field_sexp_046(0),
                        fvalue_050=caml_call1(Core[357],field_sexp_046$1);
                       g_037[1] = [0,fvalue_050]}
                   else
                    if(b_039[1])
                     duplicates_043[1] = [0,_gf_,duplicates_043[1]];
                    else
                     {var
                       field_sexp_046$2=field_sexp_046(0),
                       fvalue_049=caml_call1(Core[357],field_sexp_046$2);
                      b_039[1] = [0,fvalue_049]}
                  else
                   if(a_041[1])
                    duplicates_043[1] = [0,_gf_,duplicates_043[1]];
                   else
                    {var
                      field_sexp_046$3=field_sexp_046(0),
                      fvalue_048=
                       caml_call2(Core[455],Core_Percent[7],field_sexp_046$3);
                     a_041[1] = [0,fvalue_048]}
                  var param=tail_054;
                  continue}}}}
          caml_call2(Sexplib0_Sexp_conv_error[10],error_source_052,_gb_)}
        if(duplicates_043[1])
         return caml_call3
                 (Sexplib0_Sexp_conv_error[12],
                  error_source_052,
                  duplicates_043[1],
                  sexp_033);
        if(extra_044[1])
         return caml_call3
                 (Sexplib0_Sexp_conv_error[13],
                  error_source_052,
                  extra_044[1],
                  sexp_033);
        var _gg_=r_035[1],_gh_=g_037[1],_gi_=b_039[1],_gj_=a_041[1];
        if(_gg_ && _gh_ && _gi_ && _gj_)
         {var a_042=_gj_[1],b_040=_gi_[1],g_038=_gh_[1],r_036=_gg_[1];
          return [0,r_036,g_038,b_040,a_042]}
        return caml_call3
                (Sexplib0_Sexp_conv_error[15],
                 error_source_052,
                 sexp_033,
                 [0,
                  [0,0 === r_035[1]?1:0,cst_r$0],
                  [0,
                   [0,0 === g_037[1]?1:0,cst_g$0],
                   [0,
                    [0,0 === b_039[1]?1:0,cst_b$0],
                    [0,[0,0 === a_041[1]?1:0,cst_a$0],0]]]])}}
    function sexp_of_t$1(param)
     {var
       a_063=param[4],
       b_061=param[3],
       g_059=param[2],
       r_057=param[1],
       arg_064=caml_call2(Core[454],Core_Percent[8],a_063),
       bnds_056=[0,[1,[0,_a7_,[0,arg_064,0]]],0],
       arg_062=caml_call1(Core[356],b_061),
       bnds_056$0=[0,[1,[0,_a8_,[0,arg_062,0]]],bnds_056],
       arg_060=caml_call1(Core[356],g_059),
       bnds_056$1=[0,[1,[0,_a9_,[0,arg_060,0]]],bnds_056$0],
       arg_058=caml_call1(Core[356],r_057),
       bnds_056$2=[0,[1,[0,_a__,[0,arg_058,0]]],bnds_056$1];
      return [1,bnds_056$2]}
    var
     _a$_=[0,[0,cst_a$1,caml_call1(Core[443],Core_Percent[13])],0],
     _ba_=
      caml_call1
       (Bin_prot_Shape[8],
        [0,
         [0,cst_r$1,Core[344]],
         [0,[0,cst_g$1,Core[344]],[0,[0,cst_b$1,Core[344]],_a$_]]]),
     _bb_=[0,[0,caml_call1(Bin_prot_Shape[2][1],cst_t$1),0,_ba_],0],
     _bc_=caml_call1(Bin_prot_Shape[4][1],cst_css_gen_src_css_gen_ml_29_),
     group$1=caml_call2(Bin_prot_Shape[6],_bc_,_bb_),
     _bd_=caml_call1(Bin_prot_Shape[2][1],cst_t$2),
     bin_shape_t$0=caml_call1(caml_call2(Bin_prot_Shape[14],group$1,_bd_),0);
    function bin_size_t$0(param)
     {var
       v4=param[4],
       v3=param[3],
       v2=param[2],
       v1=param[1],
       _f9_=caml_call1(Core[345],v1),
       size=caml_call2(Bin_prot_Common[23],0,_f9_),
       _f__=caml_call1(Core[345],v2),
       size$0=caml_call2(Bin_prot_Common[23],size,_f__),
       _f$_=caml_call1(Core[345],v3),
       size$1=caml_call2(Bin_prot_Common[23],size$0,_f$_),
       _ga_=caml_call2(Core[444],Core_Percent[9],v4);
      return caml_call2(Bin_prot_Common[23],size$1,_ga_)}
    function bin_write_t$0(buf,pos,param)
     {var
       v4=param[4],
       v3=param[3],
       v2=param[2],
       v1=param[1],
       pos$0=caml_call3(Core[346],buf,pos,v1),
       pos$1=caml_call3(Core[346],buf,pos$0,v2),
       pos$2=caml_call3(Core[346],buf,pos$1,v3);
      return caml_call3(caml_call1(Core[445],Core_Percent[10]),buf,pos$2,v4)}
    var bin_writer_t$0=[0,bin_size_t$0,bin_write_t$0];
    function bin_read_t$1(buf,pos_ref,vint)
     {return caml_call2
              (Bin_prot_Common[19],cst_css_gen_src_css_gen_ml_Col,pos_ref[1])}
    function bin_read_t$2(buf,pos_ref)
     {var
       v_r=caml_call2(Core[348],buf,pos_ref),
       v_g=caml_call2(Core[348],buf,pos_ref),
       v_b=caml_call2(Core[348],buf,pos_ref),
       v_a=caml_call2(caml_call1(Core[447],Core_Percent[11]),buf,pos_ref);
      return [0,v_r,v_g,v_b,v_a]}
    var
     bin_reader_t$0=[0,bin_read_t$2,bin_read_t$1],
     bin_t$0=[0,bin_shape_t$0,bin_writer_t$0,bin_reader_t$0];
    function compare$0(a_065,b_066)
     {if(caml_call2(Ppx_compare_lib[1],a_065,b_066))return 0;
      var n=caml_call2(Core[352],a_065[1],b_066[1]);
      if(0 !== n)return n;
      var n$0=caml_call2(Core[352],a_065[2],b_066[2]);
      if(0 !== n$0)return n$0;
      var n$1=caml_call2(Core[352],a_065[3],b_066[3]);
      if(0 !== n$1)return n$1;
      var _f6_=b_066[4],_f7_=a_065[4];
      function _f8_(a_067,b_068)
       {return caml_call2(Core_Percent[24],a_067,b_068)}
      return caml_call3(Core[451],_f8_,_f7_,_f6_)}
    function create$0(r,g,b,a,param){return [0,r,g,b,a]}
    function t_of_sexp$2(sexp_070)
     {if(0 === sexp_070[0])
       return caml_call2
               (Sexplib0_Sexp_conv_error[16],error_source_089,sexp_070);
      var
       field_sexps_071=sexp_070[1],
       h_072=[0,0],
       s_074=[0,0],
       l_076=[0,0],
       a_078=[0,0],
       duplicates_080=[0,0],
       extra_081=[0,0],
       param=field_sexps_071;
      for(;;)
       {if(param)
         {var _fW_=param[1];
          if(1 === _fW_[0])
           {var _fX_=_fW_[1];
            if(_fX_)
             {var _fY_=_fX_[1];
              if(0 === _fY_[0])
               {var _fZ_=_fX_[2],_f0_=_fY_[1],switch$0=0;
                if(! _fZ_ || ! _fZ_[2])switch$0 = 1;
                if(switch$0)
                 {var
                   tail_091=param[2],
                   field_sexp_083$4=
                    function(_f5_)
                     {function field_sexp_083(param)
                       {if(! _f5_)
                         return caml_call2
                                 (Sexplib0_Sexp_conv_error[10],error_source_089,sexp_070);
                        if(_f5_[2])throw [0,Assert_failure,_be_];
                        var x_092=_f5_[1];
                        return x_092}
                      return field_sexp_083},
                   field_sexp_083=field_sexp_083$4(_fZ_);
                  if(caml_string_notequal(_f0_,cst_a$2))
                   if(caml_string_notequal(_f0_,cst_h))
                    if(caml_string_notequal(_f0_,cst_l))
                     if(caml_string_notequal(_f0_,cst_s))
                      {if(Sexplib0_Sexp_conv[26][1])
                        extra_081[1] = [0,_f0_,extra_081[1]]}
                     else
                      if(s_074[1])
                       duplicates_080[1] = [0,_f0_,duplicates_080[1]];
                      else
                       {var
                         field_sexp_083$0=field_sexp_083(0),
                         fvalue_087=caml_call1(Core_Percent[7],field_sexp_083$0);
                        s_074[1] = [0,fvalue_087]}
                    else
                     if(l_076[1])
                      duplicates_080[1] = [0,_f0_,duplicates_080[1]];
                     else
                      {var
                        field_sexp_083$1=field_sexp_083(0),
                        fvalue_086=caml_call1(Core_Percent[7],field_sexp_083$1);
                       l_076[1] = [0,fvalue_086]}
                   else
                    if(h_072[1])
                     duplicates_080[1] = [0,_f0_,duplicates_080[1]];
                    else
                     {var
                       field_sexp_083$2=field_sexp_083(0),
                       fvalue_088=caml_call1(Core[357],field_sexp_083$2);
                      h_072[1] = [0,fvalue_088]}
                  else
                   if(a_078[1])
                    duplicates_080[1] = [0,_f0_,duplicates_080[1]];
                   else
                    {var
                      field_sexp_083$3=field_sexp_083(0),
                      fvalue_085=
                       caml_call2(Core[455],Core_Percent[7],field_sexp_083$3);
                     a_078[1] = [0,fvalue_085]}
                  var param=tail_091;
                  continue}}}}
          caml_call2(Sexplib0_Sexp_conv_error[10],error_source_089,_fW_)}
        if(duplicates_080[1])
         return caml_call3
                 (Sexplib0_Sexp_conv_error[12],
                  error_source_089,
                  duplicates_080[1],
                  sexp_070);
        if(extra_081[1])
         return caml_call3
                 (Sexplib0_Sexp_conv_error[13],
                  error_source_089,
                  extra_081[1],
                  sexp_070);
        var _f1_=h_072[1],_f2_=s_074[1],_f3_=l_076[1],_f4_=a_078[1];
        if(_f1_ && _f2_ && _f3_ && _f4_)
         {var a_079=_f4_[1],l_077=_f3_[1],s_075=_f2_[1],h_073=_f1_[1];
          return [0,h_073,s_075,l_077,a_079]}
        return caml_call3
                (Sexplib0_Sexp_conv_error[15],
                 error_source_089,
                 sexp_070,
                 [0,
                  [0,0 === h_072[1]?1:0,cst_h$0],
                  [0,
                   [0,0 === s_074[1]?1:0,cst_s$0],
                   [0,
                    [0,0 === l_076[1]?1:0,cst_l$0],
                    [0,[0,0 === a_078[1]?1:0,cst_a$3],0]]]])}}
    function sexp_of_t$2(param)
     {var
       a_100=param[4],
       l_098=param[3],
       s_096=param[2],
       h_094=param[1],
       arg_101=caml_call2(Core[454],Core_Percent[8],a_100),
       bnds_093=[0,[1,[0,_bf_,[0,arg_101,0]]],0],
       arg_099=caml_call1(Core_Percent[8],l_098),
       bnds_093$0=[0,[1,[0,_bg_,[0,arg_099,0]]],bnds_093],
       arg_097=caml_call1(Core_Percent[8],s_096),
       bnds_093$1=[0,[1,[0,_bh_,[0,arg_097,0]]],bnds_093$0],
       arg_095=caml_call1(Core[356],h_094),
       bnds_093$2=[0,[1,[0,_bi_,[0,arg_095,0]]],bnds_093$1];
      return [1,bnds_093$2]}
    var
     _bj_=[0,[0,cst_a$4,caml_call1(Core[443],Core_Percent[13])],0],
     _bk_=
      caml_call1
       (Bin_prot_Shape[8],
        [0,
         [0,cst_h$1,Core[344]],
         [0,
          [0,cst_s$1,Core_Percent[13]],
          [0,[0,cst_l$1,Core_Percent[13]],_bj_]]]),
     _bl_=[0,[0,caml_call1(Bin_prot_Shape[2][1],cst_t$3),0,_bk_],0],
     _bm_=caml_call1(Bin_prot_Shape[4][1],cst_css_gen_src_css_gen_ml_41_),
     group$2=caml_call2(Bin_prot_Shape[6],_bm_,_bl_),
     _bn_=caml_call1(Bin_prot_Shape[2][1],cst_t$4),
     bin_shape_t$1=caml_call1(caml_call2(Bin_prot_Shape[14],group$2,_bn_),0);
    function bin_size_t$1(param)
     {var
       v4=param[4],
       v3=param[3],
       v2=param[2],
       v1=param[1],
       _fS_=caml_call1(Core[345],v1),
       size=caml_call2(Bin_prot_Common[23],0,_fS_),
       _fT_=caml_call1(Core_Percent[9],v2),
       size$0=caml_call2(Bin_prot_Common[23],size,_fT_),
       _fU_=caml_call1(Core_Percent[9],v3),
       size$1=caml_call2(Bin_prot_Common[23],size$0,_fU_),
       _fV_=caml_call2(Core[444],Core_Percent[9],v4);
      return caml_call2(Bin_prot_Common[23],size$1,_fV_)}
    function bin_write_t$1(buf,pos,param)
     {var
       v4=param[4],
       v3=param[3],
       v2=param[2],
       v1=param[1],
       pos$0=caml_call3(Core[346],buf,pos,v1),
       pos$1=caml_call3(Core_Percent[10],buf,pos$0,v2),
       pos$2=caml_call3(Core_Percent[10],buf,pos$1,v3);
      return caml_call3(caml_call1(Core[445],Core_Percent[10]),buf,pos$2,v4)}
    var bin_writer_t$1=[0,bin_size_t$1,bin_write_t$1];
    function bin_read_t$3(buf,pos_ref,vint)
     {return caml_call2
              (Bin_prot_Common[19],
               cst_css_gen_src_css_gen_ml_Col$0,
               pos_ref[1])}
    function bin_read_t$4(buf,pos_ref)
     {var
       v_h=caml_call2(Core[348],buf,pos_ref),
       v_s=caml_call2(Core_Percent[11],buf,pos_ref),
       v_l=caml_call2(Core_Percent[11],buf,pos_ref),
       v_a=caml_call2(caml_call1(Core[447],Core_Percent[11]),buf,pos_ref);
      return [0,v_h,v_s,v_l,v_a]}
    var
     bin_reader_t$1=[0,bin_read_t$4,bin_read_t$3],
     bin_t$1=[0,bin_shape_t$1,bin_writer_t$1,bin_reader_t$1];
    function compare$1(a_102,b_103)
     {if(caml_call2(Ppx_compare_lib[1],a_102,b_103))return 0;
      var n=caml_call2(Core[352],a_102[1],b_103[1]);
      if(0 !== n)return n;
      var n$0=caml_call2(Core_Percent[24],a_102[2],b_103[2]);
      if(0 !== n$0)return n$0;
      var n$1=caml_call2(Core_Percent[24],a_102[3],b_103[3]);
      if(0 !== n$1)return n$1;
      var _fP_=b_103[4],_fQ_=a_102[4];
      function _fR_(a_104,b_105)
       {return caml_call2(Core_Percent[24],a_104,b_105)}
      return caml_call3(Core[451],_fR_,_fQ_,_fP_)}
    function create$1(h,s,l,a,param){return [0,h,s,l,a]}
    function t_of_sexp$3(sexp_109)
     {if(0 === sexp_109[0])
       {var atom_107=sexp_109[1];
        try
         {var _fJ_=css_global_values_of_sexp(sexp_109);return _fJ_}
        catch(_fO_)
         {_fO_ = caml_wrap_exception(_fO_);
          if(_fO_ === Sexplib0_Sexp_conv_error[18])
           return caml_string_notequal(atom_107,cst_HSLA)
                   ?caml_string_notequal(atom_107,cst_Hex)
                     ?caml_string_notequal(atom_107,cst_Name)
                       ?caml_string_notequal(atom_107,cst_RGBA$0)
                         ?caml_string_notequal(atom_107,cst_Var)
                           ?caml_call1(Sexplib0_Sexp_conv_error[19],0)
                           :caml_call2
                             (Sexplib0_Sexp_conv_error[23],error_source_114,sexp_109)
                         :caml_call2
                           (Sexplib0_Sexp_conv_error[23],error_source_114,sexp_109)
                       :caml_call2
                         (Sexplib0_Sexp_conv_error[23],error_source_114,sexp_109)
                     :caml_call2
                       (Sexplib0_Sexp_conv_error[23],error_source_114,sexp_109)
                   :caml_call2
                     (Sexplib0_Sexp_conv_error[23],error_source_114,sexp_109);
          throw _fO_}}
      var _fK_=sexp_109[1];
      if(! _fK_)
       return caml_call2
               (Sexplib0_Sexp_conv_error[25],error_source_114,sexp_109);
      var _fL_=_fK_[1];
      if(0 !== _fL_[0])
       return caml_call2
               (Sexplib0_Sexp_conv_error[24],error_source_114,sexp_109);
      var sexp_args_110=_fK_[2],atom_107$0=_fL_[1];
      if(! caml_string_notequal(atom_107$0,cst_HSLA$0))
       {if(sexp_args_110 && ! sexp_args_110[2])
         {var arg0_122=sexp_args_110[1],res0_123=t_of_sexp$2(arg0_122);
          return [0,802593344,res0_123]}
        return caml_call3
                (Sexplib0_Sexp_conv_error[22],
                 error_source_114,
                 atom_107$0,
                 sexp_109)}
      if(! caml_string_notequal(atom_107$0,cst_Hex$0))
       {if(sexp_args_110 && ! sexp_args_110[2])
         {var
           arg0_116=sexp_args_110[1],
           res0_117=caml_call1(Core[472],arg0_116);
          return [0,3603131,res0_117]}
        return caml_call3
                (Sexplib0_Sexp_conv_error[22],
                 error_source_114,
                 atom_107$0,
                 sexp_109)}
      if(! caml_string_notequal(atom_107$0,cst_Name$0))
       {if(sexp_args_110 && ! sexp_args_110[2])
         {var
           arg0_119=sexp_args_110[1],
           res0_120=caml_call1(Core[472],arg0_119);
          return [0,869834347,res0_120]}
        return caml_call3
                (Sexplib0_Sexp_conv_error[22],
                 error_source_114,
                 atom_107$0,
                 sexp_109)}
      if(caml_string_notequal(atom_107$0,cst_RGBA$1))
       {if(caml_string_notequal(atom_107$0,cst_Var$0))
         try
          {var _fM_=css_global_values_of_sexp(sexp_109);return _fM_}
         catch(_fN_)
          {_fN_ = caml_wrap_exception(_fN_);
           if(_fN_ === Sexplib0_Sexp_conv_error[18])
            return caml_call1(Sexplib0_Sexp_conv_error[19],0);
           throw _fN_}
        if(sexp_args_110 && ! sexp_args_110[2])
         {var
           arg0_112=sexp_args_110[1],
           res0_113=caml_call1(Core[472],arg0_112);
          return [0,4298439,res0_113]}
        return caml_call3
                (Sexplib0_Sexp_conv_error[22],
                 error_source_114,
                 atom_107$0,
                 sexp_109)}
      if(sexp_args_110 && ! sexp_args_110[2])
       {var arg0_125=sexp_args_110[1],res0_126=t_of_sexp$1(arg0_125);
        return [0,912890036,res0_126]}
      return caml_call3
              (Sexplib0_Sexp_conv_error[22],
               error_source_114,
               atom_107$0,
               sexp_109)}
    function t_of_sexp$4(sexp_127)
     {try
       {var _fH_=t_of_sexp$3(sexp_127);return _fH_}
      catch(_fI_)
       {_fI_ = caml_wrap_exception(_fI_);
        if(_fI_ === Sexplib0_Sexp_conv_error[18])
         return caml_call2
                 (Sexplib0_Sexp_conv_error[20],error_source_128,sexp_127);
        throw _fI_}}
    function sexp_of_t$3(v_134)
     {if(typeof v_134 === "number")return sexp_of_css_global_values(v_134);
      var _fG_=v_134[1];
      if(4298439 === _fG_)
       {var v_133=v_134[2];
        return [1,[0,_bo_,[0,caml_call1(Core[471],v_133),0]]]}
      if(869834347 <= _fG_)
       {if(912890036 <= _fG_)
         {var v_129=v_134[2];return [1,[0,_bp_,[0,sexp_of_t$1(v_129),0]]]}
        var v_131=v_134[2];
        return [1,[0,_bq_,[0,caml_call1(Core[471],v_131),0]]]}
      if(802593344 <= _fG_)
       {var v_130=v_134[2];return [1,[0,_br_,[0,sexp_of_t$2(v_130),0]]]}
      var v_132=v_134[2];
      return [1,[0,_bs_,[0,caml_call1(Core[471],v_132),0]]]}
    var
     _bt_=caml_call1(Bin_prot_Shape[4][1],cst_css_gen_src_css_gen_ml_58_),
     _bu_=
      [0,caml_call2(Bin_prot_Shape[11],_bt_,bin_shape_css_global_values),0],
     _bv_=[0,caml_call2(Bin_prot_Shape[10],cst_Var$1,[0,Core[459]]),_bu_],
     _bw_=[0,caml_call2(Bin_prot_Shape[10],cst_Hex$1,[0,Core[459]]),_bv_],
     _bx_=[0,caml_call2(Bin_prot_Shape[10],cst_Name$1,[0,Core[459]]),_bw_],
     _by_=[0,caml_call2(Bin_prot_Shape[10],cst_HSLA$1,[0,bin_shape_t$1]),_bx_],
     _bz_=[0,caml_call2(Bin_prot_Shape[10],cst_RGBA$2,[0,bin_shape_t$0]),_by_],
     _bA_=caml_call1(Bin_prot_Shape[4][1],cst_css_gen_src_css_gen_ml_53_),
     _bB_=caml_call2(Bin_prot_Shape[12],_bA_,_bz_),
     _bC_=[0,[0,caml_call1(Bin_prot_Shape[2][1],cst_t$5),0,_bB_],0],
     _bD_=caml_call1(Bin_prot_Shape[4][1],cst_css_gen_src_css_gen_ml_52_),
     group$3=caml_call2(Bin_prot_Shape[6],_bD_,_bC_),
     _bE_=caml_call1(Bin_prot_Shape[2][1],cst_t$6),
     bin_shape_t$2=caml_call1(caml_call2(Bin_prot_Shape[14],group$3,_bE_),0);
    function bin_size_t$2(v)
     {if(typeof v === "number")return 4;
      var _fF_=v[1];
      if(4298439 === _fF_)
       {var args=v[2],size_args=caml_call1(Core[460],args);
        return caml_call2(Bin_prot_Common[23],size_args,4)}
      if(869834347 <= _fF_)
       {if(912890036 <= _fF_)
         {var args$0=v[2],size_args$0=bin_size_t$0(args$0);
          return caml_call2(Bin_prot_Common[23],size_args$0,4)}
        var args$1=v[2],size_args$1=caml_call1(Core[460],args$1);
        return caml_call2(Bin_prot_Common[23],size_args$1,4)}
      if(802593344 <= _fF_)
       {var args$2=v[2],size_args$2=bin_size_t$1(args$2);
        return caml_call2(Bin_prot_Common[23],size_args$2,4)}
      var args$3=v[2],size_args$3=caml_call1(Core[460],args$3);
      return caml_call2(Bin_prot_Common[23],size_args$3,4)}
    function bin_write_t$2(buf,pos,v)
     {if(typeof v === "number")
       return 418396260 <= v
               ?caml_call3(Bin_prot_Write[30],buf,pos,418396260)
               :caml_call3(Bin_prot_Write[30],buf,pos,-72987685);
      var _fE_=v[1];
      if(4298439 === _fE_)
       {var args=v[2],pos$0=caml_call3(Bin_prot_Write[30],buf,pos,4298439);
        return caml_call3(Core[461],buf,pos$0,args)}
      if(869834347 <= _fE_)
       {if(912890036 <= _fE_)
         {var
           args$0=v[2],
           pos$1=caml_call3(Bin_prot_Write[30],buf,pos,912890036);
          return bin_write_t$0(buf,pos$1,args$0)}
        var
         args$1=v[2],
         pos$2=caml_call3(Bin_prot_Write[30],buf,pos,869834347);
        return caml_call3(Core[461],buf,pos$2,args$1)}
      if(802593344 <= _fE_)
       {var
         args$2=v[2],
         pos$3=caml_call3(Bin_prot_Write[30],buf,pos,802593344);
        return bin_write_t$1(buf,pos$3,args$2)}
      var args$3=v[2],pos$4=caml_call3(Bin_prot_Write[30],buf,pos,3603131);
      return caml_call3(Core[461],buf,pos$4,args$3)}
    var bin_writer_t$2=[0,bin_size_t$2,bin_write_t$2];
    function bin_read_t$5(buf,pos_ref,vint)
     {if(802593344 <= vint)
       {if(869834347 === vint)
         {var arg_1=caml_call2(Core[463],buf,pos_ref);
          return [0,869834347,arg_1]}
        if(912890036 === vint)
         {var arg_1$0=bin_read_t$2(buf,pos_ref);return [0,912890036,arg_1$0]}
        if(802593345 > vint)
         {var arg_1$1=bin_read_t$4(buf,pos_ref);return [0,802593344,arg_1$1]}}
      else
       {if(3603131 === vint)
         {var arg_1$2=caml_call2(Core[463],buf,pos_ref);
          return [0,3603131,arg_1$2]}
        if(4298439 === vint)
         {var arg_1$3=caml_call2(Core[463],buf,pos_ref);
          return [0,4298439,arg_1$3]}}
      if(-72987685 === vint)return -72987685;
      if(418396260 === vint)return 418396260;
      throw Bin_prot_Common[13]}
    function bin_read_t$6(buf,pos_ref)
     {var vint=caml_call2(Bin_prot_Read[29],buf,pos_ref);
      try
       {var _fC_=bin_read_t$5(buf,pos_ref,vint);return _fC_}
      catch(_fD_)
       {_fD_ = caml_wrap_exception(_fD_);
        if(_fD_ === Bin_prot_Common[13])
         return caml_call2(Bin_prot_Common[18],err,pos_ref[1]);
        throw _fD_}}
    var
     bin_reader_t$2=[0,bin_read_t$6,bin_read_t$5],
     bin_t$2=[0,bin_shape_t$2,bin_writer_t$2,bin_reader_t$2];
    function compare$2(a_135,b_136)
     {if(caml_call2(Ppx_compare_lib[1],a_135,b_136))return 0;
      if(typeof a_135 === "number")
       {var switch$0=0;
        if(-72987685 === b_136 || 418396260 === b_136)switch$0 = 1;
        if(switch$0)return compare_css_global_values(a_135,b_136)}
      else
       {var _fB_=a_135[1];
        if(4298439 === _fB_)
         {if(typeof b_136 !== "number" && 4298439 === b_136[1])
           {var right_146=b_136[2],left_145=a_135[2];
            return caml_call2(Core[467],left_145,right_146)}}
        else
         if(869834347 <= _fB_)
          {if(912890036 <= _fB_)
            {if(typeof b_136 !== "number" && 912890036 === b_136[1])
              {var right_138=b_136[2],left_137=a_135[2];
               return compare$0(left_137,right_138)}}
           else
            if(typeof b_136 !== "number" && 869834347 === b_136[1])
             {var right_142=b_136[2],left_141=a_135[2];
              return caml_call2(Core[467],left_141,right_142)}}
         else
          if(802593344 <= _fB_)
           {if(typeof b_136 !== "number" && 802593344 === b_136[1])
             {var right_140=b_136[2],left_139=a_135[2];
              return compare$1(left_139,right_140)}}
          else
           if(typeof b_136 !== "number" && 3603131 === b_136[1])
            {var right_144=b_136[2],left_143=a_135[2];
             return caml_call2(Core[467],left_143,right_144)}}
      return caml_compare(a_135,b_136)}
    caml_call1(Core_Sexpable[1],[0,t_of_sexp$4,sexp_of_t$3]);
    function to_string_css(param)
     {if(typeof param === "number")
       return 418396260 <= param?cst_initial:cst_inherit;
      var _fm_=param[1];
      if(4298439 === _fm_)
       {var var$0=param[2];
        return caml_call2
                (Stdlib_String[6],cst$16,[0,cst_var$0,[0,var$0,_bF_]])}
      if(869834347 <= _fm_)
       {if(912890036 > _fm_){var name=param[2];return name}
        var match=param[2],a=match[4],b=match[3],g=match[2],r=match[1];
        if(a)
         {var
           p=a[1],
           _fn_=[0,cst$17,[0,f2s(2,caml_call1(Core_Percent[72],p)),_bG_]],
           _fo_=[0,cst$18,[0,caml_call1(Core_Int[82],b),_fn_]],
           _fp_=[0,cst$19,[0,caml_call1(Core_Int[82],g),_fo_]],
           _fq_=[0,cst_rgba,[0,caml_call1(Core_Int[82],r),_fp_]];
          return caml_call2(Stdlib_String[6],cst$20,_fq_)}
        var
         _fr_=[0,cst$21,[0,caml_call1(Core_Int[82],b),_bH_]],
         _fs_=[0,cst$22,[0,caml_call1(Core_Int[82],g),_fr_]],
         _ft_=[0,cst_rgb,[0,caml_call1(Core_Int[82],r),_fs_]];
        return caml_call2(Stdlib_String[6],cst$23,_ft_)}
      if(802593344 > _fm_){var hex=param[2];return hex}
      var
       match$0=param[2],
       a$0=match$0[4],
       l=match$0[3],
       s=match$0[2],
       h=match$0[1];
      if(a$0)
       {var
         p$0=a$0[1],
         _fu_=[0,cst$24,[0,f2s(2,caml_call1(Core_Percent[72],p$0)),_bI_]],
         _fv_=[0,cst$25,[0,f2s(0,caml_call1(Core_Percent[74],l)),_fu_]],
         _fw_=[0,cst$26,[0,f2s(0,caml_call1(Core_Percent[74],s)),_fv_]],
         _fx_=[0,cst_hsla,[0,caml_call1(Core_Int[82],h),_fw_]];
        return caml_call2(Stdlib_String[6],cst$27,_fx_)}
      var
       _fy_=[0,cst$28,[0,f2s(0,caml_call1(Core_Percent[74],l)),_bJ_]],
       _fz_=[0,cst$29,[0,f2s(0,caml_call1(Core_Percent[74],s)),_fy_]],
       _fA_=[0,cst_hsl,[0,caml_call1(Core_Int[82],h),_fz_]];
      return caml_call2(Stdlib_String[6],cst$30,_fA_)}
    var
     _bK_=caml_call1(Bin_prot_Shape[4][1],cst_css_gen_src_css_gen_ml_101),
     _bL_=
      [0,caml_call2(Bin_prot_Shape[11],_bK_,bin_shape_css_global_values),0],
     _bM_=[0,caml_call2(Bin_prot_Shape[10],cst_Sub,0),_bL_],
     _bN_=[0,caml_call2(Bin_prot_Shape[10],cst_Super,0),_bM_],
     _bO_=[0,caml_call2(Bin_prot_Shape[10],cst_Justify,0),_bN_],
     _bP_=[0,caml_call2(Bin_prot_Shape[10],cst_Middle,0),_bO_],
     _bQ_=[0,caml_call2(Bin_prot_Shape[10],cst_Bottom,0),_bP_],
     _bR_=[0,caml_call2(Bin_prot_Shape[10],cst_Top,0),_bQ_],
     _bS_=[0,caml_call2(Bin_prot_Shape[10],cst_Center,0),_bR_],
     _bT_=[0,caml_call2(Bin_prot_Shape[10],cst_Right,0),_bS_],
     _bU_=[0,caml_call2(Bin_prot_Shape[10],cst_Left,0),_bT_],
     _bV_=caml_call1(Bin_prot_Shape[4][1],cst_css_gen_src_css_gen_ml_92_),
     _bW_=caml_call2(Bin_prot_Shape[12],_bV_,_bU_),
     _bX_=[0,[0,caml_call1(Bin_prot_Shape[2][1],cst_t$7),0,_bW_],0],
     _bY_=caml_call1(Bin_prot_Shape[4][1],cst_css_gen_src_css_gen_ml_91_),
     group$4=caml_call2(Bin_prot_Shape[6],_bY_,_bX_),
     _bZ_=caml_call1(Bin_prot_Shape[2][1],cst_t$8);
    caml_call1(caml_call2(Bin_prot_Shape[14],group$4,_bZ_),0);
    function t_of_sexp$5(sexp_156)
     {if(0 === sexp_156[0])
       {var atom_154=sexp_156[1];
        try
         {var _fg_=css_global_values_of_sexp(sexp_156);return _fg_}
        catch(_fl_)
         {_fl_ = caml_wrap_exception(_fl_);
          if(_fl_ !== Sexplib0_Sexp_conv_error[18])throw _fl_;
          var switch$0=caml_string_compare(atom_154,cst_Px);
          if(0 <= switch$0)
           {if(0 >= switch$0)
             return caml_call2
                     (Sexplib0_Sexp_conv_error[23],error_source_161,sexp_156);
            if(! caml_string_notequal(atom_154,cst_Px_float))
             return caml_call2
                     (Sexplib0_Sexp_conv_error[23],error_source_161,sexp_156);
            if(! caml_string_notequal(atom_154,cst_Raw))
             return caml_call2
                     (Sexplib0_Sexp_conv_error[23],error_source_161,sexp_156);
            if(! caml_string_notequal(atom_154,cst_Rem))
             return caml_call2
                     (Sexplib0_Sexp_conv_error[23],error_source_161,sexp_156);
            if(! caml_string_notequal(atom_154,cst_Vh))
             return caml_call2
                     (Sexplib0_Sexp_conv_error[23],error_source_161,sexp_156);
            if(! caml_string_notequal(atom_154,cst_Vw))
             return caml_call2
                     (Sexplib0_Sexp_conv_error[23],error_source_161,sexp_156)}
          else
           {if(! caml_string_notequal(atom_154,cst_Ch))
             return caml_call2
                     (Sexplib0_Sexp_conv_error[23],error_source_161,sexp_156);
            if(! caml_string_notequal(atom_154,cst_Em))
             return caml_call2
                     (Sexplib0_Sexp_conv_error[23],error_source_161,sexp_156);
            if(! caml_string_notequal(atom_154,cst_Em_float))
             return caml_call2
                     (Sexplib0_Sexp_conv_error[23],error_source_161,sexp_156);
            if(! caml_string_notequal(atom_154,cst_Percent))
             return caml_call2
                     (Sexplib0_Sexp_conv_error[23],error_source_161,sexp_156);
            if(! caml_string_notequal(atom_154,cst_Pt))
             return caml_call2
                     (Sexplib0_Sexp_conv_error[23],error_source_161,sexp_156)}
          return caml_call1(Sexplib0_Sexp_conv_error[19],0)}}
      var _fh_=sexp_156[1];
      if(! _fh_)
       return caml_call2
               (Sexplib0_Sexp_conv_error[25],error_source_161,sexp_156);
      var _fi_=_fh_[1];
      if(0 !== _fi_[0])
       return caml_call2
               (Sexplib0_Sexp_conv_error[24],error_source_161,sexp_156);
      var
       sexp_args_157=_fh_[2],
       atom_154$0=_fi_[1],
       switch$1=caml_string_compare(atom_154$0,cst_Px$0);
      if(0 <= switch$1)
       {if(0 >= switch$1)
         {if(sexp_args_157 && ! sexp_args_157[2])
           {var
             arg0_169=sexp_args_157[1],
             res0_170=caml_call1(Core[357],arg0_169);
            return [0,17960,res0_170]}
          return caml_call3
                  (Sexplib0_Sexp_conv_error[22],
                   error_source_161,
                   atom_154$0,
                   sexp_156)}
        if(! caml_string_notequal(atom_154$0,cst_Px_float$0))
         {if(sexp_args_157 && ! sexp_args_157[2])
           {var
             arg0_166=sexp_args_157[1],
             res0_167=caml_call1(Core[340],arg0_166);
            return [0,-598646523,res0_167]}
          return caml_call3
                  (Sexplib0_Sexp_conv_error[22],
                   error_source_161,
                   atom_154$0,
                   sexp_156)}
        if(! caml_string_notequal(atom_154$0,cst_Raw$0))
         {if(sexp_args_157 && ! sexp_args_157[2])
           {var
             arg0_190=sexp_args_157[1],
             res0_191=caml_call1(Core[472],arg0_190);
            return [0,4099528,res0_191]}
          return caml_call3
                  (Sexplib0_Sexp_conv_error[22],
                   error_source_161,
                   atom_154$0,
                   sexp_156)}
        if(! caml_string_notequal(atom_154$0,cst_Rem$0))
         {if(sexp_args_157 && ! sexp_args_157[2])
           {var
             arg0_184=sexp_args_157[1],
             res0_185=caml_call1(Core[340],arg0_184);
            return [0,4100410,res0_185]}
          return caml_call3
                  (Sexplib0_Sexp_conv_error[22],
                   error_source_161,
                   atom_154$0,
                   sexp_156)}
        if(! caml_string_notequal(atom_154$0,cst_Vh$0))
         {if(sexp_args_157 && ! sexp_args_157[2])
           {var
             arg0_163=sexp_args_157[1],
             res0_164=caml_call1(Core_Percent[7],arg0_163);
            return [0,19282,res0_164]}
          return caml_call3
                  (Sexplib0_Sexp_conv_error[22],
                   error_source_161,
                   atom_154$0,
                   sexp_156)}
        if(! caml_string_notequal(atom_154$0,cst_Vw$0))
         {if(sexp_args_157 && ! sexp_args_157[2])
           {var
             arg0_159=sexp_args_157[1],
             res0_160=caml_call1(Core_Percent[7],arg0_159);
            return [0,19297,res0_160]}
          return caml_call3
                  (Sexplib0_Sexp_conv_error[22],
                   error_source_161,
                   atom_154$0,
                   sexp_156)}}
      else
       {if(! caml_string_notequal(atom_154$0,cst_Ch$0))
         {if(sexp_args_157 && ! sexp_args_157[2])
           {var
             arg0_187=sexp_args_157[1],
             res0_188=caml_call1(Core[340],arg0_187);
            return [0,15045,res0_188]}
          return caml_call3
                  (Sexplib0_Sexp_conv_error[22],
                   error_source_161,
                   atom_154$0,
                   sexp_156)}
        if(! caml_string_notequal(atom_154$0,cst_Em$0))
         {if(sexp_args_157 && ! sexp_args_157[2])
           {var
             arg0_181=sexp_args_157[1],
             res0_182=caml_call1(Core[357],arg0_181);
            return [0,15496,res0_182]}
          return caml_call3
                  (Sexplib0_Sexp_conv_error[22],
                   error_source_161,
                   atom_154$0,
                   sexp_156)}
        if(! caml_string_notequal(atom_154$0,cst_Em_float$0))
         {if(sexp_args_157 && ! sexp_args_157[2])
           {var
             arg0_178=sexp_args_157[1],
             res0_179=caml_call1(Core[340],arg0_178);
            return [0,498753381,res0_179]}
          return caml_call3
                  (Sexplib0_Sexp_conv_error[22],
                   error_source_161,
                   atom_154$0,
                   sexp_156)}
        if(! caml_string_notequal(atom_154$0,cst_Percent$0))
         {if(sexp_args_157 && ! sexp_args_157[2])
           {var
             arg0_175=sexp_args_157[1],
             res0_176=caml_call1(Core_Percent[7],arg0_175);
            return [0,-970206555,res0_176]}
          return caml_call3
                  (Sexplib0_Sexp_conv_error[22],
                   error_source_161,
                   atom_154$0,
                   sexp_156)}
        if(! caml_string_notequal(atom_154$0,cst_Pt$0))
         {if(sexp_args_157 && ! sexp_args_157[2])
           {var
             arg0_172=sexp_args_157[1],
             res0_173=caml_call1(Core[340],arg0_172);
            return [0,17956,res0_173]}
          return caml_call3
                  (Sexplib0_Sexp_conv_error[22],
                   error_source_161,
                   atom_154$0,
                   sexp_156)}}
      try
       {var _fj_=css_global_values_of_sexp(sexp_156);return _fj_}
      catch(_fk_)
       {_fk_ = caml_wrap_exception(_fk_);
        if(_fk_ === Sexplib0_Sexp_conv_error[18])
         return caml_call1(Sexplib0_Sexp_conv_error[19],0);
        throw _fk_}}
    function t_of_sexp$6(sexp_192)
     {try
       {var _fe_=t_of_sexp$5(sexp_192);return _fe_}
      catch(_ff_)
       {_ff_ = caml_wrap_exception(_ff_);
        if(_ff_ === Sexplib0_Sexp_conv_error[18])
         return caml_call2
                 (Sexplib0_Sexp_conv_error[20],error_source_193,sexp_192);
        throw _ff_}}
    function sexp_of_t$4(v_205)
     {if(typeof v_205 === "number")return sexp_of_css_global_values(v_205);
      var _fd_=v_205[1];
      if(17960 <= _fd_)
       {if(19297 > _fd_)
         {if(19282 <= _fd_)
           {var v_203=v_205[2];
            return [1,[0,_b4_,[0,caml_call1(Core_Percent[8],v_203),0]]]}
          var v_201=v_205[2];
          return [1,[0,_b5_,[0,caml_call1(Core[356],v_201),0]]]}
        if(4100410 <= _fd_)
         {if(498753381 <= _fd_)
           {var v_198=v_205[2];
            return [1,[0,_b0_,[0,caml_call1(Core[339],v_198),0]]]}
          var v_196=v_205[2];
          return [1,[0,_b1_,[0,caml_call1(Core[339],v_196),0]]]}
        if(4099528 <= _fd_)
         {var v_194=v_205[2];
          return [1,[0,_b2_,[0,caml_call1(Core[471],v_194),0]]]}
        var v_204=v_205[2];
        return [1,[0,_b3_,[0,caml_call1(Core_Percent[8],v_204),0]]]}
      if(-598646523 === _fd_)
       {var v_202=v_205[2];
        return [1,[0,_b6_,[0,caml_call1(Core[339],v_202),0]]]}
      if(15496 <= _fd_)
       {if(17956 <= _fd_)
         {var v_200=v_205[2];
          return [1,[0,_b7_,[0,caml_call1(Core[339],v_200),0]]]}
        var v_197=v_205[2];
        return [1,[0,_b8_,[0,caml_call1(Core[356],v_197),0]]]}
      if(15045 <= _fd_)
       {var v_195=v_205[2];
        return [1,[0,_b9_,[0,caml_call1(Core[339],v_195),0]]]}
      var v_199=v_205[2];
      return [1,[0,_b__,[0,caml_call1(Core_Percent[8],v_199),0]]]}
    var
     _b$_=caml_call1(Bin_prot_Shape[4][1],cst_css_gen_src_css_gen_ml_133),
     _ca_=
      [0,caml_call2(Bin_prot_Shape[11],_b$_,bin_shape_css_global_values),0],
     _cb_=
      [0,caml_call2(Bin_prot_Shape[10],cst_Vw$1,[0,Core_Percent[13]]),_ca_],
     _cc_=
      [0,caml_call2(Bin_prot_Shape[10],cst_Vh$1,[0,Core_Percent[13]]),_cb_],
     _cd_=[0,caml_call2(Bin_prot_Shape[10],cst_Px_float$1,[0,Core[327]]),_cc_],
     _ce_=[0,caml_call2(Bin_prot_Shape[10],cst_Px$1,[0,Core[344]]),_cd_],
     _cf_=[0,caml_call2(Bin_prot_Shape[10],cst_Pt$1,[0,Core[327]]),_ce_],
     _cg_=
      [0,
       caml_call2(Bin_prot_Shape[10],cst_Percent$1,[0,Core_Percent[13]]),
       _cf_],
     _ch_=[0,caml_call2(Bin_prot_Shape[10],cst_Em_float$1,[0,Core[327]]),_cg_],
     _ci_=[0,caml_call2(Bin_prot_Shape[10],cst_Em$1,[0,Core[344]]),_ch_],
     _cj_=[0,caml_call2(Bin_prot_Shape[10],cst_Rem$1,[0,Core[327]]),_ci_],
     _ck_=[0,caml_call2(Bin_prot_Shape[10],cst_Ch$1,[0,Core[327]]),_cj_],
     _cl_=[0,caml_call2(Bin_prot_Shape[10],cst_Raw$1,[0,Core[459]]),_ck_],
     _cm_=caml_call1(Bin_prot_Shape[4][1],cst_css_gen_src_css_gen_ml_122),
     _cn_=caml_call2(Bin_prot_Shape[12],_cm_,_cl_),
     _co_=[0,[0,caml_call1(Bin_prot_Shape[2][1],cst_t$9),0,_cn_],0],
     _cp_=caml_call1(Bin_prot_Shape[4][1],cst_css_gen_src_css_gen_ml_121),
     group$5=caml_call2(Bin_prot_Shape[6],_cp_,_co_),
     _cq_=caml_call1(Bin_prot_Shape[2][1],cst_t$10),
     bin_shape_t$3=caml_call1(caml_call2(Bin_prot_Shape[14],group$5,_cq_),0);
    function compare$3(a_206,b_207)
     {if(caml_call2(Ppx_compare_lib[1],a_206,b_207))return 0;
      if(typeof a_206 === "number")
       {var switch$0=0;
        if(-72987685 === b_207 || 418396260 === b_207)switch$0 = 1;
        if(switch$0)return compare_css_global_values(a_206,b_207)}
      else
       {var _fc_=a_206[1];
        if(17960 <= _fc_)
         {if(19297 <= _fc_)
           {if(4100410 <= _fc_)
             {if(498753381 <= _fc_)
               {if(typeof b_207 !== "number" && 498753381 === b_207[1])
                 {var right_217=b_207[2],left_216=a_206[2];
                  return caml_call2(Core[335],left_216,right_217)}}
              else
               if(typeof b_207 !== "number" && 4100410 === b_207[1])
                {var right_213=b_207[2],left_212=a_206[2];
                 return caml_call2(Core[335],left_212,right_213)}}
            else
             if(4099528 <= _fc_)
              {if(typeof b_207 !== "number" && 4099528 === b_207[1])
                {var right_209=b_207[2],left_208=a_206[2];
                 return caml_call2(Core[467],left_208,right_209)}}
             else
              if(typeof b_207 !== "number" && 19297 === b_207[1])
               {var right_229=b_207[2],left_228=a_206[2];
                return caml_call2(Core_Percent[24],left_228,right_229)}}
          else
           if(19282 <= _fc_)
            {if(typeof b_207 !== "number" && 19282 === b_207[1])
              {var right_227=b_207[2],left_226=a_206[2];
               return caml_call2(Core_Percent[24],left_226,right_227)}}
           else
            if(typeof b_207 !== "number" && 17960 === b_207[1])
             {var right_223=b_207[2],left_222=a_206[2];
              return caml_call2(Core[352],left_222,right_223)}}
        else
         if(-598646523 === _fc_)
          {if(typeof b_207 !== "number" && -598646523 === b_207[1])
            {var right_225=b_207[2],left_224=a_206[2];
             return caml_call2(Core[335],left_224,right_225)}}
         else
          if(15496 <= _fc_)
           {if(17956 <= _fc_)
             {if(typeof b_207 !== "number" && 17956 === b_207[1])
               {var right_221=b_207[2],left_220=a_206[2];
                return caml_call2(Core[335],left_220,right_221)}}
            else
             if(typeof b_207 !== "number" && 15496 === b_207[1])
              {var right_215=b_207[2],left_214=a_206[2];
               return caml_call2(Core[352],left_214,right_215)}}
          else
           if(15045 <= _fc_)
            {if(typeof b_207 !== "number" && 15045 === b_207[1])
              {var right_211=b_207[2],left_210=a_206[2];
               return caml_call2(Core[335],left_210,right_211)}}
           else
            if(typeof b_207 !== "number" && -970206555 === b_207[1])
             {var right_219=b_207[2],left_218=a_206[2];
              return caml_call2(Core_Percent[24],left_218,right_219)}}
      return caml_compare(a_206,b_207)}
    function to_string_css$0(param)
     {if(typeof param === "number")
       return 418396260 <= param?cst_initial$1:cst_inherit$1;
      var _e3_=param[1];
      if(17960 <= _e3_)
       {if(19297 > _e3_)
         {if(19282 <= _e3_)
           {var
             p$0=param[2],
             _e7_=[0,f2s(2,caml_call1(Core_Percent[74],p$0)),_cu_];
            return caml_call2(Stdlib_String[6],cst$34,_e7_)}
          var i=param[2],_e8_=[0,caml_call1(Core_Int[82],i),_cv_];
          return caml_call2(Stdlib_String[6],cst$35,_e8_)}
        if(4100410 <= _e3_)
         {if(498753381 <= _e3_)
           {var f=param[2],_e4_=[0,f2s(2,f),_cr_];
            return caml_call2(Stdlib_String[6],cst$31,_e4_)}
          var f$0=param[2],_e5_=[0,f2s(2,f$0),_cs_];
          return caml_call2(Stdlib_String[6],cst$32,_e5_)}
        if(4099528 <= _e3_){var s=param[2];return s}
        var p=param[2],_e6_=[0,f2s(2,caml_call1(Core_Percent[74],p)),_ct_];
        return caml_call2(Stdlib_String[6],cst$33,_e6_)}
      if(-598646523 === _e3_)
       {var f$1=param[2],_e9_=[0,f2s(2,f$1),_cw_];
        return caml_call2(Stdlib_String[6],cst$36,_e9_)}
      if(15496 <= _e3_)
       {if(17956 <= _e3_)
         {var p$1=param[2],_e__=[0,f2s(2,p$1),_cx_];
          return caml_call2(Stdlib_String[6],cst$37,_e__)}
        var i$0=param[2],_e$_=[0,caml_call1(Core_Int[82],i$0),_cy_];
        return caml_call2(Stdlib_String[6],cst$38,_e$_)}
      if(15045 <= _e3_)
       {var c=param[2],_fa_=[0,f2s(2,c),_cz_];
        return caml_call2(Stdlib_String[6],cst$39,_fa_)}
      var p$2=param[2],_fb_=[0,f2s(2,caml_call1(Core_Percent[74],p$2)),_cA_];
      return caml_call2(Stdlib_String[6],cst$40,_fb_)}
    var
     percent100=[0,-970206555,caml_call1(Core_Percent[73],100.)],
     _cB_=caml_call1(Bin_prot_Shape[4][1],cst_css_gen_src_css_gen_ml_159),
     _cC_=[0,caml_call2(Bin_prot_Shape[11],_cB_,bin_shape_t$3),0],
     _cD_=[0,caml_call2(Bin_prot_Shape[10],cst_Auto,0),_cC_],
     _cE_=caml_call1(Bin_prot_Shape[4][1],cst_css_gen_src_css_gen_ml_158),
     _cF_=caml_call2(Bin_prot_Shape[12],_cE_,_cD_),
     _cG_=[0,[0,caml_call1(Bin_prot_Shape[2][1],cst_t$11),0,_cF_],0],
     _cH_=caml_call1(Bin_prot_Shape[4][1],cst_css_gen_src_css_gen_ml_157),
     group$6=caml_call2(Bin_prot_Shape[6],_cH_,_cG_),
     _cI_=caml_call1(Bin_prot_Shape[2][1],cst_t$12);
    caml_call1(caml_call2(Bin_prot_Shape[14],group$6,_cI_),0);
    function compare$4(a_232,b_233)
     {if(caml_call2(Ppx_compare_lib[1],a_232,b_233))return 0;
      var switch$0=0;
      if(typeof a_232 === "number" && 726666127 <= a_232)
       {if(726666127 === b_233)return 0}
      else
       switch$0 = 1;
      if(switch$0)
       {var switch$1=0;
        if(typeof b_233 === "number")
         {if(-72987685 !== b_233 && 418396260 !== b_233)switch$1 = 1}
        else
         {var _e2_=b_233[1];
          if(17960 <= _e2_)
           {if(4099528 <= _e2_)
             {if(4100410 !== _e2_ && 498753381 !== _e2_ && 4099529 <= _e2_)
               switch$1 = 1}
            else
             if(19282 !== _e2_ && 19297 !== _e2_ && 17961 <= _e2_)switch$1 = 1}
          else
           if(15045 <= _e2_)
            {if(15496 !== _e2_ && 17956 !== _e2_ && 15046 <= _e2_)switch$1 = 1}
           else
            if(-970206555 !== _e2_ && -598646523 !== _e2_)switch$1 = 1}
        if(! switch$1)return compare$3(a_232,b_233)}
      return caml_compare(a_232,b_233)}
    function t_of_sexp$7(sexp_239)
     {if(0 === sexp_239[0])
       {var atom_237=sexp_239[1];
        if(! caml_string_notequal(atom_237,cst_Auto$0))return 726666127;
        try
         {var _eW_=t_of_sexp$5(sexp_239);return _eW_}
        catch(_e1_)
         {_e1_ = caml_wrap_exception(_e1_);
          if(_e1_ === Sexplib0_Sexp_conv_error[18])
           return caml_call1(Sexplib0_Sexp_conv_error[19],0);
          throw _e1_}}
      var _eX_=sexp_239[1];
      if(! _eX_)
       return caml_call2
               (Sexplib0_Sexp_conv_error[25],error_source_241,sexp_239);
      var _eY_=_eX_[1];
      if(0 !== _eY_[0])
       return caml_call2
               (Sexplib0_Sexp_conv_error[24],error_source_241,sexp_239);
      var atom_237$0=_eY_[1];
      try
       {var _eZ_=t_of_sexp$5(sexp_239);return _eZ_}
      catch(_e0_)
       {_e0_ = caml_wrap_exception(_e0_);
        if(_e0_ === Sexplib0_Sexp_conv_error[18])
         return caml_string_notequal(atom_237$0,cst_Auto$1)
                 ?caml_call1(Sexplib0_Sexp_conv_error[19],0)
                 :caml_call2
                   (Sexplib0_Sexp_conv_error[21],error_source_241,sexp_239);
        throw _e0_}}
    function t_of_sexp$8(sexp_242)
     {try
       {var _eU_=t_of_sexp$7(sexp_242);return _eU_}
      catch(_eV_)
       {_eV_ = caml_wrap_exception(_eV_);
        if(_eV_ === Sexplib0_Sexp_conv_error[18])
         return caml_call2
                 (Sexplib0_Sexp_conv_error[20],error_source_243,sexp_242);
        throw _eV_}}
    function sexp_of_t$5(v_244)
     {if(typeof v_244 === "number" && 726666127 <= v_244)return _cJ_;
      return sexp_of_t$4(v_244)}
    function to_string_css$1(l)
     {if(typeof l === "number" && 726666127 <= l)return cst_auto;
      return to_string_css$0(l)}
    function value_map(o,f){return caml_call3(Core_Option[36],o,cst$41,f)}
    function symbol(t1,t2){return caml_call2(Core[157],t1,t2)}
    function concat(l){return caml_call1(Core_List[133],l)}
    function to_string_list(_eT_){return _eT_}
    function to_string_css$2(t)
     {function _eR_(param)
       {var value=param[2],field=param[1];
        return caml_call2
                (Stdlib_String[6],cst$43,[0,field,[0,cst$42,[0,value,0]]])}
      var _eS_=caml_call2(Core_List[72],t,_eR_);
      return caml_call2(Core_String[32],_cK_,_eS_)}
    function of_string_css_exn(s)
     {var _eQ_=parse_declaration_list(s);
      return caml_call1(Core_Or_error[36],_eQ_)}
    function create_raw(field,value){return [0,[0,field,value],0]}
    var should_validate=[0,0],Expert=[0,should_validate];
    function create$2(field,value)
     {if(Expert[1][1])
       {var _eP_=validate_value(value);caml_call1(Core_Or_error[36],_eP_)}
      return create_raw(field,value)}
    var empty=0,_cL_=Core_List[8];
    function create_placement(name,length)
     {return create$2(name,to_string_css$0(length))}
    function left(_eO_){return create_placement(cst_left$0,_eO_)}
    function top(_eN_){return create_placement(cst_top$0,_eN_)}
    function bottom(_eM_){return create_placement(cst_bottom$0,_eM_)}
    function right(_eL_){return create_placement(cst_right$0,_eL_)}
    function position(tp,bt,lt,rt,pos)
     {var
       value=
        332360020 === pos
         ?cst_fixed
         :982536398 <= pos
           ?1070408009 <= pos?cst_sticky:cst_static
           :491227799 <= pos?cst_absolute:cst_relative,
       pos$0=create$2(cst_position,value);
      function convert(opt_l,f)
       {return caml_call3(Core_Option[36],opt_l,empty,f)}
      var
       _eI_=[0,convert(bt,bottom),0],
       _eJ_=[0,convert(rt,right),_eI_],
       _eK_=[0,convert(lt,left),_eJ_];
      return concat([0,pos$0,[0,convert(tp,top),_eK_]])}
    function box_sizing(v)
     {var
       value=
        367114405 <= v
         ?418396260 <= v?cst_initial$2:cst_content_box
         :92813848 <= v?cst_border_box:cst_inherit$2;
      return create_raw(cst_box_sizing,value)}
    function display(v)
     {var
       value=
        179740044 <= v
         ?498536372 <= v
           ?781663065 <= v
             ?870530776 <= v?cst_none:cst_flex
             :504440814 <= v?cst_table:cst_list_item
           :418396260 <= v?cst_initial$3:cst_inline_grid
         :-841728391 <= v
           ?-72987685 <= v
             ?168351231 <= v?cst_inline_flex:cst_inherit$3
             :-266363961 <= v?cst_inline_block:cst_inline
           :-936778451 <= v?cst_block:cst_inline_table;
      return create_raw(cst_display,value)}
    function visibility(v)
     {var
       value=
        -72987685 === v
         ?cst_inherit$4
         :418396260 <= v
           ?507973005 <= v?cst_collapse:cst_initial$4
           :19559306 <= v?cst_hidden:cst_visible;
      return create_raw(cst_visibility,value)}
    function make_overflow(field,v)
     {var
       value=
        -67548115 <= v
         ?418396260 <= v
           ?726666127 <= v?cst_auto$0:cst_initial$5
           :19559306 <= v?cst_hidden$0:cst_scroll
         :-72987685 <= v?cst_inherit$5:cst_visible$0;
      return create_raw(field,value)}
    function overflow(_eH_){return make_overflow(cst_overflow,_eH_)}
    function overflow_x(_eG_){return make_overflow(cst_overflow_x,_eG_)}
    function overflow_y(_eF_){return make_overflow(cst_overflow_y,_eF_)}
    function z_index(i)
     {return create_raw(cst_z_index,caml_call1(Core_Int[82],i))}
    function opacity(i){return create_raw(cst_opacity,f2s(6,i))}
    function create_length_field(field,l)
     {return create_raw(field,to_string_css$1(l))}
    function white_space(v)
     {var
       value=
        -397426005 <= v
         ?4003843 <= v
           ?418396260 <= v?cst_initial$6:cst_pre
           :-72987685 <= v?cst_inherit$6:cst_nowrap
         :-932293946 === v
           ?cst_pre_wrap
           :-453122489 <= v?cst_normal:cst_pre_line;
      return create$2(cst_white_space$1,value)}
    function font_size(_eE_){return create_length_field(cst_font_size,_eE_)}
    function font_family(l)
     {return create_raw(cst_font_family,caml_call2(Core_String[32],_cM_,l))}
    function font_style(s)
     {var
       value=
        -115526511 === s
         ?cst_oblique
         :418396260 <= s
           ?989373200 <= s?cst_italic:cst_initial$7
           :-72987685 <= s?cst_inherit$7:cst_normal$0;
      return create_raw(cst_font_style,value)}
    function font_weight(s)
     {if(typeof s === "number")
       var
        value=
         -72987685 <= s
          ?418396260 <= s
            ?737455525 <= s?cst_bold:cst_initial$8
            :347568466 <= s?cst_bolder:cst_inherit$8
          :-415993181 <= s?cst_lighter:cst_normal$1;
      else
       var i=s[2],value=caml_call1(Core_Int[82],i);
      return create_raw(cst_font_weight,value)}
    var bold=font_weight(737455525);
    function font_variant(s)
     {var
       value=
        57678329 <= s
         ?418396260 <= s?cst_initial$9:cst_small_caps
         :-72987685 <= s?cst_inherit$9:cst_normal$2;
      return create_raw(cst_font_variant,value)}
    function font(size,family,style,weight,variant,param)
     {var
       _ez_=[0,caml_call2(Core_Option[29],variant,font_variant),0],
       _eA_=[0,caml_call2(Core_Option[29],weight,font_weight),_ez_],
       _eB_=[0,caml_call2(Core_Option[29],style,font_style),_eA_],
       _eC_=[0,[0,font_family(family)],_eB_],
       _eD_=[0,[0,font_size(size)],_eC_];
      return concat(caml_call1(Core_List[124],_eD_))}
    function create_with_color(field,color)
     {return create_raw(field,to_string_css(color))}
    function color(color){return create_with_color(cst_color,color)}
    function background_color(color)
     {return create_with_color(cst_background_color,color)}
    function fill(color){return create_with_color(cst_fill,color)}
    function stops_to_string(stops)
     {function _ev_(param)
       {var
         color=param[2],
         pct=param[1],
         _ex_=[0,cst$44,[0,f2s(6,caml_call1(Core_Percent[74],pct)),_cN_]],
         _ey_=[0,to_string_css(color),_ex_];
        return caml_call2(Stdlib_String[6],cst$45,_ey_)}
      var _ew_=caml_call2(Core_List[72],stops,_ev_);
      return caml_call2(Core_String[32],_cO_,_ew_)}
    function background_image(spec)
     {var _eq_=spec[1];
      if(4252495 === _eq_)
       var
        url=spec[2],
        value=caml_call2(Stdlib_String[6],cst$46,[0,cst_url$0,[0,url,_cP_]]);
      else
       if(411117168 <= _eq_)
        var
         match=spec[2],
         stops=match[1],
         _er_=[0,cst_radial_gradient,[0,stops_to_string(stops),_cQ_]],
         value=caml_call2(Stdlib_String[6],cst$47,_er_);
       else
        var
         _es_=spec[2],
         stops$0=_es_[2],
         match$0=_es_[1],
         direction=match$0[2],
         _et_=[0,cst_deg,[0,stops_to_string(stops$0),_cR_]],
         _eu_=
          [0,cst_linear_gradient,[0,caml_call1(Core_Int[82],direction),_et_]],
         value=caml_call2(Stdlib_String[6],cst$48,_eu_);
      return create_raw(cst_background_image,value)}
    function create_alignment(field,a)
     {var
       _ep_=
        15943541 <= a
         ?418396260 <= a
           ?847852583 <= a
             ?980392437 <= a?cst_center:cst_left
             :437082891 <= a?cst_bottom:cst_initial$0
           :401437019 <= a?cst_super:cst_middle
         :-72987685 === a
           ?cst_inherit$0
           :4153696 <= a
             ?4202101 <= a?cst_top:cst_sub
             :-57574468 <= a?cst_right:cst_justify;
      return create_raw(field,_ep_)}
    function text_align(_eo_){return create_alignment(cst_text_align,_eo_)}
    function horizontal_align(_en_)
     {return create_alignment(cst_horizontal_align,_en_)}
    function vertical_align(_em_)
     {return create_alignment(cst_vertical_align,_em_)}
    function float$0(f)
     {var
       value=
        -57574468 === f
         ?cst_right$1
         :847852583 <= f
           ?870530776 <= f?cst_none$0:cst_left$1
           :418396260 <= f?cst_initial$10:cst_inherit$10;
      return create_raw(cst_float,value)}
    function width(_el_){return create_length_field(cst_width,_el_)}
    function min_width(_ek_){return create_length_field(cst_min_width,_ek_)}
    function max_width(_ej_){return create_length_field(cst_max_width,_ej_)}
    function height(_ei_){return create_length_field(cst_height,_ei_)}
    function min_height(_eh_){return create_length_field(cst_min_height,_eh_)}
    function max_height(_eg_){return create_length_field(cst_max_height,_eg_)}
    function padding_top(_ef_)
     {return create_length_field(cst_padding_top,_ef_)}
    function padding_bottom(_ee_)
     {return create_length_field(cst_padding_bottom,_ee_)}
    function padding_left(_ed_)
     {return create_length_field(cst_padding_left,_ed_)}
    function padding_right(_ec_)
     {return create_length_field(cst_padding_right,_ec_)}
    function padding(top,bottom,left,right,param)
     {var
       m=Core_Option[29],
       _d__=[0,caml_call2(m,right,padding_right),0],
       _d$_=[0,caml_call2(m,left,padding_left),_d__],
       _ea_=[0,caml_call2(m,bottom,padding_bottom),_d$_],
       _eb_=[0,caml_call2(m,top,padding_top),_ea_];
      return concat(caml_call1(Core_List[124],_eb_))}
    function uniform_padding(l){return padding([0,l],[0,l],[0,l],[0,l],0)}
    function margin_top(_d9_){return create_length_field(cst_margin_top,_d9_)}
    function margin_bottom(_d8_)
     {return create_length_field(cst_margin_bottom,_d8_)}
    function margin_left(_d7_)
     {return create_length_field(cst_margin_left,_d7_)}
    function margin_right(_d6_)
     {return create_length_field(cst_margin_right,_d6_)}
    function margin(top,bottom,left,right,param)
     {var
       m=Core_Option[29],
       _d2_=[0,caml_call2(m,right,margin_right),0],
       _d3_=[0,caml_call2(m,left,margin_left),_d2_],
       _d4_=[0,caml_call2(m,bottom,margin_bottom),_d3_],
       _d5_=[0,caml_call2(m,top,margin_top),_d4_];
      return concat(caml_call1(Core_List[124],_d5_))}
    function uniform_margin(l){return margin([0,l],[0,l],[0,l],[0,l],0)}
    function concat2v(v1,v2)
     {if(! caml_string_notequal(v1,cst$49))return v2;
      if(! caml_string_notequal(v2,cst$50))return v1;
      var _d1_=caml_call2(Core[18],cst$51,v2);
      return caml_call2(Core[18],v1,_d1_)}
    function concat3v(v1,v2,v3){return concat2v(concat2v(v1,v2),v3)}
    function border_value(width,color,style,param)
     {var
       style$0=
        -72987685 <= style
         ?19559306 <= style
           ?418396260 <= style
             ?870530776 <= style?cst_none$1:cst_initial$11
             :334701579 <= style?cst_solid:cst_hidden$1
           :-57723893 <= style?cst_ridge:cst_inherit$11
         :-783455043 <= style
           ?-423359734 <= style
             ?-413163727 <= style?cst_double:cst_dotted
             :-696935855 <= style?cst_dashed:cst_inset
           :-793243622 <= style?cst_groove:cst_outset,
       width$0=value_map(width,to_string_css$0),
       color$0=value_map(color,to_string_css);
      return concat3v(width$0,style$0,color$0)}
    function create_border(side,param)
     {if(side)
       var
        _dZ_=side[1],
        _d0_=
         437082891 <= _dZ_
          ?847852583 <= _dZ_?cst_border_left:cst_border_bottom
          :4202101 <= _dZ_?cst_border_top:cst_border_right,
        field=_d0_;
      else
       var field=cst_border;
      return function(width,color,style,param)
       {return create_raw(field,border_value(width,color,style,0))}}
    function border_top(width,color,style,param)
     {return caml_call4(create_border(_cS_,0),width,color,style,0)}
    function border_bottom(width,color,style,param)
     {return caml_call4(create_border(_cT_,0),width,color,style,0)}
    function border_left(width,color,style,param)
     {return caml_call4(create_border(_cU_,0),width,color,style,0)}
    function border_right(width,color,style,param)
     {return caml_call4(create_border(_cV_,0),width,color,style,0)}
    function border(width,color,style,param)
     {return caml_call4(create_border(0,0),width,color,style,0)}
    function outline(width,color,style,param)
     {return create_raw(cst_outline,border_value(width,color,style,0))}
    function border_collapse(v)
     {var
       value=
        418396260 <= v
         ?507973005 <= v?cst_collapse$0:cst_initial$12
         :-72987685 <= v?cst_inherit$12:cst_separate;
      return create_raw(cst_border_collapse,value)}
    function border_spacing(_dY_)
     {return create_length_field(cst_border_spacing,_dY_)}
    function border_radius(l)
     {return create$2(cst_border_radius,to_string_css$0(l))}
    function text_decoration(style,color,line,param)
     {function _dU_(param)
       {return 418396260 <= param
                ?698610924 <= param
                  ?870530776 <= param?cst_none$2:cst_underline
                  :518168424 <= param?cst_overline:cst_initial$13
                :-72987685 <= param?cst_inherit$13:cst_line_through}
      var
       _dV_=caml_call2(Core_List[72],line,_dU_),
       line$0=caml_call2(Core_String[32],_cW_,_dV_);
      if(style)
       var
        _dW_=style[1],
        _dX_=
         -72987685 <= _dW_
          ?418396260 <= _dW_
            ?969642477 <= _dW_?cst_wavy:cst_initial$14
            :334701579 <= _dW_?cst_solid$0:cst_inherit$14
          :-423359734 === _dW_
            ?cst_dotted$0
            :-413163727 <= _dW_?cst_double$0:cst_dashed$0,
        style$0=_dX_;
      else
       var style$0=cst$52;
      var
       color$0=value_map(color,to_string_css),
       value=concat3v(line$0,style$0,color$0);
      return create_raw(cst_text_decoration,value)}
    function item_alignment_to_string_css(param)
     {return -354838363 <= param
              ?726666127 <= param
                ?980392437 <= param?cst_center$0:cst_auto$1
                :555646908 <= param?cst_flex_start:cst_baseline
              :-401431371 <= param?cst_flex_end:cst_stretch}
    function flex_container(opt,_dP_,_dO_,align_items,justify_content,param)
     {if(opt)var sth=opt[1],inline=sth;else var inline=0;
      if(_dP_)var sth$0=_dP_[1],direction=sth$0;else var direction=4102650;
      if(_dO_)var sth$1=_dO_[1],wrap=sth$1;else var wrap=-397426005;
      var
       direction$0=
        175421085 <= direction
         ?744569753 <= direction?cst_column_reverse:cst_row_reverse
         :4102650 <= direction?cst_row:cst_column,
       wrap$0=
        899936909 === wrap
         ?cst_wrap_reverse
         :970483178 <= wrap?cst_wrap:cst_nowrap$0;
      if(align_items)
       var
        a=align_items[1],
        align_items$0=
         create_raw(cst_align_items,item_alignment_to_string_css(a));
      else
       var align_items$0=empty;
      if(justify_content)
       var
        a$0=justify_content[1],
        _dQ_=
         -337248785 <= a$0
          ?934993376 <= a$0
            ?980392437 <= a$0?cst_center$1:cst_space_evenly
            :555646908 <= a$0?cst_flex_start$0:cst_space_between
          :-401431371 <= a$0?cst_flex_end$0:cst_space_around,
        justify_content$0=create_raw(cst_justify_content,_dQ_);
      else
       var justify_content$0=empty;
      var
       _dR_=
        [0,
         create_raw(cst_flex_wrap,wrap$0),
         [0,align_items$0,[0,justify_content$0,0]]],
       _dS_=[0,create_raw(cst_flex_direction,direction$0),_dR_],
       _dT_=inline?168351231:781663065;
      return concat([0,display(_dT_),_dS_])}
    function flex_item(order,opt,_dI_,grow,param)
     {if(opt)var sth=opt[1],basis=sth;else var basis=726666127;
      if(_dI_)var sth$0=_dI_[1],shrink=sth$0;else var shrink=1.;
      function _dJ_(i)
       {return create_raw(cst_order,caml_call1(Core_Int[82],i))}
      var
       _dK_=caml_call2(Core_Option[29],order,_dJ_),
       _dL_=caml_call1(Core_Option[46],_dK_),
       order$0=caml_call1(Core_List[27],_dL_),
       basis$0=to_string_css$1(basis),
       _dM_=[0,cst$54,[0,f2s(6,shrink),[0,cst$53,[0,basis$0,0]]]],
       _dN_=[0,f2s(6,grow),_dM_],
       flex=create_raw(cst_flex$0,caml_call2(Stdlib_String[6],cst$55,_dN_));
      return concat([0,flex,[0,order$0,0]])}
    function align_self(a)
     {var value=item_alignment_to_string_css(a);
      return create_raw(cst_align_self,value)}
    function resize(value)
     {var
       value$0=
        208994564 <= value
         ?737457313 <= value
           ?870530776 <= value?cst_none$3:cst_both
           :418396260 <= value?cst_initial$15:cst_horizontal
         :-72987685 <= value?cst_inherit$15:cst_vertical;
      return create_raw(cst_resize,value$0)}
    function animation
     (name,
      duration,
      delay,
      direction,
      fill_mode,
      iter_count,
      timing_function,
      param)
     {var m=Core_Option[29];
      function span_to_string(s)
       {var _dH_=[0,f2s(2,caml_call1(Core_Time_ns[1][91],s)),_cX_];
        return caml_call2(Stdlib_String[6],cst$56,_dH_)}
      var
       direction$0=
        caml_call2
         (m,
          direction,
          function(d)
           {var
             value=
              -397582078 <= d
               ?-72987685 <= d
                 ?418396260 <= d?cst_initial$16:cst_inherit$16
                 :-326048323 <= d?cst_alternate_reverse:cst_reverse
               :-453122489 <= d?cst_normal$3:cst_alternate;
            return create_raw(cst_animation_direction,value)}),
       fill_mode$0=
        caml_call2
         (m,
          fill_mode,
          function(f)
           {var
             value=
              418396260 <= f
               ?813329168 <= f
                 ?870530776 <= f?cst_none$4:cst_backwards
                 :737457313 <= f?cst_both$0:cst_initial$17
               :90990382 <= f?cst_forwards:cst_inherit$17;
            return create_raw(cst_animation_fill_mode,value)}),
       _dB_=[0,direction$0,[0,fill_mode$0,0]],
       _dC_=
        [0,
         caml_call2
          (m,
           timing_function,
           function(value)
            {return create_raw(cst_animation_timing_function,value)}),
         _dB_],
       _dD_=
        [0,
         caml_call2
          (m,
           iter_count,
           function(i)
            {return create_raw
                     (cst_animation_iteration_count,caml_call1(Core_Int[82],i))}),
         _dC_],
       _dE_=
        [0,
         caml_call2
          (m,
           delay,
           function(s)
            {return create_raw(cst_animation_delay,span_to_string(s))}),
         _dD_],
       _dF_=
        [0,
         [0,create_raw(cst_animation_duration,span_to_string(duration))],
         _dE_],
       _dG_=[0,[0,create_raw(cst_animation_name,name)],_dF_];
      return concat(caml_call1(Core_List[124],_dG_))}
    function user_select(s)
     {var
       value=
        870530776 <= s
         ?936573133 <= s?cst_text:cst_none$5
         :726666127 <= s?cst_auto$2:cst_all;
      return create_raw(cst_user_select,value)}
    function _cY_(param)
     {var
       Expect_test_collector$0=
        caml_call1(Expect_test_collector[2],Expect_test_config);
      function _c__(param)
       {function t(css)
         {var s=to_string_css$2(css),s2=to_string_css$2(of_string_css_exn(s));
          caml_call1(Core[32],s);
          return caml_call1(Core[32],s2)}
        var _dx_=overflow(-67548115);
        t(symbol(flex_item(0,0,0,1.,0),_dx_));
        var _dy_=border(0,0,-696935855,0);
        t(symbol(flex_container(_c0_,_cZ_,0,0,0,0),_dy_));
        t(color([0,912890036,[0,100,100,100,0]]));
        var _dz_=caml_call1(Core_Percent[71],0.6);
        t
         (color
           ([0,802593344,[0,100,caml_call1(Core_Percent[71],0.75),_dz_,0]]));
        t(create$2(cst_content$0,cst$57));
        var
         _dA_=
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_gen_ml$0),
           819,
           20492,
           20500,
           20506];
        return caml_call1(Expect_test_collector$0[1],_dA_)}
      var
       _c$_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_gen_ml$1),
         820,
         20507,
         20515,
         20928],
       _da_=
        [0,
         [0,
          _c2_,
          _c1_,
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_gen_ml$2),
           819,
           20492,
           20500,
           20506],
          _c$_],
         0],
       _db_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_gen_ml$4),
         800,
         19776,
         19780,
         20929],
       _dc_=
        caml_call1
         (Expect_test_common_File[4][3],cst_137ca25006cdd4c0890902a6ef);
      caml_call9
       (Expect_test_collector$0[3],
        _dc_,
        _db_,
        cst_css_gen_src_css_gen_ml$3,
        _c3_,
        0,
        _da_,
        0,
        Inline_test_config,
        _c__);
      var
       Expect_test_collector$1=
        caml_call1(Expect_test_collector[2],Expect_test_config);
      function _dd_(param)
       {function p(x){return caml_call1(Core_Percent[71],x)}
        function c(s){return [0,869834347,s]}
        function t(css)
         {var _dw_=to_string_css$2(css);return caml_call1(Core[32],_dw_)}
        var
         _dk_=
          [0,912890036,[0,100,50,30,[0,caml_call1(Core_Percent[71],0.75)]]],
         _dl_=[0,[0,p(1.),_dk_],0],
         _dm_=c(cst_red$0),
         _dn_=[0,[0,p(0.4),_dm_],_dl_],
         _do_=c(cst_ff0000),
         _dp_=[0,[0,p(0.2),_do_],_dn_],
         _dq_=c(cst_black);
        t(background_image([0,-464780630,[0,_c4_,[0,[0,p(0.),_dq_],_dp_]]]));
        var
         _dr_=
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_gen_ml$5),
           851,
           21532,
           21540,
           21546];
        caml_call1(Expect_test_collector$1[1],_dr_);
        var _ds_=c(cst_red$1),_dt_=[0,[0,p(1.),_ds_],0],_du_=c(cst_black$0);
        t(background_image([0,411117168,[0,[0,[0,p(0.),_du_],_dt_]]]));
        var
         _dv_=
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_gen_ml$6),
           856,
           21804,
           21812,
           21818];
        return caml_call1(Expect_test_collector$1[1],_dv_)}
      var
       _de_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_gen_ml$7),
         852,
         21547,
         21555,
         21688],
       _df_=
        [0,
         [0,
          _c6_,
          _c5_,
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_gen_ml$8),
           851,
           21532,
           21540,
           21546],
          _de_],
         0],
       _dg_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_gen_ml$9),
         856,
         21804,
         21819,
         21892],
       _dh_=
        [0,
         [0,
          _c8_,
          _c7_,
          [0,
           caml_call1
            (Expect_test_common_File[1][6],cst_css_gen_src_css_gen_ml$10),
           856,
           21804,
           21812,
           21818],
          _dg_],
         _df_],
       _di_=
        [0,
         caml_call1
          (Expect_test_common_File[1][6],cst_css_gen_src_css_gen_ml$12),
         833,
         20938,
         20942,
         21893],
       _dj_=
        caml_call1
         (Expect_test_common_File[4][3],cst_137ca25006cdd4c0890902a6ef$0);
      caml_call9
       (Expect_test_collector$1[3],
        _dj_,
        _di_,
        cst_css_gen_src_css_gen_ml$11,
        _c9_,
        0,
        _dh_,
        0,
        Inline_test_config,
        _dd_);
      return 0}
    caml_call8
     (Ppx_inline_test_lib_Runtime[6],
      Inline_test_config,
      cst_tests$1,
      0,
      cst_css_gen_src_css_gen_ml$13,
      798,
      0,
      2173,
      _cY_);
    caml_call1(Ppx_inline_test_lib_Runtime[3],cst_css_gen$7);
    caml_call1(Expect_test_collector[5][2],0);
    caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2],0);
    caml_call1(Ppx_module_timer_runtime[5],cst_Css_gen$0);
    var
     Css_gen$0=
      [0,
       sexp_of_css_global_values,
       css_global_values_of_sexp$0,
       css_global_values_of_sexp,
       compare_css_global_values,
       [0,
        [0,
         t_of_sexp$1,
         sexp_of_t$1,
         bin_size_t$0,
         bin_write_t$0,
         bin_read_t$2,
         bin_read_t$1,
         bin_shape_t$0,
         bin_writer_t$0,
         bin_reader_t$0,
         bin_t$0,
         compare$0,
         create$0],
        [0,
         t_of_sexp$2,
         sexp_of_t$2,
         bin_size_t$1,
         bin_write_t$1,
         bin_read_t$4,
         bin_read_t$3,
         bin_shape_t$1,
         bin_writer_t$1,
         bin_reader_t$1,
         bin_t$1,
         compare$1,
         create$1],
        sexp_of_t$3,
        t_of_sexp$4,
        t_of_sexp$3,
        bin_size_t$2,
        bin_write_t$2,
        bin_read_t$6,
        bin_read_t$5,
        bin_shape_t$2,
        bin_writer_t$2,
        bin_reader_t$2,
        bin_t$2,
        compare$2,
        to_string_css],
       [0,
        sexp_of_t$4,
        t_of_sexp$6,
        t_of_sexp$5,
        compare$3,
        percent100,
        to_string_css$0],
       [0,sexp_of_t$5,t_of_sexp$8,t_of_sexp$7,compare$4,to_string_css$1],
       t_of_sexp$0,
       sexp_of_t$0,
       compare,
       bin_size_t,
       bin_write_t,
       bin_read_t$0,
       bin_read_t,
       bin_shape_t,
       bin_writer_t,
       bin_reader_t,
       bin_t,
       create$2,
       empty,
       _cL_,
       position,
       top,
       bottom,
       left,
       right,
       symbol,
       symbol,
       concat,
       to_string_list,
       to_string_css$2,
       of_string_css_exn,
       box_sizing,
       display,
       visibility,
       overflow,
       overflow_x,
       overflow_y,
       z_index,
       opacity,
       font_size,
       font_family,
       font_style,
       font_weight,
       font_variant,
       font,
       bold,
       create_with_color,
       color,
       background_color,
       background_image,
       fill,
       text_align,
       horizontal_align,
       vertical_align,
       white_space,
       float$0,
       width,
       min_width,
       max_width,
       height,
       min_height,
       max_height,
       padding_top,
       padding_bottom,
       padding_left,
       padding_right,
       uniform_padding,
       padding,
       margin_top,
       margin_bottom,
       margin_left,
       margin_right,
       uniform_margin,
       margin,
       border_top,
       border_bottom,
       border_left,
       border_right,
       border,
       border_radius,
       border_collapse,
       border_spacing,
       outline,
       text_decoration,
       flex_container,
       flex_item,
       align_self,
       resize,
       animation,
       user_select,
       [0,
        [0,
         t_of_sexp$0,
         sexp_of_t$0,
         compare,
         bin_size_t,
         bin_write_t,
         bin_read_t$0,
         bin_read_t,
         bin_shape_t,
         bin_writer_t,
         bin_reader_t,
         bin_t]],
       Expert,
       Private];
    caml_register_global(972,Css_gen$0,"Css_gen");
    return}
  (globalThis));

//# sourceMappingURL=data:application/json;base64,
